{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs": [
    {
      "artifacts": [
        {
          "location": {
            "uri": "file:///mnt/c/Users/jaafa/Desktop/5555/ai-teddy/.codacy/tools-configs/eslint.config.mjs"
          }
        },
        {
          "location": {
            "uri": "file:///mnt/c/Users/jaafa/Desktop/5555/ai-teddy/tests/e2e/playwright.config.js"
          }
        }
      ],
      "results": [
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "index": 1,
                  "uri": "file:///mnt/c/Users/jaafa/Desktop/5555/ai-teddy/tests/e2e/playwright.config.js"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 2,
                  "startColumn": 35,
                  "startLine": 2
                }
              }
            }
          ],
          "message": {
            "text": "'require' is not defined."
          },
          "ruleId": "no-undef",
          "ruleIndex": 0
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "index": 1,
                  "uri": "file:///mnt/c/Users/jaafa/Desktop/5555/ai-teddy/tests/e2e/playwright.config.js"
                },
                "region": {
                  "endColumn": 7,
                  "endLine": 4,
                  "startColumn": 1,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "'module' is not defined."
          },
          "ruleId": "no-undef",
          "ruleIndex": 0
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "index": 1,
                  "uri": "file:///mnt/c/Users/jaafa/Desktop/5555/ai-teddy/tests/e2e/playwright.config.js"
                },
                "region": {
                  "endColumn": 24,
                  "endLine": 7,
                  "startColumn": 17,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "'process' is not defined."
          },
          "ruleId": "no-undef",
          "ruleIndex": 0
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "index": 1,
                  "uri": "file:///mnt/c/Users/jaafa/Desktop/5555/ai-teddy/tests/e2e/playwright.config.js"
                },
                "region": {
                  "endColumn": 19,
                  "endLine": 8,
                  "startColumn": 12,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "'process' is not defined."
          },
          "ruleId": "no-undef",
          "ruleIndex": 0
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "index": 1,
                  "uri": "file:///mnt/c/Users/jaafa/Desktop/5555/ai-teddy/tests/e2e/playwright.config.js"
                },
                "region": {
                  "endColumn": 19,
                  "endLine": 9,
                  "startColumn": 12,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "'process' is not defined."
          },
          "ruleId": "no-undef",
          "ruleIndex": 0
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "index": 1,
                  "uri": "file:///mnt/c/Users/jaafa/Desktop/5555/ai-teddy/tests/e2e/playwright.config.js"
                },
                "region": {
                  "endColumn": 34,
                  "endLine": 45,
                  "startColumn": 27,
                  "startLine": 45
                }
              }
            }
          ],
          "message": {
            "text": "'process' is not defined."
          },
          "ruleId": "no-undef",
          "ruleIndex": 0
        }
      ],
      "tool": {
        "driver": {
          "informationUri": "https://eslint.org",
          "name": "ESLint",
          "rules": null,
          "version": "8.57.0"
        }
      }
    },
    {
      "results": [
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ai.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Method _send_hallucination_prompt has 53 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ai.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 319
                }
              }
            }
          ],
          "message": {
            "text": "Method _calculate_overload_metrics has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ai.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 371
                }
              }
            }
          ],
          "message": {
            "text": "Method test_ai_model_recovery has 51 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recovery.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Method restore_all_systems has 53 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos_metrics.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 175
                }
              }
            }
          ],
          "message": {
            "text": "Method _calculate_performance_metrics has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos_metrics.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 226
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_services has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emergency_response.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 235
                }
              }
            }
          ],
          "message": {
            "text": "Method _execute_emergency_action has 53 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 191
                }
              }
            }
          ],
          "message": {
            "text": "Method process_on_edge has 53 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "use_cases.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 25
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_vocabulary_nlp has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "base_provider.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 230
                }
              }
            }
          ],
          "message": {
            "text": "Method _categorize_message has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "child_aggregate_validator.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Method validate has a cyclomatic complexity of 15 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation_compatibility_assessor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 133
                }
              }
            }
          ],
          "message": {
            "text": "Method _score_topic_by_keywords has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation_compatibility_assessor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 145
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_conversation_history_compatibility has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation_compatibility_assessor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 183
                }
              }
            }
          ],
          "message": {
            "text": "Method _assess_time_appropriateness has a cyclomatic complexity of 20 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation_maintenance_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 194
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_performance_bottlenecks has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation_maintenance_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 243
                }
              }
            }
          ],
          "message": {
            "text": "Method _calculate_performance_metrics has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 214
                }
              }
            }
          ],
          "message": {
            "text": "Method get_mood_trend has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "edge_ai_integration_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 381
                }
              }
            }
          ],
          "message": {
            "text": "Method _generate_edge_response has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "email_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Method send_html_email has 52 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_analysis_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 156
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_text_rules has 53 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_analysis_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 156
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_text_rules has a cyclomatic complexity of 14 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_analysis_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 251
                }
              }
            }
          ],
          "message": {
            "text": "Method _extract_text_indicators has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_analytics_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 288
                }
              }
            }
          ],
          "message": {
            "text": "Method _generate_emotion_trends has a cyclomatic complexity of 11 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_history_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 189
                }
              }
            }
          ],
          "message": {
            "text": "Method identify_concerning_patterns has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_history_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 265
                }
              }
            }
          ],
          "message": {
            "text": "Method _calculate_emotion_trend has a cyclomatic complexity of 14 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_history_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 361
                }
              }
            }
          ],
          "message": {
            "text": "Method _identify_emotional_triggers has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_history_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 391
                }
              }
            }
          ],
          "message": {
            "text": "Method _identify_positive_indicators has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_history_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 417
                }
              }
            }
          ],
          "message": {
            "text": "Method _identify_risk_factors has a cyclomatic complexity of 11 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 135
                }
              }
            }
          ],
          "message": {
            "text": "Method save_emotion_analysis has 68 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 261
                }
              }
            }
          ],
          "message": {
            "text": "Method analyze_emotion_trends has 81 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 261
                }
              }
            }
          ],
          "message": {
            "text": "Method analyze_emotion_trends has a cyclomatic complexity of 17 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 380
                }
              }
            }
          ],
          "message": {
            "text": "Method _generate_trend_recommendations has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "llm_service_factory.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 198
                }
              }
            }
          ],
          "message": {
            "text": "Method generate_response has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openai_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 265
                }
              }
            }
          ],
          "message": {
            "text": "Method _create_response_model has 9 parameters (limit is 8)"
          },
          "ruleId": "Lizard_parameter-count-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openai_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 403
                }
              }
            }
          ],
          "message": {
            "text": "Method _basic_emotion_detection has a cyclomatic complexity of 13 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openai_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 431
                }
              }
            }
          ],
          "message": {
            "text": "Method categorize_message has a cyclomatic complexity of 13 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "safety_assessor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 140
                }
              }
            }
          ],
          "message": {
            "text": "Method _assess_conversation_patterns_safety has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "audio_playback_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "Method play_audio has 51 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "audio_playback_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "Method play_audio has a cyclomatic complexity of 12 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "voice_provider_base.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 67
                }
              }
            }
          ],
          "message": {
            "text": "Method process_with_providers has a cyclomatic complexity of 12 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "child_analytics_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 221
                }
              }
            }
          ],
          "message": {
            "text": "Method generate_engagement_recommendations has a cyclomatic complexity of 14 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "interaction_recommender.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Method generate has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "session_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 34
                }
              }
            }
          ],
          "message": {
            "text": "Method update has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "content_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 228
                }
              }
            }
          ],
          "message": {
            "text": "Method _load_default_whitelist has 85 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "legacy_adapter.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 210
                }
              }
            }
          ],
          "message": {
            "text": "Method check_content_with_params_legacy has 10 parameters (limit is 8)"
          },
          "ruleId": "Lizard_parameter-count-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "legacy_adapter.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 358
                }
              }
            }
          ],
          "message": {
            "text": "Method create_content_check_params has 9 parameters (limit is 8)"
          },
          "ruleId": "Lizard_parameter-count-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "moderation_rules.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Method _load_default_rules has 92 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "moderation_rules.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 169
                }
              }
            }
          ],
          "message": {
            "text": "Method evaluate has a cyclomatic complexity of 14 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "statistics.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 187
                }
              }
            }
          ],
          "message": {
            "text": "Method _add_to_history has 9 parameters (limit is 8)"
          },
          "ruleId": "Lizard_parameter-count-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "llm_processor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Method build_conversation_history has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "llm_processor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 349
                }
              }
            }
          ],
          "message": {
            "text": "Method _log_successful_interaction has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "analytics_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 157
                }
              }
            }
          ],
          "message": {
            "text": "Method _calculate_comparisons has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ar_experience_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Method _initialize_default_experiences has 62 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ar_vr_analytics.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 32
                }
              }
            }
          ],
          "message": {
            "text": "Method generate_child_report has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ar_vr_analytics.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Method generate_personalized_recommendations has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ar_vr_analytics.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 145
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_session_times has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ar_vr_safety_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 68
                }
              }
            }
          ],
          "message": {
            "text": "Method assess_safety_compliance has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ar_vr_session_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 145
                }
              }
            }
          ],
          "message": {
            "text": "Method analyze_session_performance has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ar_vr_session_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 190
                }
              }
            }
          ],
          "message": {
            "text": "Method get_session_statistics has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cache_integration_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 382
                }
              }
            }
          ],
          "message": {
            "text": "Method _setup_cache_strategies has 52 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cache_integration_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 520
                }
              }
            }
          ],
          "message": {
            "text": "Method optimize_cache_settings has 58 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cleanup_execution_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 165
                }
              }
            }
          ],
          "message": {
            "text": "Method _cleanup_orphaned_files has a cyclomatic complexity of 11 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation_analytics_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Method get_conversation_analytics has 65 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation_analytics_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Method get_conversation_analytics has a cyclomatic complexity of 17 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation_export_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 104
                }
              }
            }
          ],
          "message": {
            "text": "Method _export_csv has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation_export_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 155
                }
              }
            }
          ],
          "message": {
            "text": "Method _export_text has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation_search_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Method search_conversation_content has 53 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation_search_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Method search_conversation_content has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation_search_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 92
                }
              }
            }
          ],
          "message": {
            "text": "Method get_conversations_by_topics has a cyclomatic complexity of 11 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data_cleanup_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 160
                }
              }
            }
          ],
          "message": {
            "text": "Method run_comprehensive_cleanup has 60 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data_cleanup_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 160
                }
              }
            }
          ],
          "message": {
            "text": "Method run_comprehensive_cleanup has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data_cleanup_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 429
                }
              }
            }
          ],
          "message": {
            "text": "Method get_database_size_info has 79 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data_cleanup_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 429
                }
              }
            }
          ],
          "message": {
            "text": "Method get_database_size_info has a cyclomatic complexity of 15 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data_cleanup_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 516
                }
              }
            }
          ],
          "message": {
            "text": "Method main has 66 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data_cleanup_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 599
                }
              }
            }
          ],
          "message": {
            "text": "Method test_cleanup_service has 51 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "export_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 130
                }
              }
            }
          ],
          "message": {
            "text": "Method export_conversation_history_as_pdf has 111 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "export_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 130
                }
              }
            }
          ],
          "message": {
            "text": "Method export_conversation_history_as_pdf has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "export_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 358
                }
              }
            }
          ],
          "message": {
            "text": "Method _export_analytics_pdf has 59 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "fallback_response_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Method _load_fallback_responses has 84 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gui_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 219
                }
              }
            }
          ],
          "message": {
            "text": "Method _create_status_panel has 81 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "he_integration_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Method extract_and_encrypt_features has 57 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "he_integration_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 202
                }
              }
            }
          ],
          "message": {
            "text": "Method analyze_emotions_privately has 56 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "memory_storage_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 251
                }
              }
            }
          ],
          "message": {
            "text": "Method forget_memories has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "moderation_helpers.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Method _build_transition_table has 51 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 326
                }
              }
            }
          ],
          "message": {
            "text": "Method check_age_specific_content has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "moderation_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 540
                }
              }
            }
          ],
          "message": {
            "text": "Method __post_init__ has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "notification_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 134
                }
              }
            }
          ],
          "message": {
            "text": "Method _load_templates has 91 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recommendation_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 215
                }
              }
            }
          ],
          "message": {
            "text": "Method _generate_cot_recommendation has 77 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "service_registry.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 294
                }
              }
            }
          ],
          "message": {
            "text": "Method _topological_sort has a cyclomatic complexity of 14 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "streaming_service_refactored.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 440
                }
              }
            }
          ],
          "message": {
            "text": "Method get_cohesion_improvement_stats has 92 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "transcription_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 439
                }
              }
            }
          ],
          "message": {
            "text": "Method transcribe_audio has 62 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "transcription_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 822
                }
              }
            }
          ],
          "message": {
            "text": "Method get_performance_metrics has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vr_environment_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 96
                }
              }
            }
          ],
          "message": {
            "text": "Method get_available_environments has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "websocket_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 372
                }
              }
            }
          ],
          "message": {
            "text": "Method _cleanup_loop has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "access_control_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 149
                }
              }
            }
          ],
          "message": {
            "text": "Method _get_next_allowed_time has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "parent_dashboard_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Method __init__ has 58 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "progress_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_vocabulary has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rate_monitor_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 213
                }
              }
            }
          ],
          "message": {
            "text": "Method record_notification has 54 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "report_generation_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 33
                }
              }
            }
          ],
          "message": {
            "text": "Method generate_weekly_report has 88 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "report_generation_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 226
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_monthly_trends has a cyclomatic complexity of 15 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "report_generation_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 278
                }
              }
            }
          ],
          "message": {
            "text": "Method _generate_long_term_recommendations has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "report_generation_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 319
                }
              }
            }
          ],
          "message": {
            "text": "Method _check_developmental_milestones has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "report_generator_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 218
                }
              }
            }
          ],
          "message": {
            "text": "Method _create_html_template has 134 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "content_recommendation_engine.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Method recommend_content has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insights_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 158
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_content_preferences has a cyclomatic complexity of 11 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "insights_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 212
                }
              }
            }
          ],
          "message": {
            "text": "Method _get_optimization_suggestions has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "performance_monitor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Method get_performance_metrics has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "performance_monitor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 177
                }
              }
            }
          ],
          "message": {
            "text": "Method get_provider_health has a cyclomatic complexity of 11 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "advanced_progress_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 205
                }
              }
            }
          ],
          "message": {
            "text": "Method _load_analysis_templates has 57 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "advanced_progress_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 398
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_vocabulary_development has 57 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "advanced_progress_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 398
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_vocabulary_development has a cyclomatic complexity of 15 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "circuit_breaker.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 171
                }
              }
            }
          ],
          "message": {
            "text": "Method call has a cyclomatic complexity of 12 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "health_monitoring.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 93
                }
              }
            }
          ],
          "message": {
            "text": "Method analyze_interaction has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "health_monitoring.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 224
                }
              }
            }
          ],
          "message": {
            "text": "Method send_health_alert has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "health_monitoring.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 303
                }
              }
            }
          ],
          "message": {
            "text": "Method _get_parent_info has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "child_data_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 280
                }
              }
            }
          ],
          "message": {
            "text": "Method _calculate_mood_trends has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "child_data_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 320
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_response_patterns has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "child_data_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 358
                }
              }
            }
          ],
          "message": {
            "text": "Method _count_social_indicators has a cyclomatic complexity of 12 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "child_data_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 393
                }
              }
            }
          ],
          "message": {
            "text": "Method _identify_learning_patterns has a cyclomatic complexity of 15 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 361
                }
              }
            }
          ],
          "message": {
            "text": "Method extract_topics has 55 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 423
                }
              }
            }
          ],
          "message": {
            "text": "Method analyze_emotional_journey has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 471
                }
              }
            }
          ],
          "message": {
            "text": "Method calculate_engagement_score has a cyclomatic complexity of 11 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 512
                }
              }
            }
          ],
          "message": {
            "text": "Method calculate_educational_score has a cyclomatic complexity of 11 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 552
                }
              }
            }
          ],
          "message": {
            "text": "Method calculate_quality_score has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "model_benchmark.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 31
                }
              }
            }
          ],
          "message": {
            "text": "Method _benchmark_llm has 86 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "child_safety_chaos.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Method _build_steady_state_hypothesis has 59 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "child_safety_chaos.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 130
                }
              }
            }
          ],
          "message": {
            "text": "Method _build_method has 80 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "child_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 208
                }
              }
            }
          ],
          "message": {
            "text": "Method list has a cyclomatic complexity of 14 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "child_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 369
                }
              }
            }
          ],
          "message": {
            "text": "Method _deserialize_child_from_db has a cyclomatic complexity of 15 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 376
                }
              }
            }
          ],
          "message": {
            "text": "Method extract_topics has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 599
                }
              }
            }
          ],
          "message": {
            "text": "Method calculate_quality_score has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "base.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Method __init__ has 10 parameters (limit is 8)"
          },
          "ruleId": "Lizard_parameter-count-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "advanced_family_system.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 292
                }
              }
            }
          ],
          "message": {
            "text": "Method _create_default_scheduled_messages has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "advanced_family_system.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 337
                }
              }
            }
          ],
          "message": {
            "text": "Method _create_default_time_restrictions has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "progress_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 377
                }
              }
            }
          ],
          "message": {
            "text": "Method identify_achievements has a cyclomatic complexity of 14 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "progress_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 426
                }
              }
            }
          ],
          "message": {
            "text": "Method identify_improvement_areas has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 450
                }
              }
            }
          ],
          "message": {
            "text": "Method analyze_hybrid has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 574
                }
              }
            }
          ],
          "message": {
            "text": "Method _load_emoji_emotions has 59 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ai_story_generator.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 650
                }
              }
            }
          ],
          "message": {
            "text": "Method _calculate_personalization_score has a cyclomatic complexity of 11 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "performance_optimizer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 453
                }
              }
            }
          ],
          "message": {
            "text": "Method check_health has 58 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "async_database_optimizer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 300
                }
              }
            }
          ],
          "message": {
            "text": "Method execute_optimized_query has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "exception_handler.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 144
                }
              }
            }
          ],
          "message": {
            "text": "Method handle_exceptions.handle_exceptions.decorator.async_wrapper has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "exception_handler.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 179
                }
              }
            }
          ],
          "message": {
            "text": "Method handle_exceptions.handle_exceptions.decorator.sync_wrapper has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "audio_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Method _map_features_to_emotions has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enterprise_exception_handler.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 464
                }
              }
            }
          ],
          "message": {
            "text": "Method with_retry.with_retry.decorator.async_wrapper has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enterprise_exception_handler.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 502
                }
              }
            }
          ],
          "message": {
            "text": "Method with_retry.with_retry.decorator.sync_wrapper has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 363
                }
              }
            }
          ],
          "message": {
            "text": "Method analyze_emotion_multilang has 66 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 618
                }
              }
            }
          ],
          "message": {
            "text": "Method _get_language_specific_recommendations has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 719
                }
              }
            }
          ],
          "message": {
            "text": "Method _build_comprehensive_report has 65 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 719
                }
              }
            }
          ],
          "message": {
            "text": "Method _build_comprehensive_report has 9 parameters (limit is 8)"
          },
          "ruleId": "Lizard_parameter-count-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 785
                }
              }
            }
          ],
          "message": {
            "text": "Method merge_historical_data has 65 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 867
                }
              }
            }
          ],
          "message": {
            "text": "Method _fetch_historical_sessions_advanced has 54 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hume_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 282
                }
              }
            }
          ],
          "message": {
            "text": "Method _process_hume_predictions has a cyclomatic complexity of 12 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hume_integration.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 128
                }
              }
            }
          ],
          "message": {
            "text": "Method analyze_batch has 51 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hume_integration.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 217
                }
              }
            }
          ],
          "message": {
            "text": "Method analyze_stream has 52 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hume_integration.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 281
                }
              }
            }
          ],
          "message": {
            "text": "Method _extract_from_batch has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "custom_metrics.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "Method _initialize_metrics has 65 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "custom_metrics.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 407
                }
              }
            }
          ],
          "message": {
            "text": "Method __init__ has 80 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "custom_metrics.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 504
                }
              }
            }
          ],
          "message": {
            "text": "Method _create_ai_interaction_span_attributes has 10 parameters (limit is 8)"
          },
          "ruleId": "Lizard_parameter-count-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "custom_metrics.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 529
                }
              }
            }
          ],
          "message": {
            "text": "Method _record_all_ai_metrics has 54 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "custom_metrics.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 529
                }
              }
            }
          ],
          "message": {
            "text": "Method _record_all_ai_metrics has 10 parameters (limit is 8)"
          },
          "ruleId": "Lizard_parameter-count-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "custom_metrics.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 585
                }
              }
            }
          ],
          "message": {
            "text": "Method record_ai_interaction has 10 parameters (limit is 8)"
          },
          "ruleId": "Lizard_parameter-count-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "base_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 344
                }
              }
            }
          ],
          "message": {
            "text": "Method _build_list_query has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "base_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 392
                }
              }
            }
          ],
          "message": {
            "text": "Method _build_search_query has a cyclomatic complexity of 11 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "comprehensive_fix_and_report.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 161
                }
              }
            }
          ],
          "message": {
            "text": "Method count_lines_recovered has a cyclomatic complexity of 14 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "report_repository.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 161
                }
              }
            }
          ],
          "message": {
            "text": "Method _create_mock_interaction has 56 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "audit_system.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 124
                }
              }
            }
          ],
          "message": {
            "text": "Method log_event has 11 parameters (limit is 8)"
          },
          "ruleId": "Lizard_parameter-count-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "audit_system.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 272
                }
              }
            }
          ],
          "message": {
            "text": "Method _event_matches_filters has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enhanced_security.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 272
                }
              }
            }
          ],
          "message": {
            "text": "Method _get_password_validators has 59 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enhanced_security.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 272
                }
              }
            }
          ],
          "message": {
            "text": "Method _get_password_validators has a cyclomatic complexity of 19 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rbac_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 186
                }
              }
            }
          ],
          "message": {
            "text": "Method _get_role_permission_config has 87 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rbac_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 680
                }
              }
            }
          ],
          "message": {
            "text": "Method get_audit_log has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "safe_expression_parser.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 278
                }
              }
            }
          ],
          "message": {
            "text": "Method __init__ has 58 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 222
                }
              }
            }
          ],
          "message": {
            "text": "Method _add_security_headers has 53 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cloud_server_launcher.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 217
                }
              }
            }
          ],
          "message": {
            "text": "Method create_logs_tab has 52 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cloud_server_launcher.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 277
                }
              }
            }
          ],
          "message": {
            "text": "Method create_stats_tab has 51 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modern_container.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 482
                }
              }
            }
          ],
          "message": {
            "text": "Method _create_service_instance has 57 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modern_container.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 482
                }
              }
            }
          ],
          "message": {
            "text": "Method _create_service_instance has a cyclomatic complexity of 15 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deployment_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 447
                }
              }
            }
          ],
          "message": {
            "text": "Method _check_performance_thresholds has a cyclomatic complexity of 11 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deployment_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 706
                }
              }
            }
          ],
          "message": {
            "text": "Method _determine_ab_test_recommendation has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "feedback_collector.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 430
                }
              }
            }
          ],
          "message": {
            "text": "Method _calculate_aggregate_metrics has a cyclomatic complexity of 19 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "performance_monitor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 677
                }
              }
            }
          ],
          "message": {
            "text": "Method _aggregate_monitoring_stats has a cyclomatic complexity of 12 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "training_pipeline.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 439
                }
              }
            }
          ],
          "message": {
            "text": "Method _prepare_model_data has 67 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "authentication.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 319
                }
              }
            }
          ],
          "message": {
            "text": "Method authenticate_user has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "authentication.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 404
                }
              }
            }
          ],
          "message": {
            "text": "Method verify_token has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "federation_gateway.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 685
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_query_services has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "performance_monitor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 404
                }
              }
            }
          ],
          "message": {
            "text": "Method get_performance_summary has 62 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "performance_monitor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 404
                }
              }
            }
          ],
          "message": {
            "text": "Method get_performance_summary has a cyclomatic complexity of 20 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verify_graphql_federation.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "Method verify_implementation has 55 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "auth.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 192
                }
              }
            }
          ],
          "message": {
            "text": "Method require_parent_auth.decorated_function has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "auth.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 248
                }
              }
            }
          ],
          "message": {
            "text": "Method require_child_auth.decorated_function has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "api_documentation.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 6
                }
              }
            }
          ],
          "message": {
            "text": "Method custom_openapi has 72 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smart_restructure.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 198
                }
              }
            }
          ],
          "message": {
            "text": "Method execute_migration has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation_widget.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "Method setup_ui has 57 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enterprise_dashboard.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 642
                }
              }
            }
          ],
          "message": {
            "text": "Method create_metrics_panel has 89 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "code_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 271
                }
              }
            }
          ],
          "message": {
            "text": "Method _analyze_single_class has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "code_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 378
                }
              }
            }
          ],
          "message": {
            "text": "Method _find_security_concerns has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mutation_engine.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 44
                }
              }
            }
          ],
          "message": {
            "text": "Method __init__ has 101 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "performance_tester.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 255
                }
              }
            }
          ],
          "message": {
            "text": "Method _run_load_test has 75 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "performance_tester.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 445
                }
              }
            }
          ],
          "message": {
            "text": "Method _run_spike_test has 54 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "performance_tester.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 621
                }
              }
            }
          ],
          "message": {
            "text": "Method _run_endurance_test has 65 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "performance_tester.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 621
                }
              }
            }
          ],
          "message": {
            "text": "Method _run_endurance_test has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "performance_tester.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 772
                }
              }
            }
          ],
          "message": {
            "text": "Method _check_metric_and_recommend has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security_tester.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 81
                }
              }
            }
          ],
          "message": {
            "text": "Method __init__ has 56 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security_tester.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 149
                }
              }
            }
          ],
          "message": {
            "text": "Method run_comprehensive_security_test has 55 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security_tester.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 651
                }
              }
            }
          ],
          "message": {
            "text": "Method _test_input_validation has 55 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "smart_fuzzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 163
                }
              }
            }
          ],
          "message": {
            "text": "Method _calculate_session_metrics has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "validators.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 30
                }
              }
            }
          ],
          "message": {
            "text": "Method __init__ has 54 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "validators.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 154
                }
              }
            }
          ],
          "message": {
            "text": "Method __init__ has 75 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_concurrent_users.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Method run_concurrent_test has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_system_performance.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 174
                }
              }
            }
          ],
          "message": {
            "text": "Method test_database_query_performance has 53 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "comprehensive_testing_framework.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 394
                }
              }
            }
          ],
          "message": {
            "text": "Method _run_child_safety_tests has 59 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "comprehensive_testing_framework.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 466
                }
              }
            }
          ],
          "message": {
            "text": "Method _run_performance_tests has 70 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "comprehensive_testing_framework.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 549
                }
              }
            }
          ],
          "message": {
            "text": "Method _run_security_tests has 59 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contract_tests.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 137
                }
              }
            }
          ],
          "message": {
            "text": "Method _test_child_service_contracts has 58 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contract_tests.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 205
                }
              }
            }
          ],
          "message": {
            "text": "Method _test_audio_service_contracts has 64 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contract_tests.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 279
                }
              }
            }
          ],
          "message": {
            "text": "Method _test_ai_service_contracts has 69 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contract_tests.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 358
                }
              }
            }
          ],
          "message": {
            "text": "Method _test_security_service_contracts has 58 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contract_tests.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 426
                }
              }
            }
          ],
          "message": {
            "text": "Method _test_parent_service_contracts has 62 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "final_test.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Method test_services has 82 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "final_test.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Method test_services has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "mutation_tests.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Method _initialize_mutation_operators has 95 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_backward_compatibility.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "Method test_backward_compatibility has 92 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_backward_compatibility.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "Method test_backward_compatibility has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_comprehensive_backend.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 829
                }
              }
            }
          ],
          "message": {
            "text": "Method test_weekly_report_with_insights has 58 lines of code (limit is 50)"
          },
          "ruleId": "Lizard_nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_validator.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 177
                }
              }
            }
          ],
          "message": {
            "text": "Method _check_imports has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_validator.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 198
                }
              }
            }
          ],
          "message": {
            "text": "Method _check_test_logic has a cyclomatic complexity of 10 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_validator.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 229
                }
              }
            }
          ],
          "message": {
            "text": "Method _generate_suggestions has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_validator.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 261
                }
              }
            }
          ],
          "message": {
            "text": "Method _fix_syntax_errors has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_validator.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 338
                }
              }
            }
          ],
          "message": {
            "text": "Method _fix_test_structure has a cyclomatic complexity of 9 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "55.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Method classify_priority has a cyclomatic complexity of 17 (limit is 8)"
          },
          "ruleId": "Lizard_ccn-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "openai_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/application/services/ai/openai_service.py has 506 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "data_cleanup_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/application/services/core/data_cleanup_service.py has 612 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "notification_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/application/services/core/notification_service.py has 504 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "transcription_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/application/services/core/transcription_service.py has 661 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "advanced_progress_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/application/services/advanced_progress_analyzer.py has 743 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "automated_compliance.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/compliance/automated_compliance.py has 865 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "child_repository.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/domain/entities/child_repository.py has 545 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "child_safety_chaos.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/domain/entities/child_safety_chaos.py has 691 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "conversation.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/domain/entities/conversation.py has 552 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "advanced_family_system.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/domain/family/advanced_family_system.py has 675 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/domain/services/emotion_analyzer.py has 856 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "ai_story_generator.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/domain/stories/ai_story_generator.py has 659 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "behavioral_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/domain/behavioral_analyzer.py has 512 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "multi_layer_cache.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/caching/multi_layer_cache.py has 964 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "exception_handler.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/decorators/exception_handler.py has 571 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "global_exception_handler.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/exception_handling/global_exception_handler.py has 517 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "global_handler.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/exception_handling/global_handler.py has 525 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "audio_io.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/external_services/audio_io.py has 711 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "distributed_processor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/external_services/distributed_processor.py has 842 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enhanced_hume_2025.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/external_services/enhanced_hume_2025.py has 526 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/external_services/enhanced_hume_integration_2025.py has 785 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "hume_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/external_services/hume_emotion_analyzer.py has 558 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "event_driven_architecture.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/messaging/event_driven_architecture.py has 503 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "service_orchestrator.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/microservices/service_orchestrator.py has 587 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "custom_metrics.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/observability/custom_metrics.py has 685 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "base_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/persistence/repositories/base_sqlite_repository.py has 689 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py has 694 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "plugin_architecture.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/plugins/plugin_architecture.py has 567 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "async_processor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/processing/async_processor.py has 835 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "advanced_content_filter.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/security/advanced_content_filter.py has 538 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "api_gateway.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/security/api_gateway.py has 552 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enhanced_security.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/security/enhanced_security.py has 717 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "rbac_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/security/rbac_manager.py has 617 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "safe_expression_parser.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/security/safe_expression_parser.py has 579 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "secrets_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/security/secrets_manager.py has 747 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security_audit_logger.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/security/security_audit_logger.py has 631 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vault_integration.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/security/vault_integration.py has 511 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "cloud_server_launcher.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/cloud_server_launcher.py has 764 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "modern_container.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/infrastructure/modern_container.py has 539 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "deployment_manager.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/ml/continuous_learning/deployment/deployment_manager.py has 652 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "model_evaluator.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/ml/continuous_learning/evaluation/model_evaluator.py has 555 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "performance_monitor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/ml/continuous_learning/monitoring/performance_monitor.py has 548 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "training_pipeline.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/ml/continuous_learning/training/training_pipeline.py has 684 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/ml/pipelines/child_interaction_pipeline.py has 513 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "federation_gateway.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/presentation/api/graphql/federation_gateway.py has 720 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "performance_monitor.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/presentation/api/graphql/performance_monitor.py has 569 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "enterprise_dashboard.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/presentation/enterprise_dashboard.py has 894 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "performance_tester.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/testing/performance_tester.py has 686 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "security_tester.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./src/testing/security_tester.py has 831 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_child_repository.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./tests/unit/test_child_repository.py has 505 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_conversation_repository.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./tests/unit/test_conversation_repository.py has 550 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_voice_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./tests/unit/test_voice_service.py has 509 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "comprehensive_testing_framework.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./tests/comprehensive_testing_framework.py has 670 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "contract_tests.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./tests/contract_tests.py has 622 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_comprehensive_backend.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./tests/test_comprehensive_backend.py has 810 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test_comprehensive_frontend.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 0
                }
              }
            }
          ],
          "message": {
            "text": "Method ./tests/test_comprehensive_frontend.py has 671 file-nloc (limit is 500)"
          },
          "ruleId": "Lizard_file-nloc-medium"
        }
      ],
      "tool": {
        "driver": {
          "informationUri": "https://github.com/terryyin/lizard",
          "name": "Lizard",
          "rules": null,
          "version": "1.17.10"
        }
      }
    },
    {
      "invocations": [
        {
          "executionSuccessful": false,
          "toolConfigurationNotifications": [],
          "toolExecutionNotifications": [
            {
              "exception": {
                "message": "net.sourceforge.pmd.lang.ast.ParseException: Parse exception in file '/mnt/c/Users/jaafa/Desktop/5555/ai-teddy/src/database_migrations/create_parent_reports_table.sql' at line 5, column 1: Encountered \u003cIDENTIFIER: \"GO\"\u003e.\nWas expecting one of:\n    \u003cEOF\u003e \n    \"/\" ...\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParserImpl.generateParseException(PLSQLParserImpl.java)\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParserImpl.jj_consume_token(PLSQLParserImpl.java)\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParserImpl.Input(PLSQLParserImpl.java:257)\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.parseImpl(PLSQLParser.java:86)\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.parseImpl(PLSQLParser.java:21)\n\tat net.sourceforge.pmd.lang.ast.impl.javacc.JjtreeParserAdapter.parse(JjtreeParserAdapter.java:36)\n\tat net.sourceforge.pmd.lang.impl.PmdRunnable.parse(PmdRunnable.java:112)\n\tat net.sourceforge.pmd.lang.impl.PmdRunnable.processSource(PmdRunnable.java:132)\n\tat net.sourceforge.pmd.lang.impl.PmdRunnable.run(PmdRunnable.java:80)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n"
              },
              "locations": [
                {
                  "physicalLocation": {
                    "artifactLocation": {
                      "uri": "file:///mnt/c/Users/jaafa/Desktop/5555/ai-teddy/src/database_migrations/create_parent_reports_table.sql"
                    }
                  }
                }
              ],
              "message": {
                "text": "ParseException: Parse exception in file '/mnt/c/Users/jaafa/Desktop/5555/ai-teddy/src/database_migrations/create_parent_reports_table.sql' at line 5, column 1: Encountered \u003cIDENTIFIER: \"GO\"\u003e.\nWas expecting one of:\n    \u003cEOF\u003e \n    \"/\" ..."
              }
            }
          ]
        }
      ],
      "results": [],
      "tool": {
        "driver": {
          "informationUri": "https://docs.pmd-code.org/latest/",
          "name": "PMD",
          "rules": null,
          "version": "7.11.0"
        }
      }
    },
    {
      "results": [
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/setup.py"
                },
                "region": {
                  "startColumn": 18,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'invalid syntax (src.setup, line 55)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/emotion_analysis_service.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'invalid non-printable character U+FEFF (src.application.services.ai.emotion_analysis_service, line 9)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/main_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 155
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected 'except' or 'finally' block (src.application.services.ai.main_service, line 155)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/voice_recognition_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 186
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected 'except' or 'finally' block (src.application.services.audio.voice_recognition_service, line 186)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/child/child_bulk_operations_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/ar_vr_preferences_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 199
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected 'except' or 'finally' block (src.application.services.core.ar_vr_preferences_manager, line 199)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/data_cleanup_service.py"
                },
                "region": {
                  "startColumn": 62,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'invalid non-printable character U+0A0D (src.application.services.core.data_cleanup_service, line 1)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/external_services.py"
                },
                "region": {
                  "startColumn": 60,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'unmatched ')' (src.application.services.core.external_services, line 49)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/notification_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 373
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected an indented block after 'except' statement on line 372 (src.application.services.core.notification_service, line 373)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/push_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 310
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected an indented block after 'except' statement on line 309 (src.application.services.core.push_service, line 310)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/services.py"
                },
                "region": {
                  "startColumn": 3,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'unexpected indent (src.application.services.core.services, line 15)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/parent_notification_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/rate_monitor_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 174
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected 'except' or 'finally' block (src.application.services.parent.rate_monitor_service, line 174)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/compliance/audit_logger.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/compliance/automated_compliance.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/compliance/alerts/violation_alerter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/compliance/checkers/coppa_compliance.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/compliance/checkers/gdpr_compliance.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/compliance/managers/consent_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/compliance/managers/data_retention_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/compliance/reports/compliance_reporter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/entities/start_teddy_system.py"
                },
                "region": {
                  "startColumn": 72,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'unmatched ')' (src.core.domain.entities.start_teddy_system, line 83)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/streaming/entities/entities.py"
                },
                "region": {
                  "startColumn": 29,
                  "startLine": 44
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'invalid syntax (src.domain.streaming.entities.entities, line 44)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/edge/device_manager.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected an indented block after 'except' statement on line 83 (src.edge.device_manager, line 84)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/file_manager.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected an indented block after 'except' statement on line 53 (src.infrastructure.file_manager, line 54)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/caching/multi_layer_cache.py"
                },
                "region": {
                  "startColumn": 28,
                  "startLine": 490
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'invalid syntax (src.infrastructure.caching.multi_layer_cache, line 490)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/emotion/text_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 1,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'invalid non-printable character U+FEFF (src.infrastructure.emotion.text_emotion_analyzer, line 4)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/exception_handling/global_exception_handler.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 384
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected 'except' or 'finally' block (src.infrastructure.exception_handling.global_exception_handler, line 384)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/state_manager.py"
                },
                "region": {
                  "startColumn": 27,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'invalid syntax (src.infrastructure.external_services.state_manager, line 51)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/tts_playback.py"
                },
                "region": {
                  "startColumn": 70,
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'unmatched ')' (src.infrastructure.external_services.tts_playback, line 37)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/__main__.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 45
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected 'except' or 'finally' block (src.infrastructure.external_services.__main__, line 45)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/clients/azure_speech_client.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 114
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected 'except' or 'finally' block (src.infrastructure.external_services.clients.azure_speech_client, line 114)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/clients/elevenlabs_client.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected 'except' or 'finally' block (src.infrastructure.external_services.clients.elevenlabs_client, line 82)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/clients/openai_speech_client.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 93
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected 'except' or 'finally' block (src.infrastructure.external_services.clients.openai_speech_client, line 93)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/clients/whisper_client.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 84
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected 'except' or 'finally' block (src.infrastructure.external_services.clients.whisper_client, line 84)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/memory/memory_repository.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/memory/vector_memory_store.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/monitoring/metrics.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 125
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected 'except' or 'finally' block (src.infrastructure.monitoring.metrics, line 125)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/transcription_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected 'except' or 'finally' block (src.infrastructure.persistence.repositories.transcription_sqlite_repository, line 47)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/api_gateway.py"
                },
                "region": {
                  "startColumn": 36,
                  "startLine": 761
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'invalid syntax (src.infrastructure.security.api_gateway, line 761)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security_solutions_integration.py"
                },
                "region": {
                  "startColumn": 5,
                  "startLine": 239
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected an indented block after 'except' statement on line 236 (src.infrastructure.security.security_solutions_integration, line 239)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/vault_secrets_manager.py"
                },
                "region": {
                  "startColumn": 31,
                  "startLine": 89
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'invalid syntax (src.infrastructure.security.vault_secrets_manager, line 89)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/api_core_init.py"
                },
                "region": {
                  "startColumn": 76,
                  "startLine": 29
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'unmatched ')' (src.presentation.api.api_core_init, line 29)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/federation_gateway.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 587
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected an indented block after 'except' statement on line 586 (src.presentation.api.graphql.federation_gateway, line 587)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/main_window.py"
                },
                "region": {
                  "startColumn": 34,
                  "startLine": 153
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'invalid syntax (src.presentation.ui.main_window, line 153)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/audio/audio_engine.py"
                },
                "region": {
                  "startColumn": 47,
                  "startLine": 260
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'closing parenthesis '}' does not match opening parenthesis '(' on line 259 (src.presentation.ui.audio.audio_engine, line 260)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/networking/websocket_client.py"
                },
                "region": {
                  "startColumn": 26,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'invalid syntax (src.presentation.ui.networking.websocket_client, line 64)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/widgets/conversation_widget.py"
                },
                "region": {
                  "startColumn": 29,
                  "startLine": 98
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'invalid syntax (src.presentation.ui.widgets.conversation_widget, line 98)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_comprehensive_backend.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1091
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected 'except' or 'finally' block (tests.test_comprehensive_backend, line 1091)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/architecture/test_phase2_architecture_modernization.py"
                },
                "region": {
                  "startColumn": 21,
                  "startLine": 45
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'invalid syntax (tests.architecture.test_phase2_architecture_modernization, line 45)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_child_repository.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 391
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'expected 'except' or 'finally' block (tests.unit.test_edge_ai_manager, line 391)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_security_solutions.py"
                },
                "region": {
                  "startColumn": 35,
                  "startLine": 194
                }
              }
            }
          ],
          "message": {
            "text": "Parsing failed: 'unterminated string literal (detected at line 194) (tests.unit.test_security_solutions, line 194)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "55.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "Unused defaultdict imported from collections"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "api/endpoints/audio.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 123
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'response_audio'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/actions/ai.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 394
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'reset_response'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/actions/safety.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/infrastructure/chaos_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 294
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'exc'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/infrastructure/chaos_orchestrator.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused import secrets"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/infrastructure/chaos_reporter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused ExperimentMetrics imported from chaos_orchestrator"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/monitoring/chaos_metrics.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 113
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'service_name'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/monitoring/chaos_metrics.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 123
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'exc'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "monitoring/emergency/api/emergency_response.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 193
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'category'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 337
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'enhanced_audio_processor'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 340
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'advanced_ai_orchestrator'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'advanced_content_filter'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 399
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'server_tasks'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Dict imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Unused import logging"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 25
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 25
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 25
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 25
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 415
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'cpu_cores'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused import hashlib"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused import pickle"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused asdict imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Unused Path imported from pathlib"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 25
                }
              }
            }
          ],
          "message": {
            "text": "Unused Tuple imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 25
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 31
                }
              }
            }
          ],
          "message": {
            "text": "Unused tensorflow imported as tf"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 32
                }
              }
            }
          ],
          "message": {
            "text": "Unused tflite_runtime.interpreter imported as tflite"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "Unused import librosa"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_ai_manager.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 43
                }
              }
            }
          ],
          "message": {
            "text": "Unused import scipy.signal"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_feature_extractor.py"
                },
                "region": {
                  "startColumn": 17,
                  "startLine": 117
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'magnitudes'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_feature_extractor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_feature_extractor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Dict imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_feature_extractor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_feature_extractor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_safety_checker.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_safety_checker.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Dict imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_wake_word_detector.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 110
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'processing_time'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_wake_word_detector.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_wake_word_detector.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Dict imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_wake_word_detector.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_wake_word_detector.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/adapters/edge/edge_wake_word_detector.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused tflite_runtime.interpreter imported as tflite"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/accessibility/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/accessibility/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused import logging"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/accessibility/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused import uuid"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/accessibility/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused asdict imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/accessibility/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/accessibility/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/accessibility/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/arvr/services/arvr_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/arvr/services/arvr_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 99
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/cleanup/services/cleanup_orchestrator.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 277
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/cleanup/services/cleanup_orchestrator.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 283
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/commands/command_bus.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/commands/command_bus.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/commands/command_bus.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 62
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/emotion/services/emotion_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/emotion/services/emotion_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 102
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/emotion/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/emotion/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/emotion/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused import logging"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/emotion/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused import os"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/emotion/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused import uuid"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/emotion/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/emotion/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/emotion/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Dict imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/emotion/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/emotion/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/enhancedchildinteraction/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 96
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'ai_stats'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/enhancedchildinteraction/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused import uuid"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/enhancedchildinteraction/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused dataclass imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/enhancedchildinteraction/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused field imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/enhancedchildinteraction/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/enhancedchildinteraction/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused AsyncIterator imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/memory/services/memory_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/memory/services/memory_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 102
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/parentreport/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/parentreport/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused import uuid"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/parentreport/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused asdict imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/parentreport/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/parentreport/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/parentreport/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/parentreport/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused Tuple imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/parentreport/use_cases/use_cases.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused pandas imported as pd"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/patterns/observer.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/patterns/strategy.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/queries/query_bus.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/queries/query_bus.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/queries/query_bus.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/queries/query_bus.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/queries/query_bus.py"
                },
                "region": {
                  "startColumn": 42,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/queries/query_bus.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/queries/query_bus.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 93
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/queries/query_bus.py"
                },
                "region": {
                  "startColumn": 42,
                  "startLine": 268
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/advanced_progress_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused import re"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/advanced_progress_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused Tuple imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/advanced_progress_analyzer.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused Counter imported from collections"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/advanced_progress_analyzer.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Unused import nltk"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/advanced_progress_analyzer.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "Unused displacy imported from spacy"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/advanced_progress_analyzer.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "Unused flesch_reading_ease imported from textstat"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/advanced_progress_analyzer.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "Unused syllable_count imported from textstat"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/advanced_progress_analyzer.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 38
                }
              }
            }
          ],
          "message": {
            "text": "Unused AutoModel imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/advanced_progress_analyzer.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 38
                }
              }
            }
          ],
          "message": {
            "text": "Unused AutoTokenizer imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/circuit_breaker.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/screen_time_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/screen_time_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/screen_time_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/screen_time_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/screen_time_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 182
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'session'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/ai_service_interface.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 31
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/ai_service_interface.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 36
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/ai_service_interface.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 41
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/ai_service_interface.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 46
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/ai_service_interface.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/ai_service_interface.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/ai_service_interface.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/ai_service_interface.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/ai_service_interface.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/ai_service_interface.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 96
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/ai_service_interface.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 101
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/ai_service_interface.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 112
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/ai_service_interface.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 124
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/ai_service_interface.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 129
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/conversation_compatibility_assessor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 5
                }
              }
            }
          ],
          "message": {
            "text": "Unused VoiceProfile imported from domain.value_objects"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/edge_ai_integration_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/edge_ai_integration_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/edge_ai_integration_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/edge_ai_integration_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/edge_ai_integration_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/edge_ai_integration_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 32
                }
              }
            }
          ],
          "message": {
            "text": "Unused AudioConfig imported from audio.audio_processing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/edge_ai_integration_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 33
                }
              }
            }
          ],
          "message": {
            "text": "Unused AdvancedEmotionAnalyzer imported from domain.services.advanced_emotion_analyzer"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/edge_ai_integration_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 41
                }
              }
            }
          ],
          "message": {
            "text": "Unused AIResponseService imported from application.services.ai"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/email_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/email_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/email_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/emotion_database_service.py"
                },
                "region": {
                  "startColumn": 42,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'session'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/emotion_database_service.py"
                },
                "region": {
                  "startColumn": 42,
                  "startLine": 102
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'session'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/emotion_database_service.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 104
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'start_time'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/emotion_database_service.py"
                },
                "region": {
                  "startColumn": 42,
                  "startLine": 130
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'session'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/emotion_database_service.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 169
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'cutoff_date'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/emotion_database_service.py"
                },
                "region": {
                  "startColumn": 42,
                  "startLine": 171
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'session'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/emotion_database_service.py"
                },
                "region": {
                  "startColumn": 42,
                  "startLine": 186
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'session'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/emotion_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 5
                }
              }
            }
          ],
          "message": {
            "text": "Unused asdict imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/emotion_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 5
                }
              }
            }
          ],
          "message": {
            "text": "Unused import hashlib"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 6
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused import logging"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused ABC imported from abc"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused abstractmethod imported from abc"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused defaultdict imported from collections"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused dataclass imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused field imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused Enum imported from enum"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused google.generativeai imported as genai"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused import openai"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused import torch"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused AutoModelForCausalLM imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused AutoTokenizer imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 28
                }
              }
            }
          ],
          "message": {
            "text": "Unused redis.asyncio imported as aioredis"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 30
                }
              }
            }
          ],
          "message": {
            "text": "Unused Conversation imported from src.core.domain.entities.conversation"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_anthropic_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 31
                }
              }
            }
          ],
          "message": {
            "text": "Unused get_config imported from src.infrastructure.config"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 96
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 103
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 108
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 5
                }
              }
            }
          ],
          "message": {
            "text": "Unused import hashlib"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 6
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused defaultdict imported from collections"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused import anthropic"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused google.generativeai imported as genai"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused import openai"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Unused AutoModelForCausalLM imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Unused AutoTokenizer imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "Unused redis.asyncio imported as aioredis"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 29
                }
              }
            }
          ],
          "message": {
            "text": "Unused Conversation imported from src.core.domain.entities.conversation"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_base.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 30
                }
              }
            }
          ],
          "message": {
            "text": "Unused get_config imported from src.infrastructure.config"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 5
                }
              }
            }
          ],
          "message": {
            "text": "Unused import hashlib"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 6
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused import logging"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused ABC imported from abc"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused abstractmethod imported from abc"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused defaultdict imported from collections"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused dataclass imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused field imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused Enum imported from enum"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused import anthropic"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused import openai"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused import torch"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused AutoModelForCausalLM imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused AutoTokenizer imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 28
                }
              }
            }
          ],
          "message": {
            "text": "Unused redis.asyncio imported as aioredis"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 30
                }
              }
            }
          ],
          "message": {
            "text": "Unused Conversation imported from src.core.domain.entities.conversation"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_google_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 31
                }
              }
            }
          ],
          "message": {
            "text": "Unused get_config imported from src.infrastructure.config"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 5
                }
              }
            }
          ],
          "message": {
            "text": "Unused import hashlib"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 6
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused import logging"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused ABC imported from abc"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused abstractmethod imported from abc"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused defaultdict imported from collections"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused dataclass imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused field imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused Enum imported from enum"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused import anthropic"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused google.generativeai imported as genai"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused import torch"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused AutoModelForCausalLM imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused AutoTokenizer imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 28
                }
              }
            }
          ],
          "message": {
            "text": "Unused redis.asyncio imported as aioredis"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 30
                }
              }
            }
          ],
          "message": {
            "text": "Unused Conversation imported from src.core.domain.entities.conversation"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_openai_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 31
                }
              }
            }
          ],
          "message": {
            "text": "Unused get_config imported from src.infrastructure.config"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_service_factory.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_service_factory.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_service_factory.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 44
                }
              }
            }
          ],
          "message": {
            "text": "Unused LLMParameterValidator imported from validation"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_service_factory.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Unused ModelConfig imported from caching"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/llm_service_factory.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Unused ModelSelectionRequest imported from selection"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/personality_engine.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 163
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'personality'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/safety_assessor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 44
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 83
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 88
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 93
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 98
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 107
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 113
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 118
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 127
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 132
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 137
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 142
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 147
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 156
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 161
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 172
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 179
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 185
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 200
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 207
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 214
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 226
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 231
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/interfaces.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 236
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/models.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused Enum imported from enum"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/core/models.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/examples/simple_usage.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused generate_simple imported from src.application.services.ai"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/examples/simple_usage.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused LLMServiceFactory imported from src.application.services.ai"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/examples/simple_usage.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused GenerationRequest imported from src.application.services.ai"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/modules/emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/modules/session_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 149
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/modules/session_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 161
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/modules/session_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused Child imported from src.domain.entities.child"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/modules/transcription_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/providers/base_provider.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/providers/base_provider.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 71
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/providers/base_provider.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/providers/base_provider.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/providers/base_provider.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/providers/base_provider.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused IAIProvider imported from core"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/providers/openai_provider.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 296
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'response'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/providers/openai_provider.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 6
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/providers/openai_provider.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/providers/openai_provider.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused ResponseSafety imported from core"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/ai/providers/openai_provider.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused ErrorType imported from core"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/audio_playback_service.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 440
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/audio_recording_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/audio_recording_service.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 308
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/audio_recording_service.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 312
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/audio_recording_service.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 316
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/audio_service.py"
                },
                "region": {
                  "startColumn": 47,
                  "startLine": 36
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/audio_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/voice_audio_processor.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 88
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'stdout'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/voice_audio_processor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/voice_interaction_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'voice_recognition_service' due to 'expected 'except' or 'finally' block (src.application.services.audio.voice_recognition_service, line 186)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/voice_interaction_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 215
                }
              }
            }
          ],
          "message": {
            "text": "Dangerous default value [] as argument"
          },
          "ruleId": "dangerous-default-value"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/voice_provider_base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 143
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/voice_provider_base.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused ProviderResult imported from src.domain.audio.models"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/voice_service_refactored.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/voice_synthesis_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 241
                }
              }
            }
          ],
          "message": {
            "text": "Number of parameters was 3 in 'BaseProviderService.process' and is now 4 in overriding 'SynthesisService.process' method"
          },
          "ruleId": "arguments-differ"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/voice_synthesis_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 241
                }
              }
            }
          ],
          "message": {
            "text": "Variadics removed in overriding 'SynthesisService.process' method"
          },
          "ruleId": "arguments-differ"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/voice_synthesis_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused import os"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/voice_transcription_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 187
                }
              }
            }
          ],
          "message": {
            "text": "Number of parameters was 3 in 'BaseProviderService.process' and is now 3 in overriding 'TranscriptionService.process' method"
          },
          "ruleId": "arguments-differ"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/voice_transcription_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 187
                }
              }
            }
          ],
          "message": {
            "text": "Variadics removed in overriding 'TranscriptionService.process' method"
          },
          "ruleId": "arguments-differ"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/audio/voice_transcription_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/child/child_interaction_service_v2.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 2
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'src.infrastructure.monitoring.metrics' due to 'expected 'except' or 'finally' block (src.infrastructure.monitoring.metrics, line 125)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/child/enhanced_child_interaction_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/child/enhanced_child_interaction_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/child/enhanced_child_interaction_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/child/enhanced_child_interaction_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/child/enhanced_child_interaction_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/child/parent_notifier.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/child/parent_notifier.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Dict imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/child/__init__.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'child_bulk_operations_service' due to 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/accessschedule.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/accessscheduletype.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/ai_service_resolvers.py"
                },
                "region": {
                  "startColumn": 21,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'x' in lambda call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/ai_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "class already defined line 15"
          },
          "ruleId": "function-redefined"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/ai_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "class already defined line 15"
          },
          "ruleId": "function-redefined"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/ai_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Child imported from service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/ai_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Conversation imported from service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/alert.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/alerttype.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/analysismode.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/analyticsdata.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/ar_vr_analytics.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 269
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'child_id'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/ar_vr_safety_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused VREnvironment imported from vr_environment_manager"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/ar_vr_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'ar_vr_preferences_manager' due to 'expected 'except' or 'finally' block (src.application.services.core.ar_vr_preferences_manager, line 199)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/ar_vr_service.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 46
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'exp_id'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/ar_vr_service.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'env_id'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/base_service.py"
                },
                "region": {
                  "startColumn": 24,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/base_service.py"
                },
                "region": {
                  "startColumn": 27,
                  "startLine": 111
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/base_service.py"
                },
                "region": {
                  "startColumn": 27,
                  "startLine": 123
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/cache_integration_service.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 275
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'ttl'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/cache_integration_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Unused CacheLayer imported from multi_layer_cache"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/cache_integration_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Unused CacheMetrics imported from multi_layer_cache"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/cache_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/childprofile.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/child_service_resolvers.py"
                },
                "region": {
                  "startColumn": 21,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'x' in lambda call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/child_service_resolvers.py"
                },
                "region": {
                  "startColumn": 31,
                  "startLine": 46
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/child_service_resolvers.py"
                },
                "region": {
                  "startColumn": 24,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/child_service_resolvers.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused Key imported from strawberry.federation"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/child_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused Conversation imported from service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/cloud_transcription_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "Unused BaseModel imported from pydantic"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/cloud_transcription_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "Unused Field imported from pydantic"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/cloud_transcription_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "Unused dataclass imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/contentcategory.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/contentcategory.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused pipeline imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/conversationlog.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/conversationlogentry.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/conversation_export_service.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 25
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/conversation_search_service.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 31
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'role'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/emotionanalysisresult.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/export_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused letter imported from reportlab.lib.pagesizes"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/google_transcription_provider.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/google_transcription_provider.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "Unused Dict imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/google_transcription_provider.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/health_service.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 417
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'session_id'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/he_integration_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/he_integration_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/he_integration_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/he_integration_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/he_integration_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/he_integration_service.py"
                },
                "region": {
                  "startColumn": 25,
                  "startLine": 168
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'magnitudes'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/he_integration_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "Unused AudioConfig imported from audio.audio_processing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/he_integration_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 36
                }
              }
            }
          ],
          "message": {
            "text": "Unused AdvancedEmotionAnalyzer imported from domain.services.advanced_emotion_analyzer"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/issue_creator.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Dict imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/issue_tracker_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/language.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/memory_service.py"
                },
                "region": {
                  "startColumn": 29,
                  "startLine": 267
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/memory_storage_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'infrastructure.memory.memory_repository' due to 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/memory_storage_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'infrastructure.memory.vector_memory_store' due to 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderationcore.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused pipeline imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderationlog.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderationlog.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused pipeline imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderationresult.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderationresult.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 2)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderationresult.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused pipeline imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderationrule.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderationrule.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused pipeline imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderationseverity.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderationseverity.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused pipeline imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderationutility.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused pipeline imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 199
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 199
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 199
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 199
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 199
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 199
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 263
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 263
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 263
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 263
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 263
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 263
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 330
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 330
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 330
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 330
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 330
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 330
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 357
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 357
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 357
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 357
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 357
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 357
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused import os"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_api_clients.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Unused ExternalServiceException imported from src.domain.exceptions"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_cache_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_helpers.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 383
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_helpers.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 388
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_helpers.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 400
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_helpers.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 415
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 163
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 163
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 163
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 163
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 163
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 163
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 172
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 172
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 172
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 172
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 172
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 172
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 191
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 191
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 191
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 191
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 191
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 191
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 215
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 215
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 215
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 215
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 215
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 215
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 274
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 274
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 274
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 274
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 274
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 274
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 311
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 311
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 311
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 311
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 311
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 311
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 365
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 365
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 365
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 365
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 365
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 365
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 467
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 467
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 467
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 467
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 467
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 467
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_local_checkers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused defaultdict imported from collections"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_result_processor.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 44
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_result_processor.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 44
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_result_processor.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 44
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_result_processor.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 44
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_result_processor.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 44
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_result_processor.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 44
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_result_processor.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 156
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'is_safe' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_result_processor.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 156
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'severity' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_result_processor.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 156
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'flagged_categories' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_result_processor.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 156
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'confidence_scores' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_result_processor.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 156
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'matched_rules' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_result_processor.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 156
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'context_notes' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_result_processor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'ModerationSeverity' (imported line 5)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'ContentCategory' (imported line 5)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 605
                }
              }
            }
          ],
          "message": {
            "text": "Undefined variable name 'ContentCheckParams' in __all__"
          },
          "ruleId": "undefined-all-variable"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 610
                }
              }
            }
          ],
          "message": {
            "text": "Undefined variable name 'create_content_check_params' in __all__"
          },
          "ruleId": "undefined-all-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 6
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/monitoring_service_resolvers.py"
                },
                "region": {
                  "startColumn": 21,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'x' in lambda call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/monitoring_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "class already defined line 13"
          },
          "ruleId": "function-redefined"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/monitoring_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 30
                }
              }
            }
          ],
          "message": {
            "text": "class already defined line 13"
          },
          "ruleId": "function-redefined"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/monitoring_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/monitoring_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused Child imported from service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/monitoring_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused Conversation imported from service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/network_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 5
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/network_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 6
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/openai_transcription_provider.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/openai_transcription_provider.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/parentalcontrol.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/parentdashboardapi.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/parentdashboardapi.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "method already defined line 15"
          },
          "ruleId": "function-redefined"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/parentuser.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/recommendation_service.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 181
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'urgent_recommendations'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/recommendation_service.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 185
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'i'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/ruleenginecore.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused pipeline imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/ruleengineutility.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused pipeline imported from transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/safety_service_resolvers.py"
                },
                "region": {
                  "startColumn": 21,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'x' in lambda call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/safety_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "class already defined line 15"
          },
          "ruleId": "function-redefined"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/safety_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 32
                }
              }
            }
          ],
          "message": {
            "text": "class already defined line 15"
          },
          "ruleId": "function-redefined"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/safety_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/safety_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Child imported from service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/safety_service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Conversation imported from service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/scheduler_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'data_cleanup_service' due to 'invalid non-printable character U+0A0D (src.application.services.core.data_cleanup_service, line 1)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/scheduler_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'notification_service' due to 'expected an indented block after 'except' statement on line 372 (src.application.services.core.notification_service, line 373)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/scheduler_service.py"
                },
                "region": {
                  "startColumn": 17,
                  "startLine": 109
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'bool'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/scheduler_service.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 289
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'str'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/scheduler_service.py"
                },
                "region": {
                  "startColumn": 22,
                  "startLine": 302
                }
              }
            }
          ],
          "message": {
            "text": "str is not callable"
          },
          "ruleId": "not-callable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/scheduler_service.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 305
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'str'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/scheduler_service.py"
                },
                "region": {
                  "startColumn": 22,
                  "startLine": 315
                }
              }
            }
          ],
          "message": {
            "text": "str is not callable"
          },
          "ruleId": "not-callable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/scheduler_service.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 362
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'bool'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/scheduler_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 364
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'wait' in method call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_registry.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_registry.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_registry.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 85
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 26,
                  "startLine": 32
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "Unused Enum imported from enum"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 5
                }
              }
            }
          ],
          "message": {
            "text": "Unused Key imported from strawberry.federation"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused ContentFilterLevel imported from child_service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused DifficultyLevel imported from child_service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused SafetySettings imported from child_service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused ChildPreferences imported from child_service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused LearningStyle imported from ai_service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused PersonalityTrait imported from ai_service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused LearningProgress imported from ai_service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused ConversationAnalysis imported from ai_service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused HealthMetrics imported from monitoring_service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused PerformanceMetrics imported from monitoring_service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused RiskLevel imported from safety_service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/service_resolvers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused RiskAssessment imported from safety_service_resolvers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 404
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'io' (imported line 3)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "Unused import io"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 6
                }
              }
            }
          ],
          "message": {
            "text": "Unused import time"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused import uuid"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused logger imported from asyncio.log"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused AsyncGenerator imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused Callable imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused Dict imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused Set imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused numpy imported as np"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused import openai"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused import websockets"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused Voice imported from elevenlabs"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused VoiceSettings imported from elevenlabs"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused WebSocketClientProtocol imported from websockets.client"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused WebSocketServerProtocol imported from websockets.server"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Unused SpeechToTextService imported from src.application.services.speech_to_text_service"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Unused AudioState imported from src.audio.state_manager"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 25
                }
              }
            }
          ],
          "message": {
            "text": "Unused AudioStream imported from src.core.domain.entities.audio_stream"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "Unused Conversation imported from src.core.domain.entities.conversation"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "Unused Message imported from src.core.domain.entities.conversation"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/transcription_service.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 129
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'sr'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/transcription_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused import torchaudio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/unified_cache_service.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/unified_cache_service.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 43
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'str'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/unified_cache_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Method '_generate_cache_key' has no argument"
          },
          "ruleId": "no-method-argument"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/unified_cache_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "method already defined line 43"
          },
          "ruleId": "function-redefined"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/unified_cache_service.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'str'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/unified_cache_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "method already defined line 50"
          },
          "ruleId": "function-redefined"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/unified_cache_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Method '_generate_cache_key' has no argument"
          },
          "ruleId": "no-method-argument"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/unified_cache_service.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 115
                }
              }
            }
          ],
          "message": {
            "text": "Unreachable code"
          },
          "ruleId": "unreachable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/utilities.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation/content_analyzer.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 146
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'rule_name'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation/legacy_adapter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 527
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation/statistics.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused field imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_components/llm_processor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_components/models.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_components/text_to_speech_service.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 45
                }
              }
            }
          ],
          "message": {
            "text": "Unused azure.cognitiveservices.speech imported as speechsdk"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_components/text_to_speech_service.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 29
                }
              }
            }
          ],
          "message": {
            "text": "Unused generate imported from elevenlabs"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_components/text_to_speech_service.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Unused gTTS imported from gtts"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/streaming_components/text_to_speech_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused AudioFormat imported from models"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/enhanced_parent_report_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 45
                }
              }
            }
          ],
          "message": {
            "text": "class already defined line 14"
          },
          "ruleId": "function-redefined"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/enhanced_parent_report_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 94
                }
              }
            }
          ],
          "message": {
            "text": "class already defined line 14"
          },
          "ruleId": "function-redefined"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/enhanced_parent_report_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 6
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/enhanced_parent_report_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/enhanced_parent_report_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/enhanced_parent_report_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused Counter imported from collections"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/enhanced_parent_report_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Unused import nltk"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/enhanced_parent_report_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused import spacy"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/enhanced_parent_report_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Unused SentimentIntensityAnalyzer imported from nltk.sentiment"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/enhanced_parent_report_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 33
                }
              }
            }
          ],
          "message": {
            "text": "Unused import openai"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/enhanced_parent_report_service.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 34
                }
              }
            }
          ],
          "message": {
            "text": "Unused Anthropic imported from anthropic"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/parent_dashboard_service.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 315
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/parent_dashboard_service.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 422
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/parent_dashboard_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused dataclass imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/parent_dashboard_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/parent_dashboard_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "Unused AlertSeverity imported from src.domain.parentdashboard"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/parent_dashboard_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "Unused AlertType imported from src.domain.parentdashboard"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/parent_dashboard_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "Unused ParentalControl imported from src.domain.parentdashboard"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/parent_dashboard_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Unused AlertRequest imported from dashboard_components"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/report_generator_service.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/report_generator_service.py"
                },
                "region": {
                  "startColumn": 39,
                  "startLine": 130
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/report_generator_service.py"
                },
                "region": {
                  "startColumn": 39,
                  "startLine": 204
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/report_generator_service.py"
                },
                "region": {
                  "startColumn": 39,
                  "startLine": 219
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/unified_monitoring_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/unified_monitoring_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/unified_monitoring_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/unified_monitoring_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/personalization/personalization_data_manager.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 248
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'child_id'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/synthesis/synthesis_service.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 102
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'provider_type'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/synthesis/providers/base_provider.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 29
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/synthesis/providers/base_provider.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/synthesis/providers/base_provider.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/synthesis/providers/base_provider.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/use_cases/child_use_cases.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 43
                }
              }
            }
          ],
          "message": {
            "text": "Child is not callable"
          },
          "ruleId": "not-callable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 25
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 31
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 43
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 203
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 229
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'interaction_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 229
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'response' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 229
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'safety_score' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 241
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'interaction_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 241
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'reason' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 241
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'original_message' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 254
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 284
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'conversation_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 284
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'interaction_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 284
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'message' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 304
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'conversation_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 304
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'child_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 304
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'duration_seconds' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 304
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'interaction_count' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 304
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'reason' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 319
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'conversation_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 319
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'child_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 319
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'reason' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 338
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 360
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'child_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 360
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'parent_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 360
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'name' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 360
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'age' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 388
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'child_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 388
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'old_age' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 388
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'new_age' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 388
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'old_age_group' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 388
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'new_age_group' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 426
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'child_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 426
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'conversation_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 426
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'mode' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 449
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'child_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 449
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'old_preferences' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 449
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'new_preferences' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 461
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'child_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 461
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'new_settings' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 470
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'child_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/child_interaction/entities.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 470
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'device_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/entities/audio_stream.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 504
                }
              }
            }
          ],
          "message": {
            "text": "Lambda may not be necessary"
          },
          "ruleId": "unnecessary-lambda"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/entities/conversation.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 644
                }
              }
            }
          ],
          "message": {
            "text": "Lambda may not be necessary"
          },
          "ruleId": "unnecessary-lambda"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/entities/enhancedchildinteraction_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/entities/enhancedchildinteraction_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 104
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/entities/parentdashboard_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/entities/parentdashboard_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 104
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/entities/parentreport_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/entities/parentreport_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 102
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 73
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 104
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 154
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 163
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 30,
                  "startLine": 170
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 172
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 177
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 182
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 194
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 268
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 277
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 293
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 298
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 304
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/shared/base.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 313
                }
              }
            }
          ],
          "message": {
            "text": "handler is not callable"
          },
          "ruleId": "not-callable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/analytics.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'emotions'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/analytics.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 2
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/analytics.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/analytics.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/analytics.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "Unused import sqlite3"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/analytics.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 5
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/behavioral_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 2
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/audio/models/playback_options.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused field imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/cleanup/aggregates/cleanup_policy.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 118
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/audio_stream.py"
                },
                "region": {
                  "startColumn": 18,
                  "startLine": 386
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'str'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/audio_stream.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 504
                }
              }
            }
          ],
          "message": {
            "text": "Lambda may not be necessary"
          },
          "ruleId": "unnecessary-lambda"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/base.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 46
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/children.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'data'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_commands.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_commands.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_queries.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_queries.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_queries.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_queries.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_queries.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_queries.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 319
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'total_interactions'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_read_model.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_read_model.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_read_model.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_read_model.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_read_model.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 92
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 105
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 127
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 180
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 193
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 428
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_repository.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 557
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'logical_operator' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_repository.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 565
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'logical_operator' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 253
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'health_data'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 541
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'concurrent_requests'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'src.application.services.child.child_bulk_operations_service' due to 'source code string cannot contain null bytes'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 87
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/conversation.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 691
                }
              }
            }
          ],
          "message": {
            "text": "Lambda may not be necessary"
          },
          "ruleId": "unnecessary-lambda"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/emotion.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused uuid4 imported from uuid"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/family/advanced_family_system.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 745
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'children'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 358
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'usage' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 358
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'proficiency' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 358
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'trends' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 358
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'skills_practiced' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 358
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'new_skills_learned' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 358
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'improvement_areas' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 358
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'mastery_level' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 368
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'usage' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 368
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'proficiency' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 368
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'trends' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 368
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'skills_practiced' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 368
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'new_skills_learned' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 368
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'improvement_areas' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 368
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'mastery_level' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 375
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'usage' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 375
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'proficiency' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 375
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'trends' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 375
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'skills_practiced' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 375
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'new_skills_learned' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 375
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'improvement_areas' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/reporting/services/progress_analyzer.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 375
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'mastery_level' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/repositories/emotion_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/repositories/emotion_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 28
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/repositories/emotion_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 34
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/repositories/emotion_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 44
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/repositories/emotion_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 52
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/repositories/emotion_repository.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/repositories/emotion_repository.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused EmotionAnalysis imported from value_objects.emotion_analysis"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/services/advanced_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 321
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/services/advanced_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 327
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/services/emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/services/emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/services/emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/services/emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/services/emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/services/emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 25,
                  "startLine": 370
                }
              }
            }
          ],
          "message": {
            "text": "Too many positional arguments for method call"
          },
          "ruleId": "too-many-function-args"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/services/emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 967
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'e'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/services/emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 995
                }
              }
            }
          ],
          "message": {
            "text": "method already defined line 161"
          },
          "ruleId": "function-redefined"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/services/emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/services/emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused import requests"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/services/emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Unused trace imported from opentelemetry"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/services/emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 33
                }
              }
            }
          ],
          "message": {
            "text": "Unused trace_async imported from src.infrastructure.observability"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/streaming/aggregates/aggregates.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/streaming/aggregates/aggregates.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused import uuid"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/streaming/aggregates/aggregates.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused logger imported from asyncio.log"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/streaming/aggregates/aggregates.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused dataclass imported from dataclasses"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/streaming/aggregates/aggregates.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused Dict imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/streaming/aggregates/aggregates.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/streaming/aggregates/aggregates.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused import websockets"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/value_objects/educational_value_evaluator.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 239
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'category'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/value_objects/educational_value_evaluator.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 262
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'category'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/edge/edge_orchestrator.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'device_manager' due to 'expected an indented block after 'except' statement on line 83 (src.edge.device_manager, line 84)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/cloud_server_launcher.py"
                },
                "region": {
                  "startColumn": 22,
                  "startLine": 383
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'endpoint'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/cloud_server_launcher.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 568
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'attempt'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/cloud_server_launcher.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 652
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'e'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/cloud_server_launcher.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 680
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'e'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/cloud_server_launcher.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused Dict imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/cloud_server_launcher.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/cloud_server_launcher.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/enterprise_observability.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/enterprise_observability.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 29
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/enterprise_observability.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 29
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/enterprise_observability.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 29
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/enterprise_observability.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 33
                }
              }
            }
          ],
          "message": {
            "text": "Unused context imported from opentelemetry"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/enterprise_observability.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 33
                }
              }
            }
          ],
          "message": {
            "text": "Unused baggage imported from opentelemetry"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/enterprise_observability.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "Unused ASGIInstrumentor imported from opentelemetry.instrumentation.asgi"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/enterprise_observability.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Unused SimpleSpanProcessor imported from opentelemetry.sdk.trace.export"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 226
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'new_instance'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 22,
                  "startLine": 413
                }
              }
            }
          ],
          "message": {
            "text": "Too many positional arguments for method call"
          },
          "ruleId": "too-many-function-args"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 22,
                  "startLine": 413
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'lifetime' in method call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 22,
                  "startLine": 413
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'health_check' in method call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 422
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused import logging"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused import weakref"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused ABC imported from abc"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused abstractmethod imported from abc"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused ContextVar imported from contextvars"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Unused Generic imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Unused get_args imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Unused get_origin imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Unused get_type_hints imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 38
                }
              }
            }
          ],
          "message": {
            "text": "Unused containers imported from dependency_injector"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 38
                }
              }
            }
          ],
          "message": {
            "text": "Unused providers imported from dependency_injector"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Unused Provide imported from dependency_injector.wiring"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 39
                }
              }
            }
          ],
          "message": {
            "text": "Unused inject imported from dependency_injector.wiring"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "Unused retry imported from tenacity"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "Unused stop_after_attempt imported from tenacity"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/modern_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "Unused wait_exponential imported from tenacity"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/api/high_performance_api.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 191
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'e'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/api/high_performance_api.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 497
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'name'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/api/high_performance_api.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Unused asynccontextmanager imported from contextlib"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/api/high_performance_api.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/api/high_performance_api.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Unused Response imported from fastapi"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/api/high_performance_api.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Unused status imported from fastapi"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/api/high_performance_api.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 28
                }
              }
            }
          ],
          "message": {
            "text": "Unused validator imported from pydantic"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/audio/cloud_audio_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/audio/cloud_audio_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused import io"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/audio/cloud_audio_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/caching/performance_optimizer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/caching/performance_optimizer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/caching/performance_optimizer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/caching/performance_optimizer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/caching/__init__.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'multi_layer_cache' due to 'invalid syntax (src.infrastructure.caching.multi_layer_cache, line 490)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/child/sqlite_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/database/async_database_optimizer.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 234
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'e'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/database/async_database_optimizer.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 277
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'e'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/database/async_database_optimizer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/database/async_database_optimizer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Unused Tuple imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/database/async_database_optimizer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncpg"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/database/async_database_optimizer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Unused import aiomysql"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/database/async_database_optimizer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Unused create_engine imported from sqlalchemy"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/database/async_database_optimizer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Unused MetaData imported from sqlalchemy"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/database/async_database_optimizer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Unused Table imported from sqlalchemy"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/database/async_database_optimizer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Unused Column imported from sqlalchemy"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/database/async_database_optimizer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Unused Index imported from sqlalchemy"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/database/async_database_optimizer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "Unused QueuePool imported from sqlalchemy.pool"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/decorators/exception_handler.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 34
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'src.infrastructure.monitoring.metrics' due to 'expected 'except' or 'finally' block (src.infrastructure.monitoring.metrics, line 125)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/di/enterprise_container.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 77
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/di/enterprise_container.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/di/enterprise_container.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/di/enterprise_container.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 97
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/di/enterprise_container.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 103
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/di/enterprise_container.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 109
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/di/enterprise_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused import weakref"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/di/enterprise_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/di/enterprise_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused Provide imported from dependency_injector.wiring"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/di/enterprise_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused inject imported from dependency_injector.wiring"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/di/enterprise_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Unused BaseModel imported from pydantic"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/di/enterprise_container.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Unused Field imported from pydantic"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/emotion/audio_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 17,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'magnitudes'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/emotion/emotion_repository.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'cutoff_date'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/emotion/__init__.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 5
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'text_emotion_analyzer' due to 'invalid non-printable character U+FEFF (src.infrastructure.emotion.text_emotion_analyzer, line 4)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/exception_handling/enterprise_exception_handler.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 305
                }
              }
            }
          ],
          "message": {
            "text": "The raise statement is not inside an except clause"
          },
          "ruleId": "misplaced-bare-raise"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/exception_handling/enterprise_exception_handler.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 310
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/exception_handling/enterprise_exception_handler.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/exception_handling/global_handler.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'src.infrastructure.monitoring.metrics' due to 'expected 'except' or 'finally' block (src.infrastructure.monitoring.metrics, line 125)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/exception_handling/global_handler.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 583
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'error_code'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/advanced_ai_orchestrator.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/advanced_ai_orchestrator.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/advanced_ai_orchestrator.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/advanced_ai_orchestrator.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/audio_io.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/audio_io.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 92
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/audio_io.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Unused normalize imported from pydub.effects"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/audio_manager.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 33
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/audio_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 140
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/audio_manager.py"
                },
                "region": {
                  "startColumn": 30,
                  "startLine": 252
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/distributed_processor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 36
                }
              }
            }
          ],
          "message": {
            "text": "Unused import openai"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/distributed_processor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Unused import whisper"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/distributed_processor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 46
                }
              }
            }
          ],
          "message": {
            "text": "Unused import librosa"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/distributed_processor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Unused soundfile imported as sf"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/distributed_processor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 55
                }
              }
            }
          ],
          "message": {
            "text": "Unused ModernTranscriptionService imported from application.services.audio.transcription_service"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/distributed_processor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 58
                }
              }
            }
          ],
          "message": {
            "text": "Unused VoiceInteractionService imported from application.services.voice_interaction_service"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/enhanced_hume_2025.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 362
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'i'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/enhanced_hume_2025.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 532
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'audio_data'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/enhanced_hume_2025.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 633
                }
              }
            }
          ],
          "message": {
            "text": "Method 'demo_enhanced_hume' has no argument"
          },
          "ruleId": "no-method-argument"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/enhanced_hume_2025.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/enhanced_hume_2025.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 545
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'adjusted_confidence'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/enhanced_hume_integration_2025.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/hume_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 3)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/hume_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 3)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/hume_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 3)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/hume_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 3)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/hume_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused numpy imported as np"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/hume_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "Unused Tuple imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/hume_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "Unused Path imported from pathlib"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/hume_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/hume_emotion_analyzer.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused import base64"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/speech_disorder_detector.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'voiced_flag'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/speech_disorder_detector.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'voiced_flag'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/voice_enhancements.py"
                },
                "region": {
                  "startColumn": 25,
                  "startLine": 108
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'float'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/mock/transformers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/mock/transformers.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused import ast"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/graphql/context.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 33
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'str'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/graphql/context.py"
                },
                "region": {
                  "startColumn": 22,
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'str'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/graphql/context.py"
                },
                "region": {
                  "startColumn": 23,
                  "startLine": 41
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'str'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/graphql/dataloaders.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 246
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/graphql/performance.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_consumer.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 41
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_consumer.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 200
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'topic_partition'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_consumer.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 349
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'publisher'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_consumer.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 356
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'dlq_event'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_driven_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 127
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_driven_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 135
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_driven_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 140
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_driven_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 149
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_driven_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 157
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_driven_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 165
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_driven_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 174
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_driven_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 181
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_driven_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 190
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_driven_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 197
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_driven_architecture.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 243
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'message_id'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_driven_architecture.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 505
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'result'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_driven_architecture.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_handlers.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 183
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'conversation_id'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_handlers.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 184
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'started_at'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_handlers.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 194
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'child_id'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_publisher.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 29
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/messaging/event_publisher.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 132
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'result'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 100
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 105
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 112
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 117
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 127
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 135
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 146
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 153
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 162
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 167
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 172
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 260
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'version' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 293
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'service'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 750
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Type imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Unused import kubernetes"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused BaseModel imported from pydantic"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused Field imported from pydantic"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Unused Protocol imported from typing_extensions"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/observability/custom_metrics.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/observability/custom_metrics.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/observability/custom_metrics.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/observability/custom_metrics.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/observability/custom_metrics.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/observability/custom_metrics.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 178
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'registry'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/observability/custom_metrics.py"
                },
                "region": {
                  "startColumn": 27,
                  "startLine": 771
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'str'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/observability/custom_metrics.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 826
                }
              }
            }
          ],
          "message": {
            "text": "Too many positional arguments for method call"
          },
          "ruleId": "too-many-function-args"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/performance/auto_scaling.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused Tuple imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/base.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 120
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 170
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 175
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 180
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 185
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 194
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 202
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 209
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 214
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 329
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/connection_pool.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused Base imported from models"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/connection_pool.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/connection_pool.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused pool imported from sqlalchemy"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/models.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 587
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/base_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 25
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/base_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 75
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/base_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 377
                }
              }
            }
          ],
          "message": {
            "text": "Variadics removed in overriding 'BaseSQLiteRepository.list' method"
          },
          "ruleId": "arguments-differ"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/base_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 486
                }
              }
            }
          ],
          "message": {
            "text": "Variadics removed in overriding 'BaseSQLiteRepository.count' method"
          },
          "ruleId": "arguments-differ"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/base_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 562
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'total_count' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/base_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 608
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'total_count' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/base_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 648
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'total_count' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/base_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 676
                }
              }
            }
          ],
          "message": {
            "text": "Number of parameters was 2 in 'BaseRepository.find_one' and is now 2 in overriding 'BaseSQLiteRepository.find_one' method"
          },
          "ruleId": "arguments-differ"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/base_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 676
                }
              }
            }
          ],
          "message": {
            "text": "Variadics removed in overriding 'BaseSQLiteRepository.find_one' method"
          },
          "ruleId": "arguments-differ"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/base_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 773
                }
              }
            }
          ],
          "message": {
            "text": "Variadics removed in overriding 'BaseSQLiteRepository.aggregate' method"
          },
          "ruleId": "arguments-differ"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/comprehensive_fix_and_report.py"
                },
                "region": {
                  "startColumn": 18,
                  "startLine": 74
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'dirs'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/conversation_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 157
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/conversation_sqlite_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 307
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/emotion_log_repository.py"
                },
                "region": {
                  "startColumn": 24,
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'str'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/event_sourcing_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/event_sourcing_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 31
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 36
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 251
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 455
                }
              }
            }
          ],
          "message": {
            "text": "Variadics removed in overriding 'SQLAlchemyBaseRepository.list' method"
          },
          "ruleId": "arguments-differ"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 507
                }
              }
            }
          ],
          "message": {
            "text": "Variadics removed in overriding 'SQLAlchemyBaseRepository.count' method"
          },
          "ruleId": "arguments-differ"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 574
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'total_count' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 609
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'total_count' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 639
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'total_count' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 665
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'total_count' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 19,
                  "startLine": 682
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'total_count' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 714
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'total_count' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 722
                }
              }
            }
          ],
          "message": {
            "text": "Number of parameters was 2 in 'BaseRepository.find_one' and is now 2 in overriding 'SQLAlchemyBaseRepository.find_one' method"
          },
          "ruleId": "arguments-differ"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 722
                }
              }
            }
          ],
          "message": {
            "text": "Variadics removed in overriding 'SQLAlchemyBaseRepository.find_one' method"
          },
          "ruleId": "arguments-differ"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/persistence/repositories/sqlalchemy_base_repository.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 750
                }
              }
            }
          ],
          "message": {
            "text": "Variadics removed in overriding 'SQLAlchemyBaseRepository.aggregate' method"
          },
          "ruleId": "arguments-differ"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 133
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 138
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 143
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 148
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 153
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 158
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 167
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 172
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 177
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 182
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 187
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 314
                }
              }
            }
          ],
          "message": {
            "text": "Use of exec"
          },
          "ruleId": "exec-used"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 320
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 326
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 332
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 6
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused import os"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Unused Callable imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Unused Type imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused urlparse imported from urllib.parse"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Unused import docker"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/plugins/plugin_architecture.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "Unused Protocol imported from typing_extensions"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/processing/async_processor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/processing/async_processor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/processing/async_processor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/processing/async_processor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/processing/async_processor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/processing/async_processor.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 565
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'priority'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/processing/async_processor.py"
                },
                "region": {
                  "startColumn": 20,
                  "startLine": 753
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'worker_id'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/processing/async_processor.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 896
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'analysis_type'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/processing/async_processor.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 940
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'data'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/processing/async_processor.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 1058
                }
              }
            }
          ],
          "message": {
            "text": "Too many arguments for logging format string"
          },
          "ruleId": "logging-too-many-args"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/processing/async_processor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 25
                }
              }
            }
          ],
          "message": {
            "text": "Unused import librosa"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/processing/async_processor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 26
                }
              }
            }
          ],
          "message": {
            "text": "Unused numpy imported as np"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/processing/async_processor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "Unused Image imported from PIL"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/reporting/chart_generator.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused seaborn imported as sns"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/reporting/pdf_generator.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused letter imported from reportlab.lib.pagesizes"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/reporting/pdf_generator.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused canvas imported from reportlab.pdfgen"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/advanced_content_filter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/advanced_content_filter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/advanced_content_filter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/advanced_content_filter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/advanced_content_filter.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/advanced_content_filter.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 552
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'category'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/api_security_gateway.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/api_security_gateway.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/api_security_gateway.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/api_security_gateway.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/api_security_gateway.py"
                },
                "region": {
                  "startColumn": 60,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Lambda may not be necessary"
          },
          "ruleId": "unnecessary-lambda"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/audit_logger.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused hashes imported from cryptography.hazmat.primitives"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/audit_logger.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Unused rsa imported from cryptography.hazmat.primitives.asymmetric"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/audit_logger.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Unused padding imported from cryptography.hazmat.primitives.asymmetric"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/audit_logger.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Unused validator imported from pydantic"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/audit_logger.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 25
                }
              }
            }
          ],
          "message": {
            "text": "Unused SecurityException imported from domain.exceptions"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/audit_system.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/audit_system.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/audit_system.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/audit_system.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/audit_system.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/enhanced_security.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/enhanced_security.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/enhanced_security.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/enhanced_security.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/enhanced_security.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/homomorphic_encryption.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/homomorphic_encryption.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/homomorphic_encryption.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/homomorphic_encryption.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/homomorphic_encryption.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/jwt_auth.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/jwt_auth.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/jwt_enhanced.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/jwt_enhanced.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/jwt_enhanced.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/jwt_enhanced.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/jwt_enhanced.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/rbac_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/rbac_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/rbac_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/rbac_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/rbac_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/rbac_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/rbac_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/rbac_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/safe_expression_parser.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 131
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/safe_expression_parser.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 137
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/safe_expression_parser.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 143
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/safe_expression_parser.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 152
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/safe_expression_parser.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 159
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/safe_expression_parser.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/safe_expression_parser.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/safe_expression_parser.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused validator imported from pydantic"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/secrets_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 101
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/secrets_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 110
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/secrets_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 115
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/secrets_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 120
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/secrets_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 125
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 390
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'int'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused datetime imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused HTTPException imported from fastapi"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused Response imported from fastapi"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security_audit_logger.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security_audit_logger.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security_audit_logger.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security_audit_logger.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security_audit_logger.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security_audit_logger.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 594
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security_audit_logger.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 627
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'cutoff'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 25
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'vault_secrets_manager' due to 'invalid syntax (src.infrastructure.security.vault_secrets_manager, line 89)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 206
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'ip_address'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/unified_encryption_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/unified_encryption_service.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused serialization imported from cryptography.hazmat.primitives"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/vault_integration.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/vault_integration.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/vault_integration.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/vault_integration.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/vault_integration.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/vault_integration.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 414
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'full_path'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/vault_integration.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 542
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'e'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/vault_integration.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 606
                }
              }
            }
          ],
          "message": {
            "text": "Using global for '_vault_manager' but no assignment is done"
          },
          "ruleId": "global-variable-not-assigned"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/vault_integration.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Unused import logging"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/vault_integration.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/vault_integration.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 29
                }
              }
            }
          ],
          "message": {
            "text": "Unused Fernet imported from cryptography.fernet"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/vault_integration.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 30
                }
              }
            }
          ],
          "message": {
            "text": "Unused Forbidden imported from hvac.exceptions"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/state/application_state_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 76
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/state/application_state_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 86
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/state/application_state_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 91
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/state/application_state_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 96
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/state/application_state_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 101
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/state/application_state_manager.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 110
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/state/application_state_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused import weakref"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/state/application_state_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/state/application_state_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused Field imported from pydantic"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/state/application_state_manager.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Unused Protocol imported from typing_extensions"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/continuous_learning/feedback/analysis_strategies.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 31
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/continuous_learning/monitoring/performance_monitor.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 716
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'final_report'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 4)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 4)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 4)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 46
                }
              }
            }
          ],
          "message": {
            "text": "Unused import librosa"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Unused numpy imported as np"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 48
                }
              }
            }
          ],
          "message": {
            "text": "Unused import torch"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 50
                }
              }
            }
          ],
          "message": {
            "text": "Unused signal imported from scipy"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 122
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'json' (imported line 7)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 123
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'datetime' (imported line 5)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 22,
                  "startLine": 502
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'processed_audio' in function call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 22,
                  "startLine": 502
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'audio_metadata' in function call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 25,
                  "startLine": 522
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'ai_response' in function call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 25,
                  "startLine": 522
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'safety_report' in function call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 565
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'kfp' (imported line 3)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 653
                }
              }
            }
          ],
          "message": {
            "text": "Unused import torch"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Model imported from kubeflow.dsl"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "Unused import kfp"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/ml/pipelines/child_interaction_pipeline.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/enterprise_dashboard.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/enterprise_dashboard.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/enterprise_dashboard.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/enterprise_dashboard.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/enterprise_dashboard.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 537
                }
              }
            }
          ],
          "message": {
            "text": "Too many positional arguments for method call"
          },
          "ruleId": "too-many-function-args"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/enterprise_dashboard.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 535
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'alert_type'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'src.presentation.ui.widgets.conversation_widget' due to 'invalid syntax (src.presentation.ui.widgets.conversation_widget, line 98)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 20
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'src.presentation.ui.networking.websocket_client' due to 'invalid syntax (src.presentation.ui.networking.websocket_client, line 64)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'src.presentation.ui.main_window' due to 'invalid syntax (src.presentation.ui.main_window, line 153)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'src.presentation.ui.audio.audio_engine' due to 'closing parenthesis '}' does not match opening parenthesis '(' on line 259 (src.presentation.ui.audio.audio_engine, line 260)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 276
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Unused QDateTime imported from PySide6.QtCore"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Unused QEasingCurve imported from PySide6.QtCore"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Unused QPoint imported from PySide6.QtCore"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Unused QPropertyAnimation imported from PySide6.QtCore"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Unused QRect imported from PySide6.QtCore"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Unused QRunnable imported from PySide6.QtCore"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Unused QSettings imported from PySide6.QtCore"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Unused QSize imported from PySide6.QtCore"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Unused QThreadPool imported from PySide6.QtCore"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "Unused QUrl imported from PySide6.QtCore"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 64
                }
              }
            }
          ],
          "message": {
            "text": "Unused QAction imported from PySide6.QtGui as QGuiAction"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused QBrush imported from PySide6.QtGui"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused QColor imported from PySide6.QtGui"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused QDesktopServices imported from PySide6.QtGui"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused QGradient imported from PySide6.QtGui"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused QLinearGradient imported from PySide6.QtGui"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused QMovie imported from PySide6.QtGui"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused QPainter imported from PySide6.QtGui"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused QPalette imported from PySide6.QtGui"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused QPen imported from PySide6.QtGui"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused QSyntaxHighlighter imported from PySide6.QtGui"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused QTextCharFormat imported from PySide6.QtGui"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused QTextCursor imported from PySide6.QtGui"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unused QCheckBox imported from PySide6.QtWidgets"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unused QFrame imported from PySide6.QtWidgets"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unused QHeaderView imported from PySide6.QtWidgets"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unused QScrollArea imported from PySide6.QtWidgets"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unused QSizePolicy imported from PySide6.QtWidgets"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unused QSlider imported from PySide6.QtWidgets"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unused QSpacerItem imported from PySide6.QtWidgets"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unused QSpinBox imported from PySide6.QtWidgets"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unused QStyle imported from PySide6.QtWidgets"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unused QTableWidget imported from PySide6.QtWidgets"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/modern_ui.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 82
                }
              }
            }
          ],
          "message": {
            "text": "Unused QTableWidgetItem imported from PySide6.QtWidgets"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/authentication.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/authentication.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/authentication.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/authentication.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/authentication.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/authentication.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 314
                }
              }
            }
          ],
          "message": {
            "text": "Too many positional arguments for method call"
          },
          "ruleId": "too-many-function-args"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/authentication.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 391
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'expires_at'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/authentication.py"
                },
                "region": {
                  "startColumn": 24,
                  "startLine": 533
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'str'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/authentication.py"
                },
                "region": {
                  "startColumn": 29,
                  "startLine": 610
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'str'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/performance_monitor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/performance_monitor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/performance_monitor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/performance_monitor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/performance_monitor.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/performance_monitor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "Unused import prometheus_client"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/performance_monitor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 24
                }
              }
            }
          ],
          "message": {
            "text": "Unused Summary imported from prometheus_client"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/performance_monitor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 32
                }
              }
            }
          ],
          "message": {
            "text": "Unused execute imported from graphql"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/performance_monitor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 32
                }
              }
            }
          ],
          "message": {
            "text": "Unused validate imported from graphql"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/performance_monitor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 33
                }
              }
            }
          ],
          "message": {
            "text": "Unused ExecutionResult imported from graphql.execution"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/resolvers.py"
                },
                "region": {
                  "startColumn": 30,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/schema.py"
                },
                "region": {
                  "startColumn": 26,
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/schema.py"
                },
                "region": {
                  "startColumn": 33,
                  "startLine": 69
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'id'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/__init__.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'federation_gateway' due to 'expected an indented block after 'except' statement on line 586 (src.presentation.api.graphql.federation_gateway, line 587)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/middleware/auth.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused Callable imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/middleware/auth.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused SecretType imported from infrastructure.security.secrets_manager"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/rest/classification_strategies.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 36
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/rest/production_api.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'src.infrastructure.monitoring.metrics' due to 'expected 'except' or 'finally' block (src.infrastructure.monitoring.metrics, line 125)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/rest/smart_restructure.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/rest/smart_restructure.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/rest/smart_restructure.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/rest/smart_restructure.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/rest/smart_restructure.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/rest/smart_restructure.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/rest/smart_restructure.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/rest/smart_restructure.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused import os"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/grpc/client.py"
                },
                "region": {
                  "startColumn": 33,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/grpc/client.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 34
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'request'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/grpc/client.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'request'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/__init__.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'audio.audio_engine' due to 'closing parenthesis '}' does not match opening parenthesis '(' on line 259 (src.presentation.ui.audio.audio_engine, line 260)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/__init__.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'main_window' due to 'invalid syntax (src.presentation.ui.main_window, line 153)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/__init__.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'networking.websocket_client' due to 'invalid syntax (src.presentation.ui.networking.websocket_client, line 64)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/__init__.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'widgets.conversation_widget' due to 'invalid syntax (src.presentation.ui.widgets.conversation_widget, line 98)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/audio/audio_recorder.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/audio/__init__.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'audio_engine' due to 'closing parenthesis '}' does not match opening parenthesis '(' on line 259 (src.presentation.ui.audio.audio_engine, line 260)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/networking/message_sender.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/networking/message_sender.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/networking/__init__.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'websocket_client' due to 'invalid syntax (src.presentation.ui.networking.websocket_client, line 64)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/widgets/audio_widget.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'audio.audio_engine' due to 'closing parenthesis '}' does not match opening parenthesis '(' on line 259 (src.presentation.ui.audio.audio_engine, line 260)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/widgets/waveform_widget.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/ui/widgets/__init__.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'conversation_widget' due to 'invalid syntax (src.presentation.ui.widgets.conversation_widget, line 98)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/coverage_tracker.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/coverage_tracker.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/coverage_tracker.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused Dict imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/coverage_tracker.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused Set imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/mutation_engine.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 302
                }
              }
            }
          ],
          "message": {
            "text": "Consider using enumerate instead of iterating with range and len"
          },
          "ruleId": "consider-using-enumerate"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/mutation_engine.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/mutation_engine.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 12
                }
              }
            }
          ],
          "message": {
            "text": "Unused import re"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/mutation_engine.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/mutation_engine.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 3
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Any' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Dict' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'List' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'Optional' (imported line 1)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 24,
                  "startLine": 221
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'response'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 28,
                  "startLine": 293
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'response'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 321
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'median_response_time'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 325
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'min_response_time'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 326
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'max_response_time'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 24,
                  "startLine": 406
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'response'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 411
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'exc'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 421
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'throughput'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 467
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'normal_duration'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 479
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'spike_duration'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 527
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'initial_cpu'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 548
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'load_responses'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 602
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'duration'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/performance_tester.py"
                },
                "region": {
                  "startColumn": 20,
                  "startLine": 645
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'response'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/testing/smart_fuzzer.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 227
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'i'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/ai_test_generator.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 203
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'i'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/comprehensive_testing_framework.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused import os"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/comprehensive_testing_framework.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused import sys"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/comprehensive_testing_framework.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/comprehensive_testing_framework.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Unused Path imported from pathlib"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/comprehensive_testing_framework.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Unused Set imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/comprehensive_testing_framework.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Unused Tuple imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/comprehensive_testing_framework.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused import pytest"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/comprehensive_testing_framework.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "Unused import pytest_asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/conftest.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 41
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'sys' (imported line 14)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/conftest.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'sys' (imported line 14)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/conftest.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'sys' (imported line 14)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/conftest.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 38
                }
              }
            }
          ],
          "message": {
            "text": "Unused import torch"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/conftest.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 49
                }
              }
            }
          ],
          "message": {
            "text": "Unused import pyaudio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/conftest.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 57
                }
              }
            }
          ],
          "message": {
            "text": "Unused import redis"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/contract_tests.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/contract_tests.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused import os"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/contract_tests.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/contract_tests.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused Path imported from pathlib"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/contract_tests.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused Union imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/contract_tests.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Unused import pytest"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "Unused BaseAIService imported from src.application.services.ai.interfaces.ai_service_interface"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "Unused IAIService imported from src.application.services.ai.interfaces.ai_service_interface"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "Unused IEmotionAnalyzer imported from src.application.services.ai.interfaces.ai_service_interface"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 43
                }
              }
            }
          ],
          "message": {
            "text": "Unused ModerationService imported from src.application.services.core.moderation_service"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 54
                }
              }
            }
          ],
          "message": {
            "text": "Unused TranscriptionService imported from src.application.services.core.transcription_service"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused Voice imported from src.infrastructure.external_services.mock.elevenlabs"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 65
                }
              }
            }
          ],
          "message": {
            "text": "Unused generate imported from src.infrastructure.external_services.mock.elevenlabs"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Unused AutoTokenizer imported from src.infrastructure.external_services.mock.transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Unused pipeline imported from src.infrastructure.external_services.mock.transformers"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Unused ChildProfile imported from src.application.services.models"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Unused ServiceRequest imported from src.application.services.models"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 80
                }
              }
            }
          ],
          "message": {
            "text": "Unused ServiceResponse imported from src.application.services.models"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "Unused UseCaseFactory imported from src.application.services.core.use_cases.use_cases"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 95
                }
              }
            }
          ],
          "message": {
            "text": "Unused VoiceInteractionUseCase imported from src.application.services.core.use_cases.use_cases"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 139
                }
              }
            }
          ],
          "message": {
            "text": "Unused AudioStream imported from src.core.domain.entities.audio_stream"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 148
                }
              }
            }
          ],
          "message": {
            "text": "Unused Child imported from src.domain.entities.child"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 157
                }
              }
            }
          ],
          "message": {
            "text": "Unused Conversation imported from src.domain.entities.conversation"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 171
                }
              }
            }
          ],
          "message": {
            "text": "Unused ModerationService imported from src.application.services.core.moderation_service"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/final_test.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "Unused import importlib"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/mutation_tests.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 321
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'stdout'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/mutation_tests.py"
                },
                "region": {
                  "startColumn": 20,
                  "startLine": 321
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'stderr'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/mutation_tests.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused import random"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/mutation_tests.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "Unused import subprocess"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/mutation_tests.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "Unused Set imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/mutation_tests.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 21
                }
              }
            }
          ],
          "message": {
            "text": "Unused import pytest"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_backward_compatibility.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Statement seems to have no effect"
          },
          "ruleId": "pointless-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_basic_functionality.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 178
                }
              }
            }
          ],
          "message": {
            "text": "Unused AITeddyBearService imported from src.application.main_service"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_comprehensive_frontend.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 814
                }
              }
            }
          ],
          "message": {
            "text": "Using variable 'result' before assignment"
          },
          "ruleId": "used-before-assignment"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_comprehensive_frontend.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 945
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'conversation'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_comprehensive_frontend.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused import json"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_comprehensive_frontend.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "Unused timedelta imported from datetime"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_comprehensive_frontend.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused patch imported from unittest.mock"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_comprehensive_frontend.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused Dict imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_comprehensive_frontend.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_comprehensive_frontend.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused List imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_integration.py"
                },
                "region": {
                  "startColumn": 51,
                  "startLine": 132
                }
              }
            }
          ],
          "message": {
            "text": "Lambda may not be necessary"
          },
          "ruleId": "unnecessary-lambda"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_integration.py"
                },
                "region": {
                  "startColumn": 59,
                  "startLine": 133
                }
              }
            }
          ],
          "message": {
            "text": "Lambda may not be necessary"
          },
          "ruleId": "unnecessary-lambda"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_integration.py"
                },
                "region": {
                  "startColumn": 40,
                  "startLine": 134
                }
              }
            }
          ],
          "message": {
            "text": "Lambda may not be necessary"
          },
          "ruleId": "unnecessary-lambda"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_integration.py"
                },
                "region": {
                  "startColumn": 38,
                  "startLine": 135
                }
              }
            }
          ],
          "message": {
            "text": "Lambda may not be necessary"
          },
          "ruleId": "unnecessary-lambda"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_integration.py"
                },
                "region": {
                  "startColumn": 40,
                  "startLine": 136
                }
              }
            }
          ],
          "message": {
            "text": "Lambda may not be necessary"
          },
          "ruleId": "unnecessary-lambda"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_integration.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 157
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'db'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_integration.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 164
                }
              }
            }
          ],
          "message": {
            "text": "Unused AITeddyBearService imported from src.application.main_service"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_integration.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 165
                }
              }
            }
          ],
          "message": {
            "text": "Unused SpeechDisorderDetector imported from src.audio.speech_disorder_detector"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/test_integration.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 166
                }
              }
            }
          ],
          "message": {
            "text": "Unused EmotionAnalyzer imported from src.domain.services.emotion_analyzer"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/framework/base.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 66
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/framework/builders.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 36
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/framework/builders.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 36
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'parent_id' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/framework/builders.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 36
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'preferences' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/framework/builders.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 36
                }
              }
            }
          ],
          "message": {
            "text": "Unexpected keyword argument 'created_at' in constructor call"
          },
          "ruleId": "unexpected-keyword-arg"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/framework/builders.py"
                },
                "region": {
                  "startColumn": 15,
                  "startLine": 36
                }
              }
            }
          ],
          "message": {
            "text": "No value for argument 'device_id' in constructor call"
          },
          "ruleId": "no-value-for-parameter"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/framework/builders.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 259
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'set'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/framework/validators.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 309
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'info_type'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/integration/test_ai_modules_integration.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 53
                }
              }
            }
          ],
          "message": {
            "text": "Cannot import 'src.application.services.ai.main_service' due to 'expected 'except' or 'finally' block (src.application.services.ai.main_service, line 155)'"
          },
          "ruleId": "syntax-error"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/integration/test_ai_modules_integration.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused Dict imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/integration/test_ai_modules_integration.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/integration/test_ai_modules_integration.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "Unused patch imported from unittest.mock"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/integration/test_voice_api_integration.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 389
                }
              }
            }
          ],
          "message": {
            "text": "Unused import whisper"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/performance/test_system_performance.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 63
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'exc'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/performance/test_system_performance.py"
                },
                "region": {
                  "startColumn": 12,
                  "startLine": 109
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'result'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/performance/test_system_performance.py"
                },
                "region": {
                  "startColumn": 20,
                  "startLine": 256
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'response'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/security/test_child_protection_comprehensive.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "String statement has no effect"
          },
          "ruleId": "pointless-string-statement"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/security/test_child_protection_comprehensive.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 171
                }
              }
            }
          ],
          "message": {
            "text": "Unnecessary pass statement"
          },
          "ruleId": "unnecessary-pass"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/security/test_phase1_security_foundation.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 324
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'handler'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/security/test_phase1_security_foundation.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 457
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'audit_logger'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/security/test_phase1_security_foundation.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 6
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/security/test_phase1_security_foundation.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 8
                }
              }
            }
          ],
          "message": {
            "text": "Unused import os"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/security/test_phase1_security_foundation.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused AsyncMock imported from unittest.mock"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/security/test_phase1_security_foundation.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused MagicMock imported from unittest.mock"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/security/test_phase1_security_foundation.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "Unused patch imported from unittest.mock"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/security/test_phase1_security_foundation.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused Fernet imported from cryptography.fernet"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_ai_safety_system.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 327
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'older_result'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_ai_safety_system.py"
                },
                "region": {
                  "startColumn": 0,
                  "startLine": 1
                }
              }
            }
          ],
          "message": {
            "text": "Unused Optional imported from typing"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_container.py"
                },
                "region": {
                  "startColumn": 28,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Lambda may not be necessary"
          },
          "ruleId": "unnecessary-lambda"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_conversation_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 468
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'created_conversation'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_conversation_repository.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 518
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'created_conversation'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_distributed_processor.py"
                },
                "region": {
                  "startColumn": 57,
                  "startLine": 61
                }
              }
            }
          ],
          "message": {
            "text": "Using variable 'import_error' before assignment"
          },
          "ruleId": "used-before-assignment"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_distributed_processor.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 36
                }
              }
            }
          ],
          "message": {
            "text": "Unused RAY_AVAILABLE imported from src.infrastructure.ai.distributed_processor"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_graphql_federation.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 17
                }
              }
            }
          ],
          "message": {
            "text": "Unused import asyncio"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_graphql_federation.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 31
                }
              }
            }
          ],
          "message": {
            "text": "Unused AuthConfig imported from src.infrastructure.graphql.authentication"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_graphql_federation.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 31
                }
              }
            }
          ],
          "message": {
            "text": "Unused AuthenticationService imported from src.infrastructure.graphql.authentication"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_homomorphic_encryption.py"
                },
                "region": {
                  "startColumn": 53,
                  "startLine": 37
                }
              }
            }
          ],
          "message": {
            "text": "Using variable 'import_error' before assignment"
          },
          "ruleId": "used-before-assignment"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_homomorphic_encryption.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "Unused ProcessingMode imported from src.infrastructure.security.homomorphic_encryption"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_multi_layer_cache.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused L2RedisCache imported from src.infrastructure.caching_advanced.multi_layer_cache"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_multi_layer_cache.py"
                },
                "region": {
                  "startColumn": 4,
                  "startLine": 14
                }
              }
            }
          ],
          "message": {
            "text": "Unused L3CDNCache imported from src.infrastructure.caching_advanced.multi_layer_cache"
          },
          "ruleId": "unused-import"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_voice_service.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 46
                }
              }
            }
          ],
          "message": {
            "text": "Reimport 'base64' (imported line 7)"
          },
          "ruleId": "reimported"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_voice_service.py"
                },
                "region": {
                  "startColumn": 20,
                  "startLine": 116
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_voice_service.py"
                },
                "region": {
                  "startColumn": 56,
                  "startLine": 164
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_voice_service.py"
                },
                "region": {
                  "startColumn": 60,
                  "startLine": 167
                }
              }
            }
          ],
          "message": {
            "text": "Redefining built-in 'format'"
          },
          "ruleId": "redefined-builtin"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_voice_service.py"
                },
                "region": {
                  "startColumn": 16,
                  "startLine": 347
                }
              }
            }
          ],
          "message": {
            "text": "Unused variable 'wav_data'"
          },
          "ruleId": "unused-variable"
        },
        {
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "tests/unit/test_voice_service.py"
                },
                "region": {
                  "startColumn": 8,
                  "startLine": 45
                }
              }
            }
          ],
          "message": {
            "text": "Unused Any imported from typing"
          },
          "ruleId": "unused-import"
        }
      ],
      "tool": {
        "driver": {
          "informationUri": "https://pylint.org",
          "name": "Pylint",
          "rules": null,
          "version": "3.3.6"
        }
      }
    },
    {
      "tool": {
        "driver": {
          "informationUri": "https://github.com/mgechev/revive",
          "name": "revive",
          "rules": null
        }
      }
    },
    {
      "invocations": [
        {
          "executionSuccessful": true,
          "toolExecutionNotifications": [
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/dashboards/components/MetricCard.tsx:1:\n `��/` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/security/vault_secrets_manager.py:89:\n `[str]` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/application/services/core/push_service.py:310:\n missing element"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/external_services/clients/openai_speech_client.py:15:\n `\r\n    \"\"\"Infrastructure client for OpenAI Speech API\"\"\"\r\n\r\n    def __init__(self, api_key: str):\r\n        self.client = AsyncOpenAI(api_key=api_key)\r\n        self.logger = logging.getLogger(self.__class__.__name__)\r\n\r\n    async def transcribe_audio(\r\n        self,\r\n        audio_data: np.ndarray,\r\n        language: Optional[str] = None,\r\n        model: str = \"whisper-1\",\r\n    ) -\u003e Optional[Dict[str, Any]]:\r\n        \"\"\"Transcribe audio using OpenAI Whisper API\"\"\"\r\n        try:\r\n            # Create temporary file\r\n            with tempfile.NamedTemporaryFile(suffix=\".wav\", delete=False) as temp_file:\r\n                # Write audio data to temp file\r\n                sf.write(temp_file.name, audio_data, 16000)\r\n\r\n                # Transcribe with OpenAI\r\n                with open(temp_file.name, \"rb\") as audio_file:\r\n                    transcript = await self.client.audio.transcriptions.create(\r\n                        model=model,\r\n                        file=audio_file,\r\n                        language=language,\r\n                        response_format=\"verbose_json\",\r\n                        timestamp_granularities=[\"word\", \"segment\"],\r\n                    )\r\n\r\n                return {\r\n                    \"text\": transcript.text.strip(),\r\n                    \"language\": transcript.language,\r\n                    \"duration\": transcript.duration,\r\n                    \"segments\": getattr(transcript, \"segments\", []),\r\n                    \"words\": getattr(transcript, \"words\", []),\r\n                }\r\n\r\n        except Exception as e:\r\n            self.logger.error(f\"OpenAI transcription error: {e}\")\r\n            return None\r\n\r\n    async def generate_speech(\r\n        self,\r\n        text: str,\r\n        voice: str = \"alloy\",\r\n        model: str = \"tts-1\",\r\n        response_format: str = \"mp3\",\r\n        speed: float = 1.0,\r\n    ) -\u003e Optional[bytes]:\r\n        \"\"\"Generate speech using OpenAI TTS\"\"\"\r\n        try:\r\n            response = await self.client.audio.speech.create(\r\n                model=model,\r\n                voice=voice,\r\n                input=text,\r\n                response_format=response_format,\r\n                speed=speed,\r\n            )\r\n\r\n            return response.content\r\n\r\n        except Exception as e:\r\n            self.logger.error(f\"OpenAI speech generation error: {e}\")\r\n            return None\r\n\r\n    def get_available_voices(self) -\u003e list:\r\n        \"\"\"Get available TTS voices\"\"\"\r\n        return [\"alloy\", \"echo\", \"fable\", \"onyx\", \"nova\", \"shimmer\"]\r\n\r\n    async def is_available(self) -\u003e bool:\r\n        \"\"\"Check if OpenAI service is available\"\"\"\r\n        try:\r\n            # Simple health check by listing models\r\n            models = await self.client.models.list()\r\n            return len(models.data) \u003e 0\r\n\r\n        # FIXME: replace with specific exception\r\nexcept Exception as exc:` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/presentation/ui/networking/websocket_client.py:1:\n `\"\"\"\r\nEnterprise WebSocket Client for AI Teddy Bear\r\nProvides reliable real-time communication with auto-reconnection capability\r\n\"\"\"\r\n\r\nimport json\r\nimport logging\r\nfrom datetime import datetime\r\nfrom typing import Any, Dict\r\n\r\nimport structlog\r\nfrom PySide6.QtCore import QObject, QTimer, QUrl, Signal\r\nfrom PySide6.QtWebSockets import QWebSocket\r\n\r\nlogger = structlog.get_logger()\r\n\r\n\r\nclass WebSocketClient(QObject):\r\n    \"\"\"Enterprise WebSocket client with auto-reconnection\"\"\"\r\n\r\n    connected = Signal()\r\n    disconnected = Signal()\r\n    message_received = Signal(dict)\r\n    error_occurred = Signal(str)\r\n    connection_status_changed = Signal(str)\r\n\r\n    def __init__(self, parent=None):\r\n        super().__init__(parent)\r\n        self.websocket = QWebSocket()\r\n        self.url = QUrl(\"ws://localhost:8000/ws/ui_session\")\r\n        self.reconnect_timer = QTimer()\r\n        self.heartbeat_timer = QTimer()\r\n        self.is_connected = False\r\n        self.reconnect_attempts = 0\r\n        self.max_reconnect_attempts = 10\r\n\r\n        self._setup_timers()\r\n        self._setup_websocket_signals()\r\n\r\n    def _setup_timers(self) -\u003e Any:\r\n        \"\"\"Initialize and configure timers\"\"\"\r\n        self.reconnect_timer.timeout.connect(self._attempt_reconnect)\r\n        self.heartbeat_timer.timeout.connect(self._send_heartbeat)\r\n        self.heartbeat_timer.start(30000)  # 30 seconds\r\n\r\n    def _setup_websocket_signals(self) -\u003e Any:\r\n        \"\"\"Connect WebSocket signals to handlers\"\"\"\r\n        self.websocket.connected.connect(self._on_connected)\r\n        self.websocket.disconnected.connect(self._on_disconnected)\r\n        self.websocket.textMessageReceived.connect(self._on_message_received)\r\n        self.websocket.errorOccurred.connect(self._on_error)\r\n\r\n    def connect_to_server(self) -\u003e Any:\r\n        \"\"\"Connect to WebSocket server\"\"\"\r\n        logger.info(\"Attempting WebSocket connection\", url=str(self.url))\r\n        self.connection_status_changed.emit(\"Connecting...\")\r\n        self.websocket.open(self.url)\r\n\r\n    def disconnect_from_server(self) -\u003e Any:\r\n        \"\"\"Disconnect from WebSocket server\"\"\"\r\n        self.websocket.close()\r\n        self.reconnect_timer.stop()\r\n\r\n    def send_message(Dict[str, Any]) -\u003e None:\r\n        \"\"\"Send message to server\"\"\"\r\n        if self.is_connected:\r\n            json_message = json.dumps(message)\r\n            self.websocket.sendTextMessage(json_message)\r\n            logger.debug(\r\n                \"Sent WebSocket message\",\r\n                message_type=message.get(\"type\"))\r\n\r\n    def _on_connected(self) -\u003e Any:\r\n        \"\"\"Handle successful connection\"\"\"\r\n        self.is_connected = True\r\n        self.reconnect_attempts = 0\r\n        self.reconnect_timer.stop()\r\n        self.connection_status_changed.emit(\"Connected\")\r\n        self.connected.emit()\r\n        logger.info(\"WebSocket connected successfully\")\r\n\r\n    def _on_disconnected(self) -\u003e Any:\r\n        \"\"\"Handle disconnection\"\"\"\r\n        self.is_connected = False\r\n        self.connection_status_changed.emit(\"Disconnected\")\r\n        self.disconnected.emit()\r\n        logger.warning(\"WebSocket disconnected\")\r\n\r\n        if self.reconnect_attempts \u003c self.max_reconnect_attempts:\r\n            self.reconnect_timer.start(5000)  # Retry in 5 seconds\r\n\r\n    def _on_message_received(str) -\u003e None:\r\n        \"\"\"Handle received message\"\"\"\r\n        try:\r\n            data = json.loads(message)\r\n            self.message_received.emit(data)\r\n            logger.debug(\r\n                \"Received WebSocket message\",\r\n                message_type=data.get(\"type\"))\r\n        except json.JSONDecodeError as e:\r\n            logger.error(\"Failed to parse WebSocket message\", error=str(e))\r\n            self.error_occurred.emit(f\"Invalid message format: {e}\")\r\n\r\n    def _on_error(self, error) -\u003e Any:\r\n        \"\"\"Handle WebSocket error\"\"\"\r\n        error_msg = f\"WebSocket error: {error}\"\r\n        logger.error(error_msg)\r\n        self.error_occurred.emit(error_msg)\r\n        self.connection_status_changed.emit(\"Error\")\r\n\r\n    def _attempt_reconnect(self) -\u003e Any:\r\n        \"\"\"Attempt to reconnect\"\"\"\r\n        self.reconnect_attempts += 1\r\n        if self.reconnect_attempts \u003c= self.max_reconnect_attempts:\r\n            logger.info(\r\n                \"Attempting reconnection\",\r\n                attempt=self.reconnect_attempts)\r\n            self.connect_to_server()\r\n        else:\r\n            self.reconnect_timer.stop()\r\n            self.connection_status_changed.emit(\"Failed\")\r\n            logger.error(\"Max reconnection attempts reached\")\r\n\r\n    def _send_heartbeat(self) -\u003e Any:\r\n        \"\"\"Send heartbeat to keep connection alive\"\"\"\r\n        if self.is_connected:\r\n            self.send_message({\"type\": \"ping\",\r\n                               \"timestamp\": datetime.now().isoformat()})\r\n\r\n    def set_url(str) -\u003e None:\r\n        \"\"\"Update the WebSocket URL\"\"\"\r\n        self.url = QUrl(url)\r\n        logger.info(\"WebSocket URL updated\", url=url)\r\n\r\n    def get_connection_info(self) -\u003e dict:\r\n        \"\"\"Get current connection information\"\"\"\r\n        return {\r\n            \"url\": str(self.url),\r\n            \"is_connected\": self.is_connected,\r\n            \"reconnect_attempts\": self.reconnect_attempts,\r\n            \"max_attempts\": self.max_reconnect_attempts\r\n        }` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/presentation/ui/widgets/conversation_widget.py:98:\n `[datetime]` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/presentation/ui/main_window.py:25:\n `\r\n    \"\"\"Main application window for AI Teddy Bear\"\"\"\r\n\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.settings = QSettings(\"AiTeddyBear\", \"EnterpriseUI\")\r\n        self._setup_components()\r\n        self._setup_ui()\r\n        self._setup_connections()\r\n        self._restore_window_state()\r\n\r\n    def _setup_components(self) -\u003e Any:\r\n        \"\"\"Initialize core components\"\"\"\r\n        # Networking\r\n        self.websocket_client = WebSocketClient()\r\n        self.message_sender = EnterpriseMessageSender(self.websocket_client)\r\n\r\n        # UI Components\r\n        self.audio_widget = ModernAudioWidget()\r\n        self.conversation_widget = ConversationWidget()\r\n\r\n        # Connect message sender to widgets\r\n        self.audio_widget.set_message_sender(self.message_sender)\r\n        self.conversation_widget.set_message_sender(self.message_sender)\r\n\r\n    def _setup_ui(self) -\u003e Any:\r\n        \"\"\"Setup the user interface\"\"\"\r\n        self.setWindowTitle(\"AI Teddy Bear - Enterprise Edition 2025\")\r\n        self.setMinimumSize(1000, 700)\r\n\r\n        # Central widget with tabs\r\n        central_widget = QWidget()\r\n        self.setCentralWidget(central_widget)\r\n\r\n        layout = QVBoxLayout(central_widget)\r\n\r\n        # Connection status\r\n        self.connection_label = QLabel(\"🔴 Disconnected\")\r\n        self.connection_label.setFont(QFont(\"Arial\", 10, QFont.Bold))\r\n        layout.addWidget(self.connection_label)\r\n\r\n        # Main tabs\r\n        self.tab_widget = QTabWidget()\r\n        self.tab_widget.addTab(self.audio_widget, \"🎤 Audio Recording\")\r\n        self.tab_widget.addTab(self.conversation_widget, \"💬 Conversation\")\r\n\r\n        layout.addWidget(self.tab_widget)\r\n\r\n        # Controls\r\n        controls_layout = QHBoxLayout()\r\n\r\n        self.connect_button = QPushButton(\"🔌 Connect\")\r\n        self.connect_button.clicked.connect(self._toggle_connection)\r\n        controls_layout.addWidget(self.connect_button)\r\n\r\n        self.status_label = QLabel(\"Ready\")\r\n        controls_layout.addWidget(self.status_label)\r\n        controls_layout.addStretch()\r\n\r\n        layout.addLayout(controls_layout)\r\n\r\n        # Status bar\r\n        self.status_bar = QStatusBar()\r\n        self.setStatusBar(self.status_bar)\r\n        self.status_bar.showMessage(\"AI Teddy Bear Enterprise UI Ready\")\r\n\r\n        # Menu bar\r\n        self._create_menu_bar()\r\n\r\n        # Apply modern styling\r\n        self._apply_modern_theme()\r\n\r\n    def _create_menu_bar(self) -\u003e Any:\r\n        \"\"\"Create application menu bar\"\"\"\r\n        menubar = self.menuBar()\r\n\r\n        # File menu\r\n        file_menu = menubar.addMenu(\"File\")\r\n\r\n        connect_action = QAction(\"Connect to Server\", self)\r\n        connect_action.triggered.connect(self._toggle_connection)\r\n        file_menu.addAction(connect_action)\r\n\r\n        file_menu.addSeparator()\r\n\r\n        exit_action = QAction(\"Exit\", self)\r\n        exit_action.triggered.connect(self.close)\r\n        file_menu.addAction(exit_action)\r\n\r\n        # Help menu\r\n        help_menu = menubar.addMenu(\"Help\")\r\n\r\n        about_action = QAction(\"About\", self)\r\n        about_action.triggered.connect(self._show_about)\r\n        help_menu.addAction(about_action)\r\n\r\n    def _setup_connections(self) -\u003e Any:\r\n        \"\"\"Setup signal-slot connections\"\"\"\r\n        # WebSocket connections\r\n        self.websocket_client.connected.connect(self._on_connected)\r\n        self.websocket_client.disconnected.connect(self._on_disconnected)\r\n        self.websocket_client.message_received.connect(\r\n            self._on_message_received)\r\n        self.websocket_client.error_occurred.connect(self._on_error)\r\n        self.websocket_client.connection_status_changed.connect(\r\n            self._update_connection_status)\r\n\r\n    def _toggle_connection(self) -\u003e Any:\r\n        \"\"\"Toggle WebSocket connection\"\"\"\r\n        if self.websocket_client.is_connected:\r\n            self.websocket_client.disconnect_from_server()\r\n        else:\r\n            self.websocket_client.connect_to_server()\r\n\r\n    def _on_connected(self) -\u003e Any:\r\n        \"\"\"Handle successful connection\"\"\"\r\n        self.connect_button.setText(\"🔌 Disconnect\")\r\n        self.status_label.setText(\"Connected to server\")\r\n        self.status_bar.showMessage(\"Connected to AI Teddy Bear server\")\r\n        logger.info(\"UI connected to server\")\r\n\r\n    def _on_disconnected(self) -\u003e Any:\r\n        \"\"\"Handle disconnection\"\"\"\r\n        self.connect_button.setText(\"🔌 Connect\")\r\n        self.status_label.setText(\"Disconnected\")\r\n        self.status_bar.showMessage(\"Disconnected from server\")\r\n        logger.info(\"UI disconnected from server\")\r\n\r\n    def _on_message_received(Dict[str, Any]) -\u003e None:` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/external_services/clients/whisper_client.py:14:\n `\r\n    \"\"\"Infrastructure client for Whisper speech recognition\"\"\"\r\n\r\n    def __init__(self, model_size: str = \"base\", device: Optional[str] = None):\r\n        self.model_size = model_size\r\n        self.device = device or (\r\n    \"cuda\" if torch.cuda.is_available() else \"cpu\")\r\n        self.logger = logging.getLogger(self.__class__.__name__)\r\n        self.model = None\r\n\r\n        # Load model\r\n        self._load_model()\r\n\r\n    def _load_model(self):\r\n        \"\"\"Load Whisper model\"\"\"\r\n        try:\r\n            self.model = whisper.load_model(\r\n    self.model_size, device=self.device)\r\n            self.logger.info(\r\n                f\"Loaded Whisper model: {self.model_size} on {self.device}\"\r\n            )\r\n        except Exception as e:\r\n            self.logger.error(f\"Failed to load Whisper model: {e}\")\r\n            self.model = None\r\n\r\n    async def transcribe_audio(\r\n        self,\r\n        audio_data: np.ndarray,\r\n        language: Optional[str] = None,\r\n        task: str = \"transcribe\",\r\n    ) -\u003e Optional[Dict[str, Any]]:\r\n        \"\"\"Transcribe audio using Whisper\"\"\"\r\n        try:\r\n            if self.model is None:\r\n                self.logger.error(\"Whisper model not loaded\")\r\n                return None\r\n\r\n            # Transcribe\r\n            result = self.model.transcribe(\r\n                audio_data, language=language, task=task, verbose=False\r\n            )\r\n\r\n            return {\r\n                \"text\": result[\"text\"].strip(),\r\n                \"language\": result.get(\"language\"),\r\n                \"segments\": result.get(\"segments\", []),\r\n                \"confidence\": self._calculate_confidence(result),\r\n            }\r\n\r\n        except Exception as e:\r\n            self.logger.error(f\"Whisper transcription error: {e}\")\r\n            return None\r\n\r\n    def _calculate_confidence(self, result: Dict) -\u003e float:\r\n        \"\"\"Calculate confidence score from Whisper result\"\"\"\r\n        try:\r\n            segments = result.get(\"segments\", [])\r\n            if not segments:\r\n                return 0.5\r\n\r\n            # Average log probability from segments\r\n            total_prob = sum(segment.get(\"avg_logprob\", -1.0)\r\n                             for segment in segments)\r\n            avg_logprob = total_prob / len(segments)\r\n\r\n            # Convert to confidence (rough approximation)\r\n            confidence = max(0.0, min(1.0, (avg_logprob + 1.0) / 1.0))\r\n            return confidence\r\n\r\n        # FIXME: replace with specific exception\r\nexcept Exception as exc:` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/dashboards/components/Alert.tsx:1:\n `��/` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/presentation/api/api_core_init.py:29:\n `f\"⚠️ Legacy audio router not available: {e}\")` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/external_services/state_manager.py:51:\n `[dict]` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/application/services/parent/rate_monitor_service.py:32:\n `\r\n    \"\"\"\r\n    📊 خدمة مراقبة معدلات الإرسال المتقدمة\r\n\r\n    الميزات:\r\n    - مراقبة حدود الإرسال (دقيقة/ساعة/يوم/أسبوع)\r\n    - تتبع الحدود لكل ولي أمر\r\n    - منع تجاوز الحدود الأسبوعية\r\n    - تبريد زمني بين الإشعارات\r\n    - إحصائيات تفصيلية\r\n    \"\"\"\r\n\r\n    def __init__(self, config_path: str = \"config/staging_config.json\"):\r\n        self.logger = logger.bind(service=\"rate_monitor\")\r\n        self.config_path = config_path\r\n        self._load_config()\r\n        self._init_counters()\r\n        self._init_database()\r\n\r\n    def _load_config(self) -\u003e Any:\r\n        \"\"\"تحميل إعدادات المراقبة\"\"\"\r\n        try:\r\n            with open(self.config_path, \"r\", encoding=\"utf-8\") as f:\r\n                config = json.load(f)\r\n\r\n            notification_config = config.get(\"NOTIFICATION_CONFIG\", {})\r\n\r\n            self.rate_limit = RateLimit(\r\n                per_minute=notification_config.get(\r\n                    \"rate_limit_per_minute\", 30),\r\n                per_hour=notification_config.get(\"rate_limit_per_hour\", 100),\r\n                per_day=notification_config.get(\"rate_limit_per_day\", 1000),\r\n                per_week_per_parent=notification_config.get(\r\n                    \"max_notifications_per_parent_per_week\", 3\r\n                ),\r\n                cooldown_hours=notification_config.get(\r\n                    \"cooldown_period_hours\", 24),\r\n            )\r\n\r\n            self.logger.info(\"Rate limits loaded\", **asdict(self.rate_limit))\r\n\r\n        except Exception as e:\r\n            self.logger.error(\r\n    \"Failed to load rate monitor config\",\r\n     error=str(e))\r\n            self.rate_limit = RateLimit()\r\n\r\n    def _init_counters(self) -\u003e Any:\r\n        \"\"\"تهيئة العدادات\"\"\"\r\n        self.minute_counter = deque(maxlen=60)\r\n        self.hour_counter = deque(maxlen=3600)\r\n        self.day_counter = deque(maxlen=86400)\r\n\r\n    def _init_database(self) -\u003e Any:\r\n        \"\"\"تهيئة قاعدة بيانات المراقبة\"\"\"\r\n        try:\r\n            self.db_path = \"logs/rate_monitor.db\"\r\n            Path(self.db_path).parent.mkdir(parents=True, exist_ok=True)\r\n\r\n            conn = sqlite3.connect(self.db_path)\r\n            cursor = conn.cursor()\r\n\r\n            cursor.execute(\r\n                \"\"\"\r\n                CREATE TABLE IF NOT EXISTS notification_stats (\r\n                    id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n                    parent_email TEXT,\r\n                    child_udid TEXT,\r\n                    notification_type TEXT,\r\n                    channel TEXT,\r\n                    success BOOLEAN,\r\n                    error_message TEXT\r\n                )\r\n            \"\"\"\r\n            )\r\n\r\n            cursor.execute(\r\n                \"\"\"\r\n                CREATE TABLE IF NOT EXISTS weekly_parent_limits (\r\n                    parent_email TEXT,\r\n                    week_start DATE,\r\n                    notifications_sent INTEGER DEFAULT 0,\r\n                    last_notification DATETIME,\r\n                    PRIMARY KEY (parent_email, week_start)\r\n                )\r\n            \"\"\"\r\n            )\r\n\r\n            conn.commit()\r\n            conn.close()\r\n\r\n            self.logger.info(\r\n    \"Rate monitor database initialized\",\r\n     db_path=self.db_path)\r\n\r\n        except Exception as e:\r\n            self.logger.error(\r\n                \"Failed to initialize rate monitor database\", error=str(e)\r\n            )\r\n\r\n    async def check_rate_limit(\r\n        self, parent_email: str, child_udid: str\r\n    ) -\u003e Tuple[bool, str]:\r\n        \"\"\"فحص حدود معدل الإرسال\"\"\"\r\n        try:\r\n            now = datetime.utcnow()\r\n\r\n            # فحص الحد العام للنظام\r\n            system_check = await self._check_system_limits(now)\r\n            if not system_check[0]:\r\n                return system_check\r\n\r\n            # فحص حدود ولي الأمر الأسبوعية\r\n            parent_check = await self._check_parent_weekly_limit(parent_email, now)\r\n            if not parent_check[0]:\r\n                return parent_check\r\n\r\n            return True, \"Rate limit check passed\"\r\n\r\n        except Exception as e:\r\n            self.logger.error(\"Rate limit check failed\", error=str(e))\r\n            return False, f\"Rate check error: {str(e)}\"\r\n\r\n    async def _check_system_limits(self, now: datetime) -\u003e Tuple[bool, str]:\r\n        \"\"\"فحص الحدود العامة للنظام\"\"\"\r\n        try:\r\n            cutoff_minute = now - timedelta(minutes=1)\r\n            self.minute_counter = deque(\r\n                [t for t in self.minute_counter if t \u003e cutoff_minute], maxlen=60\r\n            )\r\n\r\n            if len(self.minute_counter) \u003e= self.rate_limit.per_minute:\r\n                return (\r\n                    False,\r\n                    f\"System minute limit exceeded ({self.rate_limit.per_minute}/min)\",\r\n                )\r\n\r\n            return True, \"System limits OK\"\r\n\r\n\r\n        # FIXME: replace with specific exception\r\nexcept Exception as exc:` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Lexical error"
              },
              "level": "warning",
              "message": {
                "text": "Lexical error at line src/application/services/core/data_cleanup_service.py:537:\n unrecognized symbol in string"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/external_services/clients/azure_speech_client.py:12:\n `\r\n    \"\"\"Infrastructure client for Azure Speech Services\"\"\"\r\n\r\n    def __init__(self, subscription_key: str, region: str = \"eastus\"):\r\n        self.speech_config = speechsdk.SpeechConfig(\r\n            subscription=subscription_key, region=region\r\n        )\r\n        self.logger = logging.getLogger(self.__class__.__name__)\r\n\r\n    async def synthesize_speech(\r\n        self,\r\n        text: str,\r\n        voice_name: str = \"ar-SA-ZariyahNeural\",\r\n        output_format: str = \"Audio16Khz32KBitRateMonoMp3\",\r\n    ) -\u003e Optional[bytes]:\r\n        \"\"\"Synthesize speech using Azure\"\"\"\r\n        try:\r\n            # Configure voice and format\r\n            self.speech_config.speech_synthesis_voice_name = voice_name\r\n            self.speech_config.set_speech_synthesis_output_format(\r\n                getattr(speechsdk.SpeechSynthesisOutputFormat, output_format)\r\n            )\r\n\r\n            # Create synthesizer\r\n            synthesizer = speechsdk.SpeechSynthesizer(\r\n                speech_config=self.speech_config)\r\n\r\n            # Generate speech\r\n            result = synthesizer.speak_text_async(text).get()\r\n\r\n            if result.reason == speechsdk.ResultReason.SynthesizingAudioCompleted:\r\n                return result.audio_data\r\n            else:\r\n                self.logger.error(f\"Azure synthesis failed: {result.reason}\")\r\n                return None\r\n\r\n        except Exception as e:\r\n            self.logger.error(f\"Azure speech synthesis error: {e}\")\r\n            return None\r\n\r\n    async def recognize_speech(\r\n        self, audio_data: bytes, language: str = \"ar-SA\"\r\n    ) -\u003e Optional[Dict]:\r\n        \"\"\"Recognize speech from audio data\"\"\"\r\n        try:\r\n            # Configure recognition\r\n            self.speech_config.speech_recognition_language = language\r\n\r\n            # Create recognizer with audio data\r\n            audio_stream = speechsdk.audio.PushAudioInputStream()\r\n            audio_config = speechsdk.audio.AudioConfig(stream=audio_stream)\r\n\r\n            recognizer = speechsdk.SpeechRecognizer(\r\n                speech_config=self.speech_config, audio_config=audio_config\r\n            )\r\n\r\n            # Push audio data and recognize\r\n            audio_stream.write(audio_data)\r\n            audio_stream.close()\r\n\r\n            result = recognizer.recognize_once()\r\n\r\n            if result.reason == speechsdk.ResultReason.RecognizedSpeech:\r\n                return {\r\n                    \"text\": result.text, \"confidence\": (\r\n                        result.confidence if hasattr(\r\n                            result, \"confidence\") else 0.9), }\r\n            else:\r\n                self.logger.error(f\"Azure recognition failed: {result.reason}\")\r\n                return None\r\n\r\n        except Exception as e:\r\n            self.logger.error(f\"Azure speech recognition error: {e}\")\r\n            return None\r\n\r\n    async def get_available_voices(self, language: str = \"ar\") -\u003e list:\r\n        \"\"\"Get available voices for language\"\"\"\r\n        try:\r\n            synthesizer = speechsdk.SpeechSynthesizer(\r\n                speech_config=self.speech_config)\r\n\r\n            result = synthesizer.get_voices_async(language).get()\r\n\r\n            if result.reason == speechsdk.ResultReason.VoicesListRetrieved:\r\n                return [voice.name for voice in result.voices]\r\n            else:\r\n                return []\r\n\r\n        except Exception as e:\r\n            self.logger.error(f\"Failed to get Azure voices: {e}\")\r\n            return []\r\n\r\n    def is_available(self) -\u003e bool:\r\n        \"\"\"Check if service is available\"\"\"\r\n        try:\r\n            # Simple health check\r\n            synthesizer = speechsdk.SpeechSynthesizer(\r\n                speech_config=self.speech_config)\r\n            result = synthesizer.get_voices_async().get()\r\n            return result.reason == speechsdk.ResultReason.VoicesListRetrieved\r\n\r\n        # FIXME: replace with specific exception\r\nexcept Exception as exc:` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Other syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Other syntax error at line observability/architecture/infrastructure/data-pipeline/opentelemetry-collector.yaml:141:\n (approximate error location; error nearby after) error calling parser: mapping values are not allowed in this context character 0 position 0 returned: 0"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/monitoring/metrics.py:112:\n `def track_request_duration(endpoint: str):\r\n    \"\"\"Decorator لتتبع مدة الـ requests\"\"\"\r\n\r\n    def decorator(func: Callable) -\u003e Callable:\r\n        @wraps(func)\r\n        async def async_wrapper(*args, **kwargs):\r\n            start_time = time.time()\r\n            status = \"success\"\r\n            try:\r\n                result = await func(*args, **kwargs)\r\n                return result\r\n\r\n            # FIXME: replace with specific exception\r\nexcept Exception as exc: status = \"error\"\r\n                raise\r\n            finally:\r\n                duration = time.time() - start_time\r\n                request_duration.labels(\r\n                    method=func.__name__, endpoint=endpoint, status=status\r\n                ).observe(duration)\r\n\r\n        @wraps(func)\r\n        def sync_wrapper(*args, **kwargs):\r\n            start_time = time.time()\r\n            status = \"success\"\r\n            try:\r\n                result = func(*args, **kwargs)\r\n                return result\r\n            # FIXME: replace with specific exception\r\nexcept Exception as exc:status = \"error\"\r\n                raise\r\n            finally:\r\n                duration = time.time() - start_time\r\n                request_duration.labels(\r\n                    method=func.__name__, endpoint=endpoint, status=status\r\n                ).observe(duration)\r\n\r\n        if asyncio.iscoroutinefunction(func):\r\n            return async_wrapper\r\n        return sync_wrapper\r\n\r\n    return decorator\r\n\r\n\r\ndef track_exceptions(service: str):\r\n    \"\"\"Decorator لتتبع الـ exceptions\"\"\"\r\n\r\n    def decorator(func: Callable) -\u003e Callable:\r\n        @wraps(func)\r\n        async def async_wrapper(*args, **kwargs):\r\n            try:\r\n                return await func(*args, **kwargs)\r\n            except Exception as e:\r\n                exception_counter.labels(\r\n                    exception_type=type(e).__name__,\r\n                    service=service,\r\n                    method=func.__name__,\r\n                ).inc()\r\n                raise\r\n\r\n        @wraps(func)\r\n        def sync_wrapper(*args, **kwargs):\r\n            try:\r\n                return func(*args, **kwargs)\r\n            except Exception as e:\r\n                exception_counter.labels(\r\n                    exception_type=type(e).__name__,\r\n                    service=service,\r\n                    method=func.__name__,\r\n                ).inc()\r\n                raise\r\n\r\n        if asyncio.iscoroutinefunction(func):\r\n            return async_wrapper\r\n        return sync_wrapper\r\n\r\n    return decorator\r\n\r\n\r\nclass MetricsCollector:\r\n    \"\"\"جامع metrics مركزي\"\"\"\r\n\r\n    @staticmethod\r\n    def record_interaction(interaction_type: str, child_age: int) -\u003e None:\r\n        \"\"\"تسجيل تفاعل طفل\"\"\"\r\n        age_group = MetricsCollector._get_age_group(child_age)\r\n        interactions_counter.labels(\r\n            interaction_type=interaction_type, child_age_group=age_group\r\n        ).inc()\r\n\r\n    @staticmethod\r\n    def record_voice_message(status: str, language: str = \"ar\") -\u003e None:\r\n        \"\"\"تسجيل معالجة رسالة صوتية\"\"\"\r\n        voice_messages_processed.labels(status=status, language=language).inc()\r\n\r\n    @staticmethod\r\n    def record_auth_attempt(method: str, success: bool) -\u003e None:\r\n        \"\"\"تسجيل محاولة مصادقة\"\"\"\r\n        result = \"success\" if success else \"failure\"\r\n        auth_attempts.labels(method=method, result=result).inc()\r\n\r\n    @staticmethod\r\n    def record_security_violation(violation_type: str, severity: str) -\u003e None:\r\n        \"\"\"تسجيل انتهاك أمني\"\"\"\r\n        security_violations.labels(\r\n            violation_type=violation_type, severity=severity\r\n        ).inc()\r\n\r\n    @staticmethod\r\n    def update_database_connections(database: str, pool: str, count: int) -\u003e None:\r\n        \"\"\"تحديث عدد اتصالات قاعدة البيانات\"\"\"\r\n        database_connections.labels(database=database, pool=pool).set(count)\r\n\r\n    @staticmethod\r\n    def record_cache_operation(operation: str, cache_name: str, hit: bool) -\u003e None:\r\n        \"\"\"تسجيل عملية cache\"\"\"\r\n        result = \"hit\" if hit else \"miss\"\r\n        cache_operations.labels(\r\n            operation=operation, cache_name=cache_name, result=result\r\n        ).inc()\r\n\r\n    @staticmethod\r\n    def update_circuit_breaker(service: str, state: str) -\u003e None:\r\n        \"\"\"تحديث حالة circuit breaker\"\"\"\r\n        state_map = {\"CLOSED\": 0, \"OPEN\": 1, \"HALF_OPEN\": 2}\r\n        circuit_breaker_state.labels(service=service).set(state_map.get(state, -1))\r\n\r\n    @staticmethod\r\n    def record_content_filtered(filter_type: str, reason: str) -\u003e None:\r\n        \"\"\"تسجيل محتوى تم تصفيته\"\"\"\r\n        content_filtered.labels(filter_type=filter_type, reason=reason).inc()\r\n\r\n    @staticmethod\r\n    def record_parental_consent(action: str, status: str) -\u003e None:\r\n        \"\"\"تسجيل طلب موافقة والدين\"\"\"\r\n        parental_consent_requests.labels(action=action, status=status).inc()\r\n\r\n    @staticmethod\r\n    def _get_age_group(age: int) -\u003e str:\r\n        \"\"\"تحديد الفئة العمرية\"\"\"\r\n        if age \u003c 3:\r\n            return \"0-2\"\r\n        elif age \u003c 6:\r\n            return \"3-5\"\r\n        elif age \u003c 9:\r\n            return \"6-8\"\r\n        elif age \u003c 12:\r\n            return \"9-11\"\r\n        else:\r\n            return \"12+\"\r\n\r\n\r\n# Health check metrics\r\nhealth_check_counter = Counter(\r\n    \"ai_teddy_health_checks_total\", \"Health check attempts\", [\"service\", \"result\"]\r\n)\r\n\r\nlast_successful_health_check = Gauge(\r\n    \"ai_teddy_last_successful_health_check_timestamp\",\r\n    \"Timestamp of last successful health check\",\r\n    [\"service\"],\r\n)\r\n\r\n\r\nclass HealthMetrics:\r\n    \"\"\"Metrics خاصة بـ health checks\"\"\"\r\n\r\n    @staticmethod\r\n    def record_health_check(service: str, healthy: bool) -\u003e None:\r\n        \"\"\"تسجيل health check\"\"\"\r\n        result = \"healthy\" if healthy else \"unhealthy\"\r\n        health_check_counter.labels(service=service, result=result).inc()\r\n\r\n        if healthy:\r\n            last_successful_health_check.labels(service=service).set(time.time())\r\n\r\n\r\n# Performance tracking\r\noperation_latency = Histogram(\r\n    \"ai_teddy_operation_latency_seconds\",\r\n    \"Operation latency\",\r\n    [\"operation\", \"service\"],\r\n    buckets=(0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1.0, 2.5, 5.0, 10.0),\r\n)\r\n\r\n\r\nclass PerformanceTracker:\r\n    \"\"\"تتبع الأداء\"\"\"\r\n\r\n    def __init__(self, operation: str, service: str):\r\n        self.operation = operation\r\n        self.service = service\r\n        self.start_time = None\r\n\r\n    def __enter__(self):\r\n        self.start_time = time.time()\r\n        return self\r\n\r\n    def __exit__(self, exc_type, exc_val, exc_tb):\r\n        if self.start_time:\r\n            duration = time.time() - self.start_time\r\n            operation_latency.labels(\r\n                operation=self.operation, service=self.service\r\n            ).observe(duration)\r\n\r\n\r\n# Export all metrics\r\n__all__ = [\r\n    \"error_counter\",\r\n    \"exception_counter\",\r\n    \"request_duration\",\r\n    \"response_time\",\r\n    \"active_children\",\r\n    \"interactions_counter\",\r\n    \"voice_messages_processed\",\r\n    \"auth_attempts\",\r\n    \"security_violations\",\r\n    \"database_connections\",\r\n    \"cache_operations\",\r\n    \"circuit_breaker_state\",\r\n    \"content_filtered\",\r\n    \"parental_consent_requests\",\r\n    \"system_info\",\r\n    \"track_request_duration\",\r\n    \"track_exceptions\",\r\n    \"MetricsCollector\",\r\n    \"HealthMetrics\",\r\n    \"PerformanceTracker\",\r\n    \"health_check_counter\",\r\n    \"last_successful_health_check\",\r\n    \"operation_latency\",\r\n]` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/dashboards/components/SystemHealthStatus.tsx:1:\n `��/` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/setup.py:53:\n `\r\n    \"\"\"إنشاء ملف البيئة\"\"\"\r\n    env_content =\r\n\r\n    if not Path(\".env\").exists():` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/presentation/api/graphql/federation_gateway.py:587:\n missing element"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/dashboards/types/dashboard.ts:1:\n `��/` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/external_services/tts_playback.py:1:\n `from scipy.io.wavfile import write\r\nfrom pydub.playback import play\r\nfrom pydub import AudioSegment\r\nimport sounddevice as sd\r\nfrom pathlib import Path\r\nimport structlog\r\nimport logging\r\nfrom typing import Any, Dict, List, Optional\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\n\r\nlogger = structlog.get_logger(__name__)\r\n\r\n\r\n# ====== كود تسجيل الصوت وحفظه كملف WAV ======\r\n\r\n\r\ndef record_and_save_wav(filename=\"output.wav\", duration=3, fs=16000) -\u003e Any:\r\n    logger.info(\"🎤 تسجيل... تحدث الآن\")\r\n    recording = sd.rec(int(duration * fs), samplerate=fs,\r\n                       channels=1, dtype='int16')\r\n    sd.wait()  # انتظر انتهاء التسجيل\r\n    write(filename, fs, recording)\r\n    logger.info(f\"✅ تم حفظ التسجيل في {filename}\")\r\n\r\n# ====== كود تشغيل ملف WAV بشكل آمن ======\r\n\r\n\r\ndef is_valid_wav(file_path) -\u003e Any:\r\n    \"\"\"يتحقق إذا كان الملف فعلاً WAV صالح\"\"\"\r\n    try:\r\n        with open(file_path, \"rb\") as f:\r\n            header = f.read(4)\r\n            return header == b'RIFF'\r\n    except Exception as e:\r\n    logger.error(f\"Error: {e}\")\"⚠️ حدث خطأ أثناء قراءة رأس الملف:\", e)\r\n        return False\r\n\r\ndef safe_play(file_path) -\u003e Any:\r\n    \"\"\"يشغل ملف صوتي بعد التحقق من صيغته\"\"\"\r\n    import os\r\n    if not os.path.exists(file_path) or os.path.getsize(file_path) \u003c 1000:\r\n        logger.error(f\"❌ الملف {file_path} غير موجود أو فارغ.\")\r\n        return\r\n\r\n    ext = file_path.lower().split('.')[-1]\r\n    if ext == \"wav\":\r\n        if not is_valid_wav(file_path):\r\n            logger.error(\r\n                f\"❌ الملف {file_path} ليس ملف WAV صالح (لا يبدأ بـ RIFF)\")\r\n            return\r\n        try:\r\n            audio = AudioSegment.from_file(file_path, format=\"wav\")\r\n            play(audio)\r\n        except Exception as e:\r\n    logger.error(f\"Error: {e}\")\"❌ خطأ أثناء تشغيل WAV:\", e)\r\n    else:\r\n        logger.error(f\"❌ صيغة الملف غير مدعومة: {file_path}\")\r\n\r\nclass TTSPlayback:\r\n    def __init__(self, on_playback_complete):\r\n        self.on_playback_complete = on_playback_complete\r\n        self.stream = None\r\n\r\n    def play_audio(self, data, samplerate) -\u003e Any:\r\n        self.stream = sd.OutputStream(\r\n    samplerate=samplerate,\r\n    channels=1,\r\n    callback=self.callback,\r\n     finished_callback=self.on_playback_complete)\r\n        self.stream.start()\r\n\r\n    def callback(self, outdata, frames, time, status) -\u003e Any:\r\n        if status:\r\n            logger.info(status)\r\n        # This is a placeholder. In a real implementation, you would feed audio data here.\r\n        # For now, we'll just output silence.\r\n        outdata.fill(0)\r\n\r\n    def stop(self) -\u003e Any:\r\n        if self.stream:\r\n            self.stream.stop()\r\n            self.stream.close()\r\n            self.stream = None\r\n\r\n# ====== مثال كامل على التسجيل والتشغيل ======\r\n\r\nif __name__ == \"__main__\":\r\n    filename = \"test_mic.wav\"\r\n    record_and_save_wav(filename, duration=4)    # غيّر مدة التسجيل لو تريد\r\n    safe_play(filename)\r\n\r\ndef cleanup_tts_cache(max_age_hours: int=24) -\u003e int:\r\n    \"\"\"Clean up TTS cache files older than max_age_hours\"\"\"\r\n    try:\r\n        cache_dir = Path(\"cache/tts\")\r\n        if not cache_dir.exists():\r\n            return 0\r\n        current_time = time.time()\r\n        cleaned_count = 0\r\n        for cache_file in cache_dir.glob(\"*.wav\"):\r\n            file_age = current_time - cache_file.stat().st_mtime\r\n            if file_age \u003e (max_age_hours * 3600):\r\n                cache_file.unlink()\r\n                cleaned_count += 1\r\n        logger.info(f\"Cleaned {cleaned_count} TTS cache files\")\r\n        return cleaned_count\r\n    except Exception as e:\r\n    logger.error(f\"Error: {e}\")f\"Error cleaning TTS cache: {e}\")\r\n        return 0` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/application/services/audio/voice_recognition_service.py:18:\n `\r\n    \"\"\"Application service for voice recognition operations\"\"\"\r\n\r\n    def __init__(self, config=None):\r\n        self.config = config\r\n        self.logger = logging.getLogger(self.__class__.__name__)\r\n\r\n        # Initialize recognition engines\r\n        self._init_recognition_engines()\r\n\r\n    def _init_recognition_engines(self):\r\n        \"\"\"Initialize speech recognition engines\"\"\"\r\n        # Whisper\r\n        try:\r\n            model_size = getattr(self.config, \"WHISPER_MODEL_SIZE\", \"base\")\r\n            self.whisper_model = whisper.load_model(model_size)\r\n            self.logger.info(f\"Loaded Whisper model: {model_size}\")\r\n        except Exception as e:\r\n            self.logger.error(f\"Whisper model loading error: {e}\")\r\n            self.whisper_model = None\r\n\r\n        # OpenAI\r\n        if getattr(self.config, \"OPENAI_API_KEY\", None):\r\n            self.openai_client = AsyncOpenAI(\r\n                api_key=getattr(self.config, \"OPENAI_API_KEY\")\r\n            )\r\n        else:\r\n            self.openai_client = None\r\n\r\n    async def transcribe_audio(\r\n        self,\r\n        audio_data: Union[np.ndarray, bytes, str],\r\n        language: Optional[Language] = None,\r\n        use_openai: bool = False,\r\n    ) -\u003e Dict[str, Any]:\r\n        \"\"\"\r\n        Transcribe audio to text\r\n\r\n        Args:\r\n            audio_data: Audio data in various formats\r\n            language: Target language for transcription\r\n            use_openai: Whether to use OpenAI instead of Whisper\r\n\r\n        Returns:\r\n            Dictionary with transcription results\r\n        \"\"\"\r\n        try:\r\n            # Convert audio data to numpy array\r\n            audio_array = await self._prepare_audio_data(audio_data)\r\n\r\n            if audio_array is None:\r\n                return {\"error\": \"Failed to process audio data\", \"text\": \"\"}\r\n\r\n            # Choose transcription method\r\n            if use_openai and self.openai_client:\r\n                result = await self._transcribe_openai(audio_array, language)\r\n            elif self.whisper_model:\r\n                result = await self._transcribe_whisper(audio_array, language)\r\n            else:\r\n                return {\r\n    \"error\": \"No transcription service available\",\r\n     \"text\": \"\"}\r\n\r\n            return result\r\n\r\n        except Exception as e:\r\n            self.logger.error(f\"Transcription error: {e}\")\r\n            return {\"error\": str(e), \"text\": \"\"}\r\n\r\n    async def _prepare_audio_data(\r\n        self, audio_data: Union[np.ndarray, bytes, str]\r\n    ) -\u003e Optional[np.ndarray]:\r\n        \"\"\"Prepare audio data for transcription\"\"\"\r\n        try:\r\n            if isinstance(audio_data, np.ndarray):\r\n                return audio_data\r\n            elif isinstance(audio_data, bytes):\r\n                # Convert bytes to numpy array\r\n                return (\r\n    np.frombuffer(\r\n        audio_data,\r\n        dtype=np.int16).astype(\r\n            np.float32) /\r\n             32768.0)\r\n            elif isinstance(audio_data, str):\r\n                # Load from file\r\n                data, _ = sf.read(audio_data)\r\n                return data\r\n            else:\r\n                self.logger.error(\r\n                    f\"Unsupported audio data type: {type(audio_data)}\")\r\n                return None\r\n\r\n        except Exception as e:\r\n            self.logger.error(f\"Audio preparation error: {e}\")\r\n            return None\r\n\r\n    async def _transcribe_whisper(\r\n        self, audio_array: np.ndarray, language: Optional[Language]\r\n    ) -\u003e Dict[str, Any]:\r\n        \"\"\"Transcribe using Whisper model\"\"\"\r\n        try:\r\n            # Prepare language parameter\r\n            lang_code = language.value if language else None\r\n\r\n            # Transcribe\r\n            result = self.whisper_model.transcribe(\r\n                audio_array, language=lang_code, task=\"transcribe\"\r\n            )\r\n\r\n            return {\r\n                \"text\": result[\"text\"].strip(),\r\n                \"language\": result.get(\"language\"),\r\n                \"confidence\": self._calculate_whisper_confidence(result),\r\n                \"segments\": result.get(\"segments\", []),\r\n                \"method\": \"whisper\",\r\n            }\r\n\r\n        except Exception as e:\r\n            self.logger.error(f\"Whisper transcription error: {e}\")\r\n            return {\"error\": str(e), \"text\": \"\"}\r\n\r\n    async def _transcribe_openai(\r\n        self, audio_array: np.ndarray, language: Optional[Language]\r\n    ) -\u003e Dict[str, Any]:\r\n        \"\"\"Transcribe using OpenAI API\"\"\"\r\n        try:\r\n            # Create temporary file\r\n            with tempfile.NamedTemporaryFile(suffix=\".wav\", delete=False) as temp_file:\r\n                sf.write(temp_file.name, audio_array, 16000)\r\n\r\n                # Transcribe with OpenAI\r\n                with open(temp_file.name, \"rb\") as audio_file:\r\n                    transcript = await self.openai_client.audio.transcriptions.create(\r\n                        model=\"whisper-1\",\r\n                        file=audio_file,\r\n                        language=language.value if language else None,\r\n                    )\r\n\r\n                return {\r\n                    \"text\": transcript.text.strip(),\r\n                    \"language\": language.value if language else \"auto\",\r\n                    \"confidence\": 0.95,  # OpenAI doesn't provide confidence\r\n                    \"method\": \"openai\",\r\n                }\r\n\r\n        except Exception as e:\r\n            self.logger.error(f\"OpenAI transcription error: {e}\")\r\n            return {\"error\": str(e), \"text\": \"\"}\r\n\r\n    def _calculate_whisper_confidence(self, result: Dict) -\u003e float:\r\n        \"\"\"Calculate average confidence from Whisper result\"\"\"\r\n        try:\r\n            segments = result.get(\"segments\", [])\r\n            if not segments:\r\n                return 0.5\r\n\r\n            # Average probability from all segments\r\n            total_prob = sum(segment.get(\"avg_logprob\", -1.0)\r\n                             for segment in segments)\r\n            avg_logprob = total_prob / len(segments)\r\n\r\n            # Convert log probability to confidence (rough approximation)\r\n            confidence = max(0.0, min(1.0, (avg_logprob + 1.0) / 1.0))\r\n            return confidence\r\n\r\n\r\n        # FIXME: replace with specific exception\r\nexcept Exception as exc:` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/application/services/ai/emotion_analysis_service.py:9:\n `\"\"\"Core emotion analysis service.\"\"\"` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Lexical error"
              },
              "level": "warning",
              "message": {
                "text": "Lexical error at line src/dashboards/package.json:1:\n unrecognised symbol, in token rule:�"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/external_services/clients/elevenlabs_client.py:16:\n `\r\n    \"\"\"Infrastructure client for ElevenLabs API\"\"\"\r\n\r\n    def __init__(self, api_key: str):\r\n        self.client = ElevenLabs(api_key=api_key)\r\n        self.logger = logging.getLogger(self.__class__.__name__)\r\n\r\n    async def generate_speech(\r\n        self,\r\n        text: str,\r\n        voice_id: str,\r\n        voice_settings: VoiceSettings,\r\n        model: str = \"eleven_multilingual_v2\",\r\n    ) -\u003e Optional[bytes]:\r\n        \"\"\"Generate speech audio\"\"\"\r\n        try:\r\n            audio = generate(\r\n                text=text,\r\n                voice=voice_id,\r\n                model=model,\r\n                voice_settings=voice_settings)\r\n            return audio\r\n\r\n        except Exception as e:\r\n            self.logger.error(f\"ElevenLabs speech generation error: {e}\")\r\n            return None\r\n\r\n    async def stream_speech(\r\n        self,\r\n        text: str,\r\n        voice_id: str,\r\n        voice_settings: VoiceSettings,\r\n        model: str = \"eleven_multilingual_v2\",\r\n    ) -\u003e Optional[AsyncIterator[bytes]]:\r\n        \"\"\"Stream speech audio\"\"\"\r\n        try:\r\n            audio_stream = stream(\r\n                text=text,\r\n                voice=voice_id,\r\n                model=model,\r\n                voice_settings=voice_settings)\r\n            return audio_stream\r\n\r\n        except Exception as e:\r\n            self.logger.error(f\"ElevenLabs streaming error: {e}\")\r\n            return None\r\n\r\n    async def get_available_voices(self) -\u003e list:\r\n        \"\"\"Get available voices\"\"\"\r\n        try:\r\n            voices = self.client.voices.get_all()\r\n            return voices.voices\r\n\r\n        except Exception as e:\r\n            self.logger.error(f\"Failed to get voices: {e}\")\r\n            return []\r\n\r\n    def is_available(self) -\u003e bool:\r\n        \"\"\"Check if service is available\"\"\"\r\n        try:\r\n            # Simple health check\r\n            self.client.voices.get_all()\r\n            return True\r\n\r\n\r\n        # FIXME: replace with specific exception\r\nexcept Exception as exc:` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/presentation/ui/audio/audio_engine.py:73:\n missing element"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/application/services/ai/main_service.py:148:\n `try:\r\n                    service_health = await service.health_check()\r\n                    checks[f\"{service_name}_healthy\"] = service_health.get(\r\n                        \"healthy\", False\r\n                    )\r\n\r\n                # FIXME: replace with specific exception\r` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/dashboards/components/ComplianceWidget.tsx:1:\n `��/` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/memory/vector_memory_store.py:1:\n `ÿþ\"` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/dashboards/hooks/useRealtimeData.ts:1:\n `��/` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/application/services/core/external_services.py:12:\n `\r\n    \"\"\"خدمة البريد الإلكتروني\"\"\"\r\n\r\n    def __init__(\r\n    self,\r\n    smtp_server: str,\r\n    smtp_port: int,\r\n    username: str,\r\n     password: str):\r\n        self.smtp_server = smtp_server\r\n        self.smtp_port = smtp_port\r\n        self.username = username\r\n        self.password = password\r\n\r\n    async def send_email(\r\n    self,\r\n    to: str,\r\n    subject: str,\r\n    body: str,\r\n     is_html: bool = True) -\u003e bool:\r\n        \"\"\"إرسال بريد إلكتروني\"\"\"\r\n        try:\r\n            msg = MIMEMultipart()\r\n            msg['From'] = self.username\r\n            msg['To'] = to\r\n            msg['Subject'] = subject\r\n\r\n            msg.attach(MIMEText(body, 'html' if is_html else 'plain', 'utf-8'))\r\n\r\n            server = smtplib.SMTP(self.smtp_server, self.smtp_port)\r\n            server.starttls()\r\n            server.login(self.username, self.password)\r\n            server.send_message(msg)\r\n            server.quit()\r\n\r\n            return True\r\n        except Exception as e:\r\n    logger.error(f\"Error: {e}\")f\"Email sending failed: {e}\")` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Other syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Other syntax error at line .pre-commit-config.yaml:95:\n (approximate error location; error nearby after) error calling parser: could not find expected ':' character 0 position 0 returned: 0"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/dashboards/components/RealTimeChart.tsx:1:\n `��/` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/file_manager.py:54:\n missing element"
              }
            },
            {
              "descriptor": {
                "id": "Lexical error"
              },
              "level": "warning",
              "message": {
                "text": "Lexical error at line src/infrastructure/caching/multi_layer_cache.py:517:\n unrecognized symbol in string"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/application/services/child/child_bulk_operations_service.py:1:\n `ÿþ\"` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/domain/streaming/entities/entities.py:44:\n `[Dict]` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/core/domain/entities/start_teddy_system.py:83:\n `\"\\n👋 Shutting down Teddy Bear system...\")\r\n    except Exception as e:\r\n    logger.error(f\"Error: {e}\")f\"❌ Error: {e}\")` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/application/services/core/notification_service.py:373:\n missing element"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/dashboards/components/PerformanceMetrics.tsx:1:\n `��/` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/exception_handling/global_exception_handler.py:362:\n `\r\n    \"\"\"Retry with exponential backoff\"\"\"\r\n\r\n    def __init__(self, max_retries: int = 3, base_delay: float = 1.0):\r\n        self.max_retries = max_retries\r\n        self.base_delay = base_delay\r\n\r\n    async def recover(self, exception: TeddyBearException) -\u003e Any:\r\n        \"\"\"Retry the operation\"\"\"\r\n        if not exception.is_retryable:\r\n            raise exception\r\n\r\n        for attempt in range(self.max_retries):\r\n            try:\r\n                # This would need the original operation\r\n                # For now, just demonstrate the pattern\r\n                delay = self.base_delay * (2**attempt)\r\n                await asyncio.sleep(delay)\r\n                # Retry operation here\r\n                return None\r\n\r\n            # FIXME: replace with specific exception\r\nexcept Exception as exc: if attempt == self.max_retries - 1:` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/security/api_gateway.py:1:\n `from typing import Any, Dict, List, Optional\r\n\r\n\"\"\"\r\n🔐 Enterprise API Gateway - Security \u0026 Rate Limiting 2025\r\n=========================================================\r\n\r\nComprehensive API Gateway with:\r\n- Rate limiting and DDoS protection\r\n- JWT authentication and validation\r\n- Request/response transformation\r\n- Circuit breaker pattern\r\n- Real-time threat detection\r\n- API analytics and monitoring\r\n\r\nAuthor: Jaafar Adeeb - Security Lead\r\n\"\"\"\r\n\r\nimport asyncio\r\nimport hashlib\r\nimport ipaddress\r\nimport json\r\nimport re\r\nimport time\r\nfrom collections import defaultdict, deque\r\nfrom dataclasses import dataclass, field\r\nfrom datetime import datetime, timedelta\r\nfrom enum import Enum\r\nfrom typing import Any, Callable, Dict, List, Optional, Tuple\r\n\r\nimport redis.asyncio as redis\r\nimport structlog\r\nfrom fastapi import Depends, FastAPI, HTTPException, Request, Response, status\r\nfrom fastapi.middleware.base import BaseHTTPMiddleware\r\nfrom fastapi.responses import JSONResponse\r\nfrom starlette.middleware.cors import CORSMiddleware\r\n\r\nlogger = structlog.get_logger(__name__)\r\n\r\n\r\nclass ThreatLevel(Enum):\r\n    \"\"\"Threat level classification\"\"\"\r\n    LOW = \"low\"\r\n    MEDIUM = \"medium\"\r\n    HIGH = \"high\"\r\n    CRITICAL = \"critical\"\r\n\r\n\r\nclass RequestType(Enum):\r\n    \"\"\"Request type classification\"\"\"\r\n    AUDIO_UPLOAD = \"audio_upload\"\r\n    WEBSOCKET_CONNECTION = \"websocket_connection\"\r\n    API_CALL = \"api_call\"\r\n    AUTHENTICATION = \"authentication\"\r\n    FILE_UPLOAD = \"file_upload\"\r\n    BULK_OPERATION = \"bulk_operation\"\r\n\r\n\r\n@dataclass\r\nclass RateLimitRule:\r\n    \"\"\"Rate limiting rule configuration\"\"\"\r\n    name: str\r\n    requests: int\r\n    window_seconds: int\r\n    request_type: Optional[RequestType] = None\r\n    user_role: Optional[str] = None\r\n    endpoint_pattern: Optional[str] = None\r\n    burst_multiplier: float = 1.5\r\n\r\n\r\n@dataclass\r\nclass ThreatSignature:\r\n    \"\"\"Security threat signature\"\"\"\r\n    name: str\r\n    pattern: str\r\n    threat_level: ThreatLevel\r\n    action: str  # block, log, rate_limit\r\n    description: str\r\n\r\n\r\n@dataclass\r\nclass RequestAnalytics:\r\n    \"\"\"Request analytics data\"\"\"\r\n    timestamp: datetime\r\n    ip_address: str\r\n    user_id: Optional[str]\r\n    endpoint: str\r\n    method: str\r\n    response_time: float\r\n    status_code: int\r\n    user_agent: str\r\n    threat_level: ThreatLevel\r\n    blocked: bool = False\r\n\r\n\r\nclass SecurityAPIGateway:\r\n    \"\"\"Enterprise API Gateway with comprehensive security\"\"\"\r\n\r\n    def __init__(self, redis_client: Optional[redis.Redis] = None):\r\n        self.redis_client = redis_client\r\n        self.rate_limit_rules: List[RateLimitRule] = []\r\n        self.threat_signatures: List[ThreatSignature] = []\r\n        self.blocked_ips: set = set()\r\n        self.whitelisted_ips: set = set()\r\n        self.request_analytics: deque = deque(maxlen=10000)\r\n\r\n        # Circuit breaker states\r\n        self.circuit_breakers: Dict[str, Dict[str, Any]] = {}\r\n\r\n        # DDoS detection\r\n        self.ddos_thresholds = {\r\n            'requests_per_minute': 1000,\r\n            'unique_ips_threshold': 100,\r\n            'error_rate_threshold': 0.5\r\n        }\r\n\r\n        # Initialize default rules and signatures\r\n        self._initialize_default_rules()\r\n        self._initialize_threat_signatures()\r\n\r\n        # Background monitoring tasks\r\n        self._monitoring_tasks: List[asyncio.Task] = []\r\n        self._start_monitoring()\r\n\r\n    def _initialize_default_rules(self) -\u003e Any:\r\n        \"\"\"Initialize default rate limiting rules\"\"\"\r\n        self.rate_limit_rules = [\r\n            # General API limits\r\n            RateLimitRule(\"general_api\", 100, 60, RequestType.API_CALL),\r\n\r\n            # Authentication limits (more restrictive)\r\n            RateLimitRule(\"auth_login\", 5, 300, RequestType.AUTHENTICATION),\r\n\r\n            # Audio upload limits\r\n            RateLimitRule(\"audio_upload\", 20, 60, RequestType.AUDIO_UPLOAD),\r\n\r\n            # WebSocket connections\r\n            RateLimitRule(\"websocket\", 10, 60,\r\n                          RequestType.WEBSOCKET_CONNECTION),\r\n\r\n            # File uploads\r\n            RateLimitRule(\"file_upload\", 50, 300, RequestType.FILE_UPLOAD),\r\n\r\n            # Bulk operations\r\n            RateLimitRule(\"bulk_ops\", 5, 600, RequestType.BULK_OPERATION),\r\n\r\n            # Parent role - higher limits\r\n            RateLimitRule(\"parent_api\", 200, 60, user_role=\"parent\"),\r\n\r\n            # Child role - lower limits for safety\r\n            RateLimitRule(\"child_api\", 30, 60, user_role=\"child\"),\r\n        ]\r\n\r\n    def _initialize_threat_signatures(self) -\u003e Any:\r\n        \"\"\"Initialize security threat signatures\"\"\"\r\n        self.threat_signatures = [\r\n            # SQL Injection patterns\r\n            ThreatSignature(\r\n                \"sql_injection\",\r\n                r\"(union\\s+select|or\\s+1=1|drop\\s+table|insert\\s+into|delete\\s+from)\",\r\n                ThreatLevel.HIGH,\r\n                \"block\",\r\n                \"SQL injection attempt detected\"\r\n            ),\r\n\r\n            # XSS patterns\r\n            ThreatSignature(\r\n                \"xss_attack\",\r\n                r\"(\u003cscript|javascript:|onload=|onerror=|alert\\(|document\\.cookie)\",\r\n                ThreatLevel.HIGH,\r\n                \"block\",\r\n                \"Cross-site scripting attempt detected\"\r\n            ),\r\n\r\n            # Command injection\r\n            ThreatSignature(\r\n                \"command_injection\",\r\n                r\"(;|\\||\u0026|\\$\\(|`|\\$\\{|eval\\(|exec\\(|system\\()\",\r\n                ThreatLevel.CRITICAL,\r\n                \"block\",\r\n                \"Command injection attempt detected\"\r\n            ),\r\n\r\n            # Path traversal\r\n            ThreatSignature(\r\n                \"path_traversal\",\r\n                r\"(\\.\\./|\\.\\.\\\\|/etc/passwd|/windows/system32)\",\r\n                ThreatLevel.HIGH,\r\n                \"block\",\r\n                \"Path traversal attempt detected\"\r\n            ),\r\n\r\n            # Suspicious user agents\r\n            ThreatSignature(\r\n                \"suspicious_user_agent\",\r\n                r\"(sqlmap|nikto|nmap|masscan|zgrab|shodan)\",\r\n                ThreatLevel.MEDIUM,\r\n                \"log\",\r\n                \"Suspicious user agent detected\"\r\n            ),\r\n\r\n            # Bot detection\r\n            ThreatSignature(\r\n                \"bot_detection\",\r\n                r\"(bot|crawler|spider|scraper|automation)\",\r\n                ThreatLevel.LOW,\r\n                \"rate_limit\",\r\n                \"Automated bot detected\"\r\n            ),\r\n        ]\r\n\r\n    async def create_middleware(self) -\u003e BaseHTTPMiddleware:\r\n        \"\"\"Create FastAPI middleware for the gateway\"\"\"\r\n\r\n        class APIGatewayMiddleware(BaseHTTPMiddleware):\r\n            def __init__(self, app, gateway_instance):\r\n                super().__init__(app)\r\n                self.gateway = gateway_instance\r\n\r\n            async def dispatch(self, request: Request, call_next: Callable):\r\n                start_time = time.time()\r\n\r\n                # Security checks\r\n                security_result = await self.gateway.security_check(request)\r\n                if not security_result['allowed']:\r\n                    return JSONResponse(\r\n                        status_code=security_result['status_code'],\r\n                        content={\"error\": security_result['message']}\r\n                    )\r\n\r\n                # Rate limiting\r\n                rate_limit_result = await self.gateway.check_rate_limit(request)\r\n                if not rate_limit_result['allowed']:\r\n                    return JSONResponse(\r\n                        status_code=429,\r\n                        content={\r\n                            \"error\": \"Rate limit exceeded\",\r\n                            \"retry_after\": rate_limit_result.get('retry_after', 60)\r\n                        },\r\n                        headers={\r\n                            \"Retry-After\": str(rate_limit_result.get('retry_after', 60))}\r\n                    )\r\n\r\n                # Circuit breaker check\r\n                if not await self.gateway.check_circuit_breaker(request):\r\n                    return JSONResponse(\r\n                        status_code=503,\r\n                        content={\"error\": \"Service temporarily unavailable\"}\r\n                    )\r\n\r\n                try:\r\n                    # Process request\r\n                    response = await call_next(request)\r\n\r\n                    # Record metrics\r\n                    processing_time = time.time() - start_time\r\n                    await self.gateway.record_request_metrics(\r\n                        request, response, processing_time\r\n                    )\r\n\r\n                    # Add security headers\r\n                    response = await self.gateway.add_security_headers(response)\r\n\r\n                    return response\r\n\r\n                except Exception as e:\r\n                    # Handle errors and update circuit breaker\r\n                    await self.gateway.handle_request_error(request, str(e))\r\n                    raise\r\n\r\n        return APIGatewayMiddleware\r\n\r\n    async def security_check(self, request: Request) -\u003e Dict[str, Any]:\r\n        \"\"\"Comprehensive security check for incoming requests\"\"\"\r\n\r\n        client_ip = self._get_client_ip(request)\r\n\r\n        # Check if IP is blocked\r\n        if client_ip in self.blocked_ips:\r\n            logger.warning(\"Blocked IP attempted access\", ip=client_ip)\r\n            return {\r\n                'allowed': False,\r\n                'status_code': 403,\r\n                'message': 'Access denied from this IP address'\r\n            }\r\n\r\n        # Check whitelist (if configured)\r\n        if self.whitelisted_ips and client_ip not in self.whitelisted_ips:\r\n            return {\r\n                'allowed': False,\r\n                'status_code': 403,\r\n                'message': 'IP address not whitelisted'\r\n            }\r\n\r\n        # Threat signature detection\r\n        threat_detected = await self._check_threat_signatures(request)\r\n        if threat_detected:\r\n            return {\r\n                'allowed': False,\r\n                'status_code': 403,\r\n                'message': 'Security threat detected'\r\n            }\r\n\r\n        # DDoS detection\r\n        if await self._detect_ddos_attack(request):\r\n            return {\r\n                'allowed': False,\r\n                'status_code': 429,\r\n                'message': 'DDoS attack detected - temporary block'\r\n            }\r\n\r\n        return {'allowed': True}\r\n\r\n    async def check_rate_limit(self, request: Request) -\u003e Dict[str, Any]:\r\n        \"\"\"Check rate limits for the request\"\"\"\r\n\r\n        client_ip = self._get_client_ip(request)\r\n        user_id = await self._extract_user_id(request)\r\n        user_role = await self._extract_user_role(request)\r\n        endpoint = str(request.url.path)\r\n\r\n        # Determine request type\r\n        request_type = self._classify_request(request)\r\n\r\n        # Find applicable rate limit rules\r\n        applicable_rules = self._find_applicable_rules(\r\n            request_type, user_role, endpoint)\r\n\r\n        for rule in applicable_rules:\r\n            # Create rate limit key\r\n            key_parts = [rule.name]\r\n            if user_id:\r\n                key_parts.append(f\"user:{user_id}\")\r\n            else:\r\n                key_parts.append(f\"ip:{client_ip}\")\r\n\r\n            rate_limit_key = \":\".join(key_parts)\r\n\r\n            # Check rate limit\r\n            is_allowed, retry_after = await self._check_rate_limit_key(\r\n                rate_limit_key, rule.requests, rule.window_seconds\r\n            )\r\n\r\n            if not is_allowed:\r\n                logger.warning(\"Rate limit exceeded\",\r\n                               key=rate_limit_key,\r\n                               rule=rule.name,\r\n                               ip=client_ip,\r\n                               user_id=user_id)\r\n\r\n                return {\r\n                    'allowed': False,\r\n                    'retry_after': retry_after,\r\n                    'rule': rule.name\r\n                }\r\n\r\n        return {'allowed': True}\r\n\r\n    async def _check_rate_limit_key(\r\n            self, key: str, limit: int, window: int) -\u003e Tuple[bool, int]:\r\n        \"\"\"Check rate limit for a specific key\"\"\"\r\n\r\n        if self.redis_client:\r\n            return await self._redis_rate_limit_check(key, limit, window)\r\n        else:\r\n            return await self._memory_rate_limit_check(key, limit, window)\r\n\r\n    async def _redis_rate_limit_check(\r\n            self, key: str, limit: int, window: int) -\u003e Tuple[bool, int]:\r\n        \"\"\"Redis-based sliding window rate limiting\"\"\"\r\n\r\n        now = time.time()\r\n        window_start = now - window\r\n\r\n        # Use Redis pipeline for atomic operations\r\n        async with self.redis_client.pipeline() as pipe:\r\n            # Remove expired entries\r\n            await pipe.zremrangebyscore(key, 0, window_start)\r\n\r\n            # Count current requests\r\n            current_count = await pipe.zcard(key)\r\n\r\n            if current_count \u003e= limit:\r\n                # Get oldest entry to calculate retry_after\r\n                oldest = await pipe.zrange(key, 0, 0, withscores=True)\r\n                if oldest:\r\n                    retry_after = int(oldest[0][1] + window - now)\r\n                else:\r\n                    retry_after = window\r\n\r\n                return False, max(retry_after, 1)\r\n\r\n            # Add current request\r\n            await pipe.zadd(key, {str(now): now})\r\n            await pipe.expire(key, window)\r\n            await pipe.execute()\r\n\r\n            return True, 0\r\n\r\n    async def _memory_rate_limit_check(\r\n            self, key: str, limit: int, window: int) -\u003e Tuple[bool, int]:\r\n        \"\"\"Memory-based rate limiting (fallback)\"\"\"\r\n\r\n        if not hasattr(self, '_memory_store'):\r\n            self._memory_store = {}\r\n\r\n        now = time.time()\r\n        window_start = now - window\r\n\r\n        if key not in self._memory_store:\r\n            self._memory_store[key] = []\r\n\r\n        # Clean expired entries\r\n        self._memory_store[key] = [\r\n            timestamp for timestamp in self._memory_store[key]\r\n            if timestamp \u003e window_start\r\n        ]\r\n\r\n        if len(self._memory_store[key]) \u003e= limit:\r\n            oldest = min(self._memory_store[key])\r\n            retry_after = int(oldest + window - now)\r\n            return False, max(retry_after, 1)\r\n\r\n        self._memory_store[key].append(now)\r\n        return True, 0\r\n\r\n    async def check_circuit_breaker(self, request: Request) -\u003e bool:\r\n        \"\"\"Check circuit breaker status for service\"\"\"\r\n\r\n        service_key = self._get_service_key(request)\r\n\r\n        if service_key not in self.circuit_breakers:\r\n            self.circuit_breakers[service_key] = {\r\n                'state': 'closed',  # closed, open, half_open\r\n                'failure_count': 0,\r\n                'last_failure_time': None,\r\n                'success_count': 0\r\n            }\r\n\r\n        breaker = self.circuit_breakers[service_key]\r\n\r\n        # If circuit is open, check if it should transition to half-open\r\n        if breaker['state'] == 'open':\r\n            if (time.time() -\r\n                    breaker['last_failure_time']) \u003e 60:  # 1 minute timeout\r\n                breaker['state'] = 'half_open'\r\n                breaker['success_count'] = 0\r\n                logger.info(\r\n                    \"Circuit breaker transitioning to half-open\",\r\n                    service=service_key)\r\n            else:\r\n                return False\r\n\r\n        return True\r\n\r\n    async def record_request_metrics(\r\n            self,\r\n            request: Request,\r\n            response: Response,\r\n            processing_time: float):\r\n        \"\"\"Record request metrics for analytics\"\"\"\r\n\r\n        client_ip = self._get_client_ip(request)\r\n        user_id = await self._extract_user_id(request)\r\n\r\n        analytics = RequestAnalytics(\r\n            timestamp=datetime.utcnow(),\r\n            ip_address=client_ip,\r\n            user_id=user_id,\r\n            endpoint=str(request.url.path),\r\n            method=request.method,\r\n            response_time=processing_time,\r\n            status_code=response.status_code,\r\n            user_agent=request.headers.get('user-agent', ''),\r\n            threat_level=ThreatLevel.LOW\r\n        )\r\n\r\n        self.request_analytics.append(analytics)\r\n\r\n        # Update circuit breaker\r\n        service_key = self._get_service_key(request)\r\n        if service_key in self.circuit_breakers:\r\n            breaker = self.circuit_breakers[service_key]\r\n\r\n            if response.status_code \u003e= 500:\r\n                breaker['failure_count'] += 1\r\n                breaker['last_failure_time'] = time.time()\r\n\r\n                # Open circuit if too many failures\r\n                if breaker['failure_count'] \u003e= 5:\r\n                    breaker['state'] = 'open'\r\n                    logger.warning(\"Circuit breaker opened\",\r\n                                   service=service_key)\r\n            else:\r\n                if breaker['state'] == 'half_open':\r\n                    breaker['success_count'] += 1\r\n                    if breaker['success_count'] \u003e= 3:\r\n                        breaker['state'] = 'closed'\r\n                        breaker['failure_count'] = 0\r\n                        logger.info(\"Circuit breaker closed\",\r\n                                    service=service_key)\r\n\r\n    async def add_security_headers(self, response: Response) -\u003e Response:\r\n        \"\"\"Add security headers to response\"\"\"\r\n\r\n        # Security headers\r\n        security_headers = {\r\n            'X-Content-Type-Options': 'nosniff',\r\n            'X-Frame-Options': 'DENY',\r\n            'X-XSS-Protection': '1; mode=block',\r\n            'Strict-Transport-Security': 'max-age=31536000; includeSubDomains',\r\n            'Content-Security-Policy': \"default-src 'self'; script-src 'self' 'unsafe-inline'\",\r\n            'Referrer-Policy': 'strict-origin-when-cross-origin',\r\n            'Permissions-Policy': 'microphone=(), camera=(), geolocation=()',\r\n        }\r\n\r\n        for header, value in security_headers.items():\r\n            response.headers[header] = value\r\n\r\n        return response\r\n\r\n    async def handle_request_error(self, request: Request, error: str):\r\n        \"\"\"Handle request errors and update metrics\"\"\"\r\n\r\n        service_key = self._get_service_key(request)\r\n        if service_key in self.circuit_breakers:\r\n            breaker = self.circuit_breakers[service_key]\r\n            breaker['failure_count'] += 1\r\n            breaker['last_failure_time'] = time.time()\r\n\r\n        logger.error(\"Request processing error\",\r\n                     endpoint=str(request.url.path),\r\n                     method=request.method,\r\n                     error=error)\r\n\r\n    def _get_client_ip(self, request: Request) -\u003e str:\r\n        \"\"\"Extract client IP address from request\"\"\"\r\n\r\n        # Check forwarded headers\r\n        forwarded_for = request.headers.get('x-forwarded-for')\r\n        if forwarded_for:\r\n            return forwarded_for.split(',')[0].strip()\r\n\r\n        real_ip = request.headers.get('x-real-ip')\r\n        if real_ip:\r\n            return real_ip\r\n\r\n        # Fallback to client host\r\n        if hasattr(request, 'client') and request.client:\r\n            return request.client.host\r\n\r\n        return 'unknown'\r\n\r\n    async def _extract_user_id(self, request: Request) -\u003e Optional[str]:\r\n        \"\"\"Extract user ID from JWT token or session\"\"\"\r\n\r\n        # Try to get from Authorization header\r\n        auth_header = request.headers.get('authorization')\r\n        if auth_header and auth_header.startswith('Bearer '):\r\n            token = auth_header[7:]\r\n            # In a real implementation, decode JWT and extract user_id\r\n            # For now, return a placeholder\r\n            return f\"user_from_token_{hash(token) % 1000}\"\r\n\r\n        return None\r\n\r\n    async def _extract_user_role(self, request: Request) -\u003e Optional[str]:\r\n        \"\"\"Extract user role from JWT token or session\"\"\"\r\n\r\n        # This would decode JWT and extract role\r\n        # For now, return a placeholder based on endpoint\r\n        endpoint = str(request.url.path)\r\n        if '/parent/' in endpoint:\r\n            return 'parent'\r\n        elif '/child/' in endpoint:\r\n            return 'child'\r\n\r\n        return None\r\n\r\n    def _classify_request(self, request: Request) -\u003e RequestType:\r\n        \"\"\"Classify request type for rate limiting\"\"\"\r\n        endpoint = str(request.url.path)\r\n        method = request.method\r\n\r\n        classification_rules = [\r\n            (lambda e, m: '/auth/' in e or '/login' in e, RequestType.AUTHENTICATION),\r\n            (lambda e, m: '/audio/' in e and m ==\r\n             'POST', RequestType.AUDIO_UPLOAD),\r\n            (lambda e, m: '/ws' in e or '/websocket' in e,\r\n             RequestType.WEBSOCKET_CONNECTION),\r\n            (lambda e, m: '/upload' in e or m == 'POST', RequestType.FILE_UPLOAD),\r\n            (lambda e, m: '/bulk/' in e, RequestType.BULK_OPERATION),\r\n        ]\r\n\r\n        for condition, request_type in classification_rules:\r\n            if condition(endpoint, method):\r\n                return request_type\r\n\r\n        return RequestType.API_CALL\r\n\r\n    def _find_applicable_rules(self, request_type: RequestType,\r\n                               user_role: Optional[str],\r\n                               endpoint: str) -\u003e List[RateLimitRule]:\r\n        \"\"\"Find applicable rate limit rules for request\"\"\"\r\n\r\n        applicable_rules = []\r\n\r\n        for rule in self.rate_limit_rules:\r\n            # Check request type match\r\n            if rule.request_type and rule.request_type != request_type:\r\n                continue\r\n\r\n            # Check user role match\r\n            if rule.user_role and rule.user_role != user_role:\r\n                continue\r\n\r\n            # Check endpoint pattern match\r\n            if rule.endpoint_pattern and not re.search(\r\n                    rule.endpoint_pattern, endpoint):\r\n                continue\r\n\r\n            applicable_rules.append(rule)\r\n\r\n        return applicable_rules\r\n\r\n    def _get_service_key(self, request: Request) -\u003e str:\r\n        \"\"\"Get service key for circuit breaker\"\"\"\r\n\r\n        # Use first part of path as service identifier\r\n        path_parts = str(request.url.path).strip('/').split('/')\r\n        return path_parts[0] if path_parts else 'default'\r\n\r\n    async def _check_threat_signatures(self, request: Request) -\u003e bool:\r\n        \"\"\"Check request against threat signatures\"\"\"\r\n\r\n        # Check URL for threats\r\n        url_str = str(request.url)\r\n        for signature in self.threat_signatures:\r\n            if re.search(signature.pattern, url_str, re.IGNORECASE):\r\n                logger.warning(\"Threat signature detected in URL\",\r\n                               signature=signature.name,\r\n                               url=url_str,\r\n                               threat_level=signature.threat_level.value)\r\n\r\n                if signature.action == 'block':\r\n                    return True\r\n\r\n        # Check headers\r\n        for header_name, header_value in request.headers.items():\r\n            for signature in self.threat_signatures:\r\n                if re.search(signature.pattern, header_value, re.IGNORECASE):\r\n                    logger.warning(\"Threat signature detected in headers\",\r\n                                   signature=signature.name,\r\n                                   header=header_name,\r\n                                   threat_level=signature.threat_level.value)\r\n\r\n                    if signature.action == 'block':\r\n                        return True\r\n\r\n        return False\r\n\r\n    async def _detect_ddos_attack(self, request: Request) -\u003e bool:\r\n        \"\"\"Detect potential DDoS attacks\"\"\"\r\n\r\n        current_time = datetime.utcnow()\r\n        one_minute_ago = current_time - timedelta(minutes=1)\r\n\r\n        # Count requests in the last minute\r\n        recent_requests = [\r\n            analytics for analytics in self.request_analytics\r\n            if analytics.timestamp \u003e one_minute_ago\r\n        ]\r\n\r\n        if len(recent_requests) \u003e self.ddos_thresholds['requests_per_minute']:\r\n            # Check unique IPs\r\n            unique_ips = len(\r\n                set(analytics.ip_address for analytics in recent_requests))\r\n\r\n            if unique_ips \u003c self.ddos_thresholds['unique_ips_threshold']:\r\n                logger.critical(\"Potential DDoS attack detected\",\r\n                                requests_per_minute=len(recent_requests),\r\n                                unique_ips=unique_ips)\r\n                return True\r\n\r\n        return False\r\n\r\n    def _start_monitoring(self) -\u003e Any:\r\n        \"\"\"Start background monitoring tasks\"\"\"\r\n\r\n        async def cleanup_task():\r\n            \"\"\"Cleanup old data periodically\"\"\"\r\n            while True:\r\n                await asyncio.sleep(300)  # 5 minutes\r\n\r\n                # Clean up old analytics data\r\n                cutoff_time = datetime.utcnow() - timedelta(hours=24)\r\n                self.request_analytics = deque(\r\n                    [a for a in self.request_analytics if a.timestamp \u003e cutoff_time],\r\n                    maxlen=10000\r\n                )\r\n\r\n        self._monitoring_tasks.append(asyncio.create_task(cleanup_task()))\r\n\r\n    async def get_analytics_summary(self) -\u003e Dict[str, Any]:\r\n        \"\"\"Get analytics summary\"\"\"\r\n\r\n        current_time = datetime.utcnow()\r\n        one_hour_ago = current_time - timedelta(hours=1)\r\n\r\n        recent_requests = [\r\n            analytics for analytics in self.request_analytics\r\n            if analytics.timestamp \u003e one_hour_ago\r\n        ]\r\n\r\n        return {\r\n            'total_requests_last_hour': len(recent_requests),\r\n            'unique_ips': len(set(r.ip_address for r in recent_requests)),\r\n            'blocked_requests': len([r for r in recent_requests if r.blocked]),\r\n            'average_response_time': sum(r.response_time for r in recent_requests) / len(recent_requests) if recent_requests else 0,\r\n            'top_endpoints': self._get_top_endpoints(recent_requests),\r\n            'threat_levels': self._get_threat_level_counts(recent_requests)\r\n        }\r\n\r\n    def _get_top_endpoints(\r\n            self, requests: List[RequestAnalytics]) -\u003e List[Dict[str, Any]]:\r\n        \"\"\"Get top endpoints by request count\"\"\"\r\n\r\n        endpoint_counts = defaultdict(int)\r\n        for req in requests:\r\n            endpoint_counts[req.endpoint] += 1\r\n\r\n        return [\r\n            {'endpoint': endpoint, 'count': count}\r\n            for endpoint, count in sorted(endpoint_counts.items(),\r\n                                          key=lambda x: x[1], reverse=True)[:10]\r\n        ]\r\n\r\n    def _get_threat_level_counts(\r\n            self, requests: List[RequestAnalytics]) -\u003e Dict[str, int]:\r\n        \"\"\"Get threat level distribution\"\"\"\r\n\r\n        threat_counts = defaultdict(int)\r\n        for req in requests:\r\n            threat_counts[req.threat_level.value] += 1\r\n\r\n        return dict(threat_counts)\r\n\r\n\r\n# Global instance\r\n_api_gateway: Optional[SecurityAPIGateway] = None\r\n\r\n\r\ndef get_api_gateway(\r\n        redis_client: Optional[redis.Redis] = None) -\u003e SecurityAPIGateway:\r\n    \"\"\"Get global API gateway instance\"\"\"\r\n    global _api_gateway\r\n    if _api_gateway is None:\r\n        _api_gateway = SecurityAPIGateway(redis_client)\r\n    return _api_gateway\r\n\r\n\r\ndef configure_app_security(Optional[redis.Redis]=None) -\u003e None:\r\n    \"\"\"Configure FastAPI app with security middleware\"\"\"\r\n\r\n    # Get API gateway instance\r\n    gateway = get_api_gateway(redis_client)\r\n\r\n    # Add CORS middleware\r\n    app.add_middleware(\r\n        CORSMiddleware,\r\n        allow_origins=[\"https://*.teddybear.ai\", \"https://localhost:3000\"],\r\n        allow_credentials=True,\r\n        allow_methods=[\"GET\", \"POST\", \"PUT\", \"DELETE\"],\r\n        allow_headers=[\"*\"],\r\n    )\r\n\r\n    # Add API Gateway middleware\r\n    app.add_middleware(gateway.create_middleware())\r\n\r\n    return app` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/dashboards/executive-dashboard.tsx:1:\n `��/` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/edge/device_manager.py:84:\n missing element"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/dashboards/components/ChildSafetyMonitor.tsx:1:\n `��/` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/external_services/__main__.py:24:\n `def main(args: Optional[list] = None) -\u003e int:\r\n    \"\"\"Main entry point for the audio system.\"\"\"\r\n    try:\r\n        # Setup logging\r\n        setup_logging()\r\n\r\n        logger.info(\"Starting audio system...\")\r\n\r\n        # Test audio system\r\n       # if not audio_manager.test_audio_system():\r\n        # logger.error(\"Audio system test failed\")\r\n        # return 1\r\n\r\n        # logger.info(\"Audio system started successfully\")\r\n        # return 0\r\n\r\n    # except Exception as e:\r\n        # logger.error(f\"Error starting audio system: {e}\")\r\n       # return 1\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    sys.exit(main())` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/emotion/text_emotion_analyzer.py:4:\n `\"\"\"Text-based emotion analysis infrastructure.\"\"\"\r\n\r\n\r\ntry:\r\n    from transformers import pipeline\r\nexcept ImportError:\r\n    from src.infrastructure.external_services.mock.transformers import pipeline\r\n\r\nlogger = structlog.get_logger(__name__)\r\n\r\n\r\nclass TextEmotionAnalyzer:\r\n    \"\"\"Infrastructure component for text emotion analysis.\"\"\"\r\n\r\n    def __init__(self):\r\n        self.text_analyzer = None\r\n        self._initialize_model()\r\n\r\n    def _initialize_model(self) -\u003e None:\r\n        \"\"\"Initialize the transformer model.\"\"\"\r\n        try:\r\n            self.text_analyzer = pipeline(\r\n                \"text-classification\",\r\n                model=\"j-hartmann/emotion-english-distilroberta-base\",\r\n                return_all_scores=True\r\n            )\r\n            logger.info(\" Text emotion model loaded\")\r\n        except Exception as e:\r\n            logger.error(f\" Failed to load model: {e}\")\r\n            self.text_analyzer = None\r\n\r\n    async def analyze_text(self, text: str) -\u003e Optional[Dict[str, float]]:\r\n        \"\"\"Analyze text and return emotion scores.\"\"\"\r\n        if not self.text_analyzer or not text.strip():\r\n            return None\r\n\r\n        try:\r\n            predictions = self.text_analyzer(text)\r\n\r\n            emotion_scores = {}\r\n            for pred in predictions[0]:\r\n                emotion = pred['label'].lower()\r\n                score = pred['score']\r\n                emotion_scores[emotion] = score\r\n\r\n            return emotion_scores\r\n\r\n        except Exception as e:\r\n            logger.error(f\" Text analysis failed: {e}\")\r\n            return None\r\n\r\n    def is_available(self) -\u003e bool:\r\n        \"\"\"Check if the analyzer is available.\"\"\"\r\n        return self.text_analyzer is not None` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/infrastructure/persistence/repositories/transcription_sqlite_repository.py:14:\n `\r\n    def __init__(self, connection):\r\n        super().__init__(\r\n            connection, table_name=\"transcriptions\", entity_class=Transcription\r\n        )\r\n\r\n    def _get_table_schema(self) -\u003e str:\r\n        \"\"\"Get the CREATE TABLE SQL statement for transcriptions\"\"\"\r\n        return \"\"\"\r\n        CREATE TABLE IF NOT EXISTS transcriptions (\r\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n            audio_file_path TEXT,\r\n            text TEXT,\r\n            language TEXT,\r\n            confidence REAL,\r\n            created_at DATETIME,\r\n            user_id INTEGER,\r\n            conversation_id INTEGER,\r\n            duration REAL,\r\n            model_used TEXT\r\n        )\r\n        \"\"\"\r\n\r\n    def _get_audio_duration(self, audio_file_path) -\u003e Any:\r\n        \"\"\"Get audio file duration in seconds.\"\"\"\r\n        try:\r\n            with contextlib.closing(wave.open(audio_file_path, \"rb\")) as f:\r\n                frames = f.getnframes()\r\n                rate = f.getframerate()\r\n                duration = frames / float(rate)\r\n                return duration\r\n\r\n        # FIXME: replace with specific exception\r\nexcept Exception as exc:` was unexpected"
              }
            },
            {
              "descriptor": {
                "id": "Syntax error"
              },
              "level": "warning",
              "message": {
                "text": "Syntax error at line src/application/services/core/ar_vr_preferences_manager.py:10:\n `\r\n    \"\"\"مدير التفضيلات - مسؤولية واحدة فقط\"\"\"\r\n\r\n    def __init__(self):\r\n        self.child_preferences: Dict[str, Dict] = {}\r\n\r\n    def initialize_child_preferences(self, child_id: str) -\u003e None:\r\n        \"\"\"تهيئة تفضيلات طفل جديد\"\"\"\r\n        if child_id not in self.child_preferences:\r\n            self.child_preferences[child_id] = {\r\n                \"preferred_ar_categories\": {},\r\n                \"preferred_vr_themes\": {},\r\n                \"optimal_session_duration\": 10,\r\n                \"comfort_settings\": {},\r\n                \"difficulty_preferences\": \"medium\",\r\n                \"content_filters\": {\r\n                    \"educational_only\": False,\r\n                    \"age_appropriate\": True,\r\n                    \"safe_content\": True\r\n                }\r\n            }\r\n\r\n    def update_ar_preferences(self, child_id: str, session: Dict) -\u003e None:\r\n        \"\"\"تحديث تفضيلات AR بناءً على الجلسة\"\"\"\r\n        self.initialize_child_preferences(child_id)\r\n        prefs = self.child_preferences[child_id]\r\n\r\n        if session[\"type\"] == \"ar\" and \"experience_id\" in session:\r\n            # هنا نحتاج للحصول على معلومات التجربة\r\n            # سنفترض أن category متوفرة في session أو يمكن استنتاجها\r\n            category = session.get(\"category\", \"educational\")  # افتراضي\r\n\r\n            if category not in prefs[\"preferred_ar_categories\"]:\r\n                prefs[\"preferred_ar_categories\"][category] = 0\r\n\r\n            # زيادة النقاط بناءً على الأداء\r\n            performance = session.get(\"performance_summary\", {})\r\n            if performance.get(\"engagement_level\") == \"high\":\r\n                prefs[\"preferred_ar_categories\"][category] += 2\r\n            elif performance.get(\"engagement_level\") == \"medium\":\r\n                prefs[\"preferred_ar_categories\"][category] += 1\r\n\r\n    def update_vr_preferences(self, child_id: str, session: Dict) -\u003e None:\r\n        \"\"\"تحديث تفضيلات VR بناءً على الجلسة\"\"\"\r\n        self.initialize_child_preferences(child_id)\r\n        prefs = self.child_preferences[child_id]\r\n\r\n        if session[\"type\"] == \"vr\" and \"environment_id\" in session:\r\n            # هنا نحتاج للحصول على معلومات البيئة\r\n            theme = session.get(\"theme\", \"educational\")  # افتراضي\r\n\r\n            if theme not in prefs[\"preferred_vr_themes\"]:\r\n                prefs[\"preferred_vr_themes\"][theme] = 0\r\n\r\n            performance = session.get(\"performance_summary\", {})\r\n            if performance.get(\"engagement_level\") == \"high\":\r\n                prefs[\"preferred_vr_themes\"][theme] += 2\r\n            elif performance.get(\"engagement_level\") == \"medium\":\r\n                prefs[\"preferred_vr_themes\"][theme] += 1\r\n\r\n    def update_optimal_duration(self, child_id: str, session: Dict) -\u003e None:\r\n        \"\"\"تحديث المدة المثلى بناءً على الجلسة\"\"\"\r\n        self.initialize_child_preferences(child_id)\r\n        prefs = self.child_preferences[child_id]\r\n\r\n        actual_duration = session.get(\"actual_duration_minutes\", 10)\r\n        performance = session.get(\"performance_summary\", {})\r\n\r\n        # تحديث المدة إذا كانت الجلسة مريحة ومفيدة\r\n        if (performance.get(\"comfort_level\") == \"high\" and\r\n                performance.get(\"engagement_level\") in [\"medium\", \"high\"]):\r\n\r\n            current_optimal = prefs[\"optimal_session_duration\"]\r\n            # متوسط مرجح: 70% القيمة الحالية + 30% الجلسة الجديدة\r\n            prefs[\"optimal_session_duration\"] = (\r\n                current_optimal * 0.7 + actual_duration * 0.3\r\n            )\r\n\r\n    def update_comfort_settings(self, child_id: str, session: Dict) -\u003e None:\r\n        \"\"\"تحديث إعدادات الراحة بناءً على الجلسة\"\"\"\r\n        self.initialize_child_preferences(child_id)\r\n        prefs = self.child_preferences[child_id]\r\n\r\n        performance = session.get(\"performance_summary\", {})\r\n\r\n        # إعدادات الراحة للـ VR\r\n        if session[\"type\"] == \"vr\":\r\n            comfort_level = performance.get(\"comfort_level\", \"high\")\r\n\r\n            if comfort_level == \"low\":\r\n                prefs[\"comfort_settings\"][\"motion_reduction\"] = True\r\n                prefs[\"comfort_settings\"][\"frequent_breaks\"] = True\r\n                prefs[\"comfort_settings\"][\"lower_immersion\"] = True\r\n            elif comfort_level == \"high\":\r\n                # يمكن تخفيف القيود تدريجياً\r\n                if prefs[\"comfort_settings\"].get(\"motion_reduction\"):\r\n                    prefs[\"comfort_settings\"][\"motion_reduction\"] = False\r\n\r\n    def get_child_preferences(self, child_id: str) -\u003e Dict:\r\n        \"\"\"الحصول على تفضيلات طفل\"\"\"\r\n        self.initialize_child_preferences(child_id)\r\n        return self.child_preferences[child_id].copy()\r\n\r\n    def set_content_filters(self, child_id: str, filters: Dict) -\u003e None:\r\n        \"\"\"تعيين مرشحات المحتوى\"\"\"\r\n        self.initialize_child_preferences(child_id)\r\n        self.child_preferences[child_id][\"content_filters\"].update(filters)\r\n\r\n    def get_recommended_ar_categories(\r\n    self, child_id: str, top_n: int = 3) -\u003e list:\r\n        \"\"\"الحصول على فئات AR المفضلة\"\"\"\r\n        prefs = self.get_child_preferences(child_id)\r\n        ar_prefs = prefs[\"preferred_ar_categories\"]\r\n\r\n        if not ar_prefs:\r\n            return [\"educational\", \"interactive_story\", \"game\"]  # افتراضي\r\n\r\n        # ترتيب حسب النقاط\r\n        sorted_categories = sorted(\r\n    ar_prefs.items(),\r\n    key=lambda x: x[1],\r\n     reverse=True)\r\n        return [category for category, _ in sorted_categories[:top_n]]\r\n\r\n    def get_recommended_vr_themes(self, child_id: str, top_n: int = 3) -\u003e list:\r\n        \"\"\"الحصول على موضوعات VR المفضلة\"\"\"\r\n        prefs = self.get_child_preferences(child_id)\r\n        vr_prefs = prefs[\"preferred_vr_themes\"]\r\n\r\n        if not vr_prefs:\r\n            return [\"educational\", \"space\", \"underwater\"]  # افتراضي\r\n\r\n        # ترتيب حسب النقاط\r\n        sorted_themes = sorted(\r\n    vr_prefs.items(),\r\n    key=lambda x: x[1],\r\n     reverse=True)\r\n        return [theme for theme, _ in sorted_themes[:top_n]]\r\n\r\n    def should_filter_content(self, child_id: str, content_type: str) -\u003e bool:\r\n        \"\"\"التحقق من ضرورة تصفية المحتوى\"\"\"\r\n        prefs = self.get_child_preferences(child_id)\r\n        filters = prefs[\"content_filters\"]\r\n\r\n        if filters.get(\"educational_only\") and content_type != \"educational\":\r\n            return True\r\n\r\n        if not filters.get(\"safe_content\"):\r\n            return False  # لا تصفية إذا كانت معطلة\r\n\r\n        return False\r\n\r\n    def get_adaptive_settings(self, child_id: str, session_type: str) -\u003e Dict:\r\n        \"\"\"الحصول على إعدادات تكيفية للطفل\"\"\"\r\n        prefs = self.get_child_preferences(child_id)\r\n\r\n        settings = {\r\n            \"max_duration\": prefs[\"optimal_session_duration\"],\r\n            \"difficulty\": prefs[\"difficulty_preferences\"],\r\n        }\r\n\r\n        if session_type == \"vr\":\r\n            settings.update(prefs[\"comfort_settings\"])\r\n\r\n            # تقليل المدة للأطفال الذين يعانون من مشاكل الراحة\r\n            if prefs[\"comfort_settings\"].get(\"frequent_breaks\"):\r\n                settings[\"max_duration\"] = min(settings[\"max_duration\"], 10)\r\n                settings[\"break_interval\"] = 3\r\n\r\n        return settings\r\n\r\n    def export_preferences(self, child_id: str) -\u003e Dict:\r\n        \"\"\"تصدير تفضيلات الطفل للنسخ الاحتياطي\"\"\"\r\n        return self.get_child_preferences(child_id)\r\n\r\n    def import_preferences(self, child_id: str, preferences: Dict) -\u003e bool:\r\n        \"\"\"استيراد تفضيلات من نسخة احتياطية\"\"\"\r\n        try:\r\n            # التحقق من صحة البنية\r\n            required_keys = [\"preferred_ar_categories\", \"preferred_vr_themes\",\r\n                             \"optimal_session_duration\", \"comfort_settings\"]\r\n\r\n            if not all(key in preferences for key in required_keys):\r\n                return False\r\n\r\n            self.child_preferences[child_id] = preferences\r\n            return True\r\n\r\n        # FIXME: replace with specific exception\r\nexcept Exception as exc:` was unexpected"
              }
            }
          ]
        }
      ],
      "results": [
        {
          "fingerprints": {
            "matchBasedId/v1": "54d9a9da5bdc443b49e5fc480ff60dc7e476886a5f402838f8f3d6769b4858ba6db4526f0433733b343b658943cab348536c7230675501f85ca5f979d9511f69_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/advanced-ci-cd.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 45,
                  "endLine": 214,
                  "snippet": {
                    "text": "      uses: aquasecurity/trivy-action@master"
                  },
                  "startColumn": 7,
                  "startLine": 214
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "3ae38209e6dbfb6e5020b78b6ce64633c8ad2e0631622a5baeec63c97744e4c0d46264c228007278c5b84c9b3e585039a29c670582a02619b3be10ce65fd1219_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/advanced-ci-cd.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 262,
                  "snippet": {
                    "text": "      uses: docker/setup-buildx-action@v3"
                  },
                  "startColumn": 7,
                  "startLine": 262
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "c89fd68b75f3df1109f20a6a98d14d90af89b2fa69aed6eb950879ed0871dd11376dc88a0837706fa5ebb1be0cb1b15a137618feb35cb8d3dd1394c8158b21bd_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/advanced-ci-cd.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 265,
                  "snippet": {
                    "text": "      uses: docker/login-action@v3"
                  },
                  "startColumn": 7,
                  "startLine": 265
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "d6b2ff32c4b01ab39255708f9d75f8f5095fc47c015a0ac4e6897257a0256ce29dea3ce0a183a9d3c882f9950e4a4d7678187e69cb62422ccb2e0546d1f24c25_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/advanced-ci-cd.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 273,
                  "snippet": {
                    "text": "      uses: docker/metadata-action@v5"
                  },
                  "startColumn": 7,
                  "startLine": 273
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "e24d6808eb17678aae2f15feb7279d8fa36172446b067da91d4b0653db616ad135a6bb1c3e1c98dd9d00e19038e2592fdb8eff717b0aa6d9ea22e8127fc6efeb_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/advanced-ci-cd.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 285,
                  "snippet": {
                    "text": "      uses: docker/build-push-action@v5"
                  },
                  "startColumn": 7,
                  "startLine": 285
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "9295ab6b669c2af791d96abecb22467d0edc8dce39a80593b4f270ece25454235f1cbaed975f6d3b20891fbf5689ea616930edff39540543d8eabbd6473fd2fb_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/advanced-ci-cd.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 325,
                  "snippet": {
                    "text": "      uses: aws-actions/configure-aws-credentials@v4"
                  },
                  "startColumn": 7,
                  "startLine": 325
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "42de44f60d49df6286556e42e152067a2e6fae97812efe289c0aa4c787c54375bf8f9b24effe0adc94efe7e6beee932012cd9c60a1ce680551fc9d537b09f05f_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/advanced-ci-cd.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 37,
                  "endLine": 332,
                  "snippet": {
                    "text": "      uses: azure/k8s-set-context@v3"
                  },
                  "startColumn": 7,
                  "startLine": 332
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "9295ab6b669c2af791d96abecb22467d0edc8dce39a80593b4f270ece25454235f1cbaed975f6d3b20891fbf5689ea616930edff39540543d8eabbd6473fd2fb_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/advanced-ci-cd.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 372,
                  "snippet": {
                    "text": "      uses: aws-actions/configure-aws-credentials@v4"
                  },
                  "startColumn": 7,
                  "startLine": 372
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "42de44f60d49df6286556e42e152067a2e6fae97812efe289c0aa4c787c54375bf8f9b24effe0adc94efe7e6beee932012cd9c60a1ce680551fc9d537b09f05f_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/advanced-ci-cd.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 37,
                  "endLine": 379,
                  "snippet": {
                    "text": "      uses: azure/k8s-set-context@v3"
                  },
                  "startColumn": 7,
                  "startLine": 379
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "a68176610957d621948ec1416e928d5c96bf0a76a4e705da556218fd7f424dfda75cd9210fdf5eb8c02c86ab317b09d4d5ab03870f09544ba2ecb36c330b4da1_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/code-quality.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 213,
                  "snippet": {
                    "text": "        uses: codecov/codecov-action@v3"
                  },
                  "startColumn": 9,
                  "startLine": 213
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "84a070658dc6475b78a6313cf365a99f9fd8dd3f347146f21ea08b9b707aa52c613f0587c110c605d03844d7ccf543eb27baddb8b8322607f18518132d4cc7b8_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 35,
                  "snippet": {
                    "text": "      uses: snok/install-poetry@v1"
                  },
                  "startColumn": 7,
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "261dbbb729842cf01d829165518a0b773ad03f7dd3e7a0c18111ae227365c126f9727c698e88abeb60cfc415c8d3cc2197ca8671167024609ba17ff55cd7c36b_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 45,
                  "endLine": 113,
                  "snippet": {
                    "text": "      uses: aquasecurity/trivy-action@master"
                  },
                  "startColumn": 7,
                  "startLine": 113
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "7c61ea792634d95d708b3dc215c0e86d1f1680f1e6afe0687dcab940b543ee15c22c91edcfa9ac9b22bd987b5829bf76644b15464a4b6a2b7c22b6113827377e_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 39,
                  "endLine": 128,
                  "snippet": {
                    "text": "      uses: snyk/actions/python@master"
                  },
                  "startColumn": 7,
                  "startLine": 128
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "b14d6aa91dad4506c8875a5118b12bd5b65b1de05b6726194c1295c2ffc5c363c56d6ec65cee326fe97af73e10c699101430df713c3f4c53c8aa027592f8c10d_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 58,
                  "endLine": 135,
                  "snippet": {
                    "text": "      uses: dependency-check/Dependency-Check_Action@main"
                  },
                  "startColumn": 7,
                  "startLine": 135
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "9a903bc11aa9b0c280f35f5dc09aad94f124422ad66ec6f2434591f0c41275a2c45b62dc6a328c47a5813ee184d6e815db83faec1f5e59056761d263954a5218_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 44,
                  "endLine": 151,
                  "snippet": {
                    "text": "      uses: trufflesecurity/trufflehog@main"
                  },
                  "startColumn": 7,
                  "startLine": 151
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "b4acda837a59bc32af46e101ec56b6315beefc19fdfdf3112298d52d93c5eff1184d24569766cf3119d27cc8ef8224d7382a5b73961c012ca13b149a25ca8ecd_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 266,
                  "snippet": {
                    "text": "      uses: codecov/codecov-action@v3"
                  },
                  "startColumn": 7,
                  "startLine": 266
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "1f131c9b316939eec5035eb10097002f306b25f78dd091676fcac78d92afb43fcdbd205db32c20250d3e990d81a839b0b0991e4b8ed7732ff39100ba887f6b8b_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 295,
                  "snippet": {
                    "text": "      uses: dorny/test-reporter@v1"
                  },
                  "startColumn": 7,
                  "startLine": 295
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "9fbe265bd3be20046a181c507264072b949289ba4ed9dd643dc3f71f257cfb5046d45ed2e7a60af6183c8b37e2c2314a9298d35c525b704d1da39b3020dfcc05_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 321,
                  "snippet": {
                    "text": "      uses: docker/setup-buildx-action@v2"
                  },
                  "startColumn": 7,
                  "startLine": 321
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "5c7a71d19fb782b4c52fa249c658b7ab8492a5cb7bca28def5fe0313cbf9ef93473c2b612f1d53727df6c1a12b1e426f520b14007cd4d4c501d5cddf2d45b216_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 324,
                  "snippet": {
                    "text": "      uses: docker/login-action@v2"
                  },
                  "startColumn": 7,
                  "startLine": 324
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "d6276be90921e0ade2e505a37b1f5de0bd4e7053fa8cd9a8f76c25fbb9c8085148886a7e429940198ef41e387aef5e04cc44acfb6d8393e5ccb95a0d6af5259b_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 332,
                  "snippet": {
                    "text": "      uses: docker/metadata-action@v4"
                  },
                  "startColumn": 7,
                  "startLine": 332
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "3b12a55de00e775130af8513c248bc00fdb34308d5a75892099e8be2c50e5aac04456bf5c1678bff8ebd8ca7cdd1a595fdee4956fad8167618bcf4d4ad07a0c2_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 343,
                  "snippet": {
                    "text": "      uses: docker/build-push-action@v4"
                  },
                  "startColumn": 7,
                  "startLine": 343
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "3b12a55de00e775130af8513c248bc00fdb34308d5a75892099e8be2c50e5aac04456bf5c1678bff8ebd8ca7cdd1a595fdee4956fad8167618bcf4d4ad07a0c2_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 357,
                  "snippet": {
                    "text": "      uses: docker/build-push-action@v4"
                  },
                  "startColumn": 7,
                  "startLine": 357
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "3b12a55de00e775130af8513c248bc00fdb34308d5a75892099e8be2c50e5aac04456bf5c1678bff8ebd8ca7cdd1a595fdee4956fad8167618bcf4d4ad07a0c2_2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 368,
                  "snippet": {
                    "text": "      uses: docker/build-push-action@v4"
                  },
                  "startColumn": 7,
                  "startLine": 368
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "261dbbb729842cf01d829165518a0b773ad03f7dd3e7a0c18111ae227365c126f9727c698e88abeb60cfc415c8d3cc2197ca8671167024609ba17ff55cd7c36b_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 45,
                  "endLine": 379,
                  "snippet": {
                    "text": "      uses: aquasecurity/trivy-action@master"
                  },
                  "startColumn": 7,
                  "startLine": 379
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "9e96a281c0a96ebfdc6151c4c03be78f2df948744f7c97825151c7bd0206a466d0fadfea5c8cebaa6256dc2e6ed961311044aa03c12da3c75c19746c17fabe74_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 404,
                  "snippet": {
                    "text": "      uses: azure/setup-kubectl@v3"
                  },
                  "startColumn": 7,
                  "startLine": 404
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "a68c8c335ef8603f39ead87bbfb233a5ac29192ecb19b6c6179c74783e6146eae864a3bf5443aa8f15a19f9766c5fd35a769dc560623d4ab577ed328f0ce9088_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 409,
                  "snippet": {
                    "text": "      uses: aws-actions/configure-aws-credentials@v2"
                  },
                  "startColumn": 7,
                  "startLine": 409
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "a68c8c335ef8603f39ead87bbfb233a5ac29192ecb19b6c6179c74783e6146eae864a3bf5443aa8f15a19f9766c5fd35a769dc560623d4ab577ed328f0ce9088_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 466,
                  "snippet": {
                    "text": "      uses: aws-actions/configure-aws-credentials@v2"
                  },
                  "startColumn": 7,
                  "startLine": 466
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "831d883a7cab8fda338e19383b7b4ba6dd4e26c2e8d5e9f4941b9fe647cdbe6d9fd1c69923d4e3c1272aefc5e563e8cec78fa450dda31eb48913eef6215cd21b_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/comprehensive-pipeline.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 506,
                  "snippet": {
                    "text": "      uses: 8398a7/action-slack@v3"
                  },
                  "startColumn": 7,
                  "startLine": 506
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "1c3d23e237031844562797cad849aef319f89ec8ce0348ebb39113d042d0c3228e75c713cfe1181a8990a63f1531c2d1acf0c2602a3459a297d827d3bb94bcf8_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/quality-assurance.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 38,
                  "endLine": 141,
                  "snippet": {
                    "text": "      uses: codecov/codecov-action@v3"
                  },
                  "startColumn": 7,
                  "startLine": 141
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "0aad7f0bfb77e35b869022e00b848a2e4466138aad2f9ab88fd8ac40d8ad4945fa5112ce0840335737deb19a5a9d2fac9bf2e6f66ec687376412088d990bf24b_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/secrets-detection.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 23,
                  "snippet": {
                    "text": "        uses: trufflesecurity/trufflehog@main"
                  },
                  "startColumn": 9,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "dc3e13ed73fa294b08b1fab62f2869ca3cc3f4382011ad398725d9bfba0d0115f64bd7059e13b83cb8653829849d40e29744cecb7d68d1d43a14d1f600053fd0_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/secrets-detection.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 47,
                  "snippet": {
                    "text": "        uses: gitleaks/gitleaks-action@v2"
                  },
                  "startColumn": 9,
                  "startLine": 47
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "85a28ff26160952643f355d70d49f066cd699eb9bd9801d427b5a43691f81695fa4b1734f3e2c72f719385b9b1e931e9e426f357425f5ee3d46efd2d95d79a19_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "argocd/environment-configs/production.yaml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 20,
                  "endLine": 210,
                  "snippet": {
                    "text": "    resources: [\"*\"]"
                  },
                  "startColumn": 17,
                  "startLine": 210
                }
              }
            }
          ],
          "message": {
            "text": "Semgrep detected a Kubernetes core API ClusterRole with excessive permissions. Attaching excessive permissions to a ClusterRole associated with the core namespace allows the V1 API to perform arbitrary actions on arbitrary resources attached to the cluster. Prefer explicit allowlists of verbs/resources when configuring the core API namespace. "
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.kubernetes.security.legacy-api-clusterrole-excessive-permissions.legacy-api-clusterrole-excessive-permissions"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "85a28ff26160952643f355d70d49f066cd699eb9bd9801d427b5a43691f81695fa4b1734f3e2c72f719385b9b1e931e9e426f357425f5ee3d46efd2d95d79a19_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "argocd/environment-configs/production.yaml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 16,
                  "endLine": 211,
                  "snippet": {
                    "text": "    verbs: [\"*\"]"
                  },
                  "startColumn": 13,
                  "startLine": 211
                }
              }
            }
          ],
          "message": {
            "text": "Semgrep detected a Kubernetes core API ClusterRole with excessive permissions. Attaching excessive permissions to a ClusterRole associated with the core namespace allows the V1 API to perform arbitrary actions on arbitrary resources attached to the cluster. Prefer explicit allowlists of verbs/resources when configuring the core API namespace. "
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.kubernetes.security.legacy-api-clusterrole-excessive-permissions.legacy-api-clusterrole-excessive-permissions"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "d60859941fefecabba9d2ebd5ccecff4d90709cb4eb39b1701f8f2c05d1b0571116dbff9f0f08db0d998c58ac5b7fe60728f8084e347310b11372f31ab8bf49c_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "argocd/workflows/ci-cd-integration.yaml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 3,
                  "endLine": 137,
                  "snippet": {
                    "text": "          - |\n            echo \"🏗️ Building and Testing Application...\"\n            \n            # Start Docker daemon\n            dockerd-entrypoint.sh \u0026\n            sleep 10\n            \n            # Build Docker images\n            echo \"Building Docker images...\"\n            docker build -t ai-teddy-bear/child-service:{{workflow.parameters.version}} -f child-service/Dockerfile .\n            docker build -t ai-teddy-bear/ai-service:{{workflow.parameters.version}} -f ai-service/Dockerfile .\n            docker build -t ai-teddy-bear/graphql-federation:{{workflow.parameters.version}} -f graphql-federation/Dockerfile .\n            \n            # Run unit tests\n            echo \"Running unit tests...\"\n            docker run --rm ai-teddy-bear/child-service:{{workflow.parameters.version}} pytest tests/unit/\n            \n            # Push to registry\n            echo \"Pushing images to registry...\"\n            docker push ai-teddy-bear/child-service:{{workflow.parameters.version}}\n            docker push ai-teddy-bear/ai-service:{{workflow.parameters.version}}\n            docker push ai-teddy-bear/graphql-federation:{{workflow.parameters.version}}\n            \n            echo \"✅ Build and test completed!\""
                  },
                  "startColumn": 11,
                  "startLine": 113
                }
              }
            }
          ],
          "message": {
            "text": "Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "4433ab2006819ce4a1bcf3c72dbd4cfffed11367c314bee2c1186c2bb7bf01bfa21be7b18b8ad0828fb42266456a24b2b10d727e45243fa241f725330c7fdaa0_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "argocd/workflows/ci-cd-integration.yaml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 3,
                  "endLine": 171,
                  "snippet": {
                    "text": "          - |\n            echo \"🚀 Deploying to {{inputs.parameters.environment}}...\"\n            \n            # Login to ArgoCD\n            argocd login argocd-server:443 --username admin --password $ARGOCD_PASSWORD --insecure\n            \n            # Update application with new image tags\n            argocd app set ai-teddy-bear-{{inputs.parameters.environment}} \\\n              --parameter image.tag={{workflow.parameters.version}} \\\n              --parameter global.environment={{inputs.parameters.environment}}\n            \n            # Set sync policy\n            if [ \"{{inputs.parameters.sync-policy}}\" = \"automated\" ]; then\n              argocd app set ai-teddy-bear-{{inputs.parameters.environment}} --sync-policy automated\n              argocd app sync ai-teddy-bear-{{inputs.parameters.environment}}\n            else\n              argocd app set ai-teddy-bear-{{inputs.parameters.environment}} --sync-policy manual\n              echo \"Manual sync required for {{inputs.parameters.environment}}\"\n            fi\n            \n            # Wait for sync completion\n            argocd app wait ai-teddy-bear-{{inputs.parameters.environment}} --timeout 600\n            \n            echo \"✅ Deployment to {{inputs.parameters.environment}} completed!\""
                  },
                  "startColumn": 11,
                  "startLine": 147
                }
              }
            }
          ],
          "message": {
            "text": "Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "37ebb8e34e2351811347f8ddd0cb827fc948549c239a6b56d4ead9fe8600e0f2cfceeb186b7eaf5a1d1821f04b8c041e1ecae09c216fbba3b77b3978c643f070_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "argocd/workflows/ci-cd-integration.yaml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 3,
                  "endLine": 283,
                  "snippet": {
                    "text": "          - |\n            echo \"🔍 Validating rollback target...\"\n            \n            # Check if target revision exists\n            argocd app history {{inputs.parameters.application}} | grep {{inputs.parameters.target-revision}} || exit 1\n            \n            echo \"✅ Target revision is valid\""
                  },
                  "startColumn": 11,
                  "startLine": 276
                }
              }
            }
          ],
          "message": {
            "text": "Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "ccdf0f1d0a89078f8df93873f66937f931cc3a6144c15e8a0d5d20a43145b49d19d1829a7d6d4e9b84dff48699385badc1b19622cad2e32d1798c6f301737ea1_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "argocd/workflows/ci-cd-integration.yaml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 3,
                  "endLine": 303,
                  "snippet": {
                    "text": "          - |\n            echo \"⏪ Performing rollback...\"\n            \n            # Perform rollback\n            argocd app rollback {{inputs.parameters.application}} {{inputs.parameters.target-revision}}\n            \n            # Wait for rollback completion\n            argocd app wait {{inputs.parameters.application}} --timeout 300\n            \n            echo \"✅ Rollback completed\""
                  },
                  "startColumn": 11,
                  "startLine": 293
                }
              }
            }
          ],
          "message": {
            "text": "Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "7fcaed3acccf2fa9b75ef2ea60defaa56d2c630bc287c2eb6f1e313d8400be1167160ab17c41484876259acb3cf91bd0808d3ff9ecaf7ad4159825d8aa740f52_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "argocd/workflows/ci-cd-integration.yaml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 329,
                  "snippet": {
                    "text": "          - |\n            echo \"✅ Verifying rollback...\"\n            \n            # Wait for services to stabilize\n            sleep 30\n            \n            # Verify health endpoints\n            if [ \"{{inputs.parameters.environment}}\" = \"production\" ]; then\n              BASE_URL=\"https://api.teddy-bear.ai\"\n            else\n              BASE_URL=\"https://{{inputs.parameters.environment}}-api.teddy-bear.ai\"\n            fi\n            \n            curl -f $BASE_URL/health || exit 1\n            curl -f $BASE_URL/graphql || exit 1\n            \n            echo \"✅ Rollback verification successful\""
                  },
                  "startColumn": 11,
                  "startLine": 313
                }
              }
            }
          ],
          "message": {
            "text": "Using input or workflow parameters in here-scripts can lead to command injection or code injection. Convert the parameters to env variables instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.argo.security.argo-workflow-parameter-command-injection.argo-workflow-parameter-command-injection"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "74844742b374b60e4a179af8758f6b5ce2e13d09a184a86bcff2462e998f460a0ab8f5c98a9450741733e2311ac16fac2789431c3aebab8b57e254925ac4fcb3_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/actions/ai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 381,
                  "snippet": {
                    "text": "            \"http://ai-service:8000/chat\","
                  },
                  "startColumn": 13,
                  "startLine": 381
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "3315a2a76a7285c33947410f61e03e468e91d9b0f6bd6563c17c6c582d08bcd162e39ce9bf06612c05f3126cf42c711d9e00ce61e7b0bf970ecf757fa9b4c725_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/actions/ai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 50,
                  "endLine": 395,
                  "snippet": {
                    "text": "            \"http://ai-service:8000/models/reset\","
                  },
                  "startColumn": 13,
                  "startLine": 395
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "74844742b374b60e4a179af8758f6b5ce2e13d09a184a86bcff2462e998f460a0ab8f5c98a9450741733e2311ac16fac2789431c3aebab8b57e254925ac4fcb3_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/actions/ai.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 409,
                  "snippet": {
                    "text": "                \"http://ai-service:8000/chat\","
                  },
                  "startColumn": 17,
                  "startLine": 409
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "7bffd65f9a84604ead2bd01b5c18ff68e9c2ea1932eb805c1fdd18056534bdab26c73a74b7e7a6f2a86d7e5f4c10f8ff317083e3d36122ea9925a9c165ff2b59_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/actions/safety.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 298,
                  "snippet": {
                    "text": "            \"http://safety-service:8000/health\", timeout=5)"
                  },
                  "startColumn": 13,
                  "startLine": 298
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "7b954e7ee1a7e7a08acd6a70eecab3cc628967578f4500baa3d5829af9ea09bbb48ec2d2e499c81180c58b62ce47b9a3c1a9d75f195368461c44fbd7394f35e4_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/actions/safety.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 61,
                  "endLine": 302,
                  "snippet": {
                    "text": "                \"http://safety-service:8000/fallback/status\", timeout=5"
                  },
                  "startColumn": 17,
                  "startLine": 302
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "cffe3a68e54e54c4525657186e9edd4de77ed5bf8bf4d6f3b780d20b23cf66b22ff3433c355c11aef865dd2db91072bb2aa0d626b70eb5de2e89eedcac2426f9_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/actions/safety.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 306,
                  "snippet": {
                    "text": "                \"http://safety-service:8000/moderate\","
                  },
                  "startColumn": 17,
                  "startLine": 306
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "001d58e47b422c5035539c230a467c362aeda4e8f4548d5ae96735a7e2538f352cb65bc4d2a2f58640d46ca608aa1bad506bf81bfce82d6d54a60e42659a27da_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/infrastructure/chaos_injector.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 121,
                  "snippet": {
                    "text": "                        f\"http://{target}:8000/generate\","
                  },
                  "startColumn": 25,
                  "startLine": 121
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "8d0e56f97bcb8ee833089c80e7a57a3d82d1caac1f5b5991035130fb3810c5c80109f6f798296453befee1b463369799553d4d0d00bea0b24a1d551e2732ee69_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/infrastructure/chaos_injector.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 145,
                  "snippet": {
                    "text": "                        f\"http://{target}:8000/moderate\","
                  },
                  "startColumn": 25,
                  "startLine": 145
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "cc0230b52123512ed2e9c6a52b60e52d4762812b9b60a5e6545e58cdbd4e0b1b662a00c320c9826d5ba5c8fcc053cb290fc74a6794e9abdc122b3a4b571a7655_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/infrastructure/chaos_monitor.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 56,
                  "snippet": {
                    "text": "                    f\"http://{target}:8000/metrics\", timeout=5)"
                  },
                  "startColumn": 21,
                  "startLine": 56
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "dc0252312c7565ae4bdd103f8a3f512b3b53537159dc877e6693910f8de30401f73399b76aa7337786bac80dd64f361f4c5b3590494ec16a490094fb21b89d6a_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/infrastructure/chaos_monitor.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 79,
                  "endLine": 88,
                  "snippet": {
                    "text": "                        f\"http://{target}:8000{target_config.health_endpoint}\","
                  },
                  "startColumn": 25,
                  "startLine": 88
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "a73fb5cbcd108f7e1069ffbb6f5fe851b2e5194bbc7e5b56a07e2c562b61e7d340e1a7f598a772296d199099a4965c32a56c63abf41e1a795ca59fb7c3d2b51e_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/infrastructure/chaos_orchestrator.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 276,
                  "snippet": {
                    "text": "                    f\"http://{service}:8000/health\", timeout=5)"
                  },
                  "startColumn": 21,
                  "startLine": 276
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "b767d2bbb84a2d749e76483f179bcfe99117b72284e0be28e5a7195fca4913ca54042c821e362d0d964fe8c667f6a66a2a7aba750df51bee03632197bd8da075_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/infrastructure/chaos_orchestrator.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 67,
                  "endLine": 292,
                  "snippet": {
                    "text": "            response = requests.get(f\"http://{target}:8000/health\", timeout=5)"
                  },
                  "startColumn": 37,
                  "startLine": 292
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "a73fb5cbcd108f7e1069ffbb6f5fe851b2e5194bbc7e5b56a07e2c562b61e7d340e1a7f598a772296d199099a4965c32a56c63abf41e1a795ca59fb7c3d2b51e_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/infrastructure/chaos_orchestrator.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 52,
                  "endLine": 307,
                  "snippet": {
                    "text": "                    f\"http://{service}:8000/health\", timeout=10)"
                  },
                  "startColumn": 21,
                  "startLine": 307
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "f1ff50133fb8bedbeaa0d0f89e71cb02726ad8f598aa47cecea5ecbacf7a73c5f9f4b82a83548d306adaa96e949da6d1f12db1579b018b22e9fdd99ea23cf1ca_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "chaos/monitoring/chaos_metrics.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 146,
                  "snippet": {
                    "text": "                \"http://safety-service:8000/moderate\","
                  },
                  "startColumn": 17,
                  "startLine": 146
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "aa74c91f6447dc4fae5647b36d5c4ff372c5ab304e2c1e629b93134c61d4f09cfd3d9b8d415e091ac7174f0d56bd4321eb61933c44b562515dc2a5e3ba2cdfb2_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "monitoring/emergency/api/emergency_response.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 6,
                  "endLine": 125,
                  "snippet": {
                    "text": "    allow_origins=(\n        [\"*\"] if ENVIRONMENT == \"development\" else [\"https://teddysecurity.ai\"]\n    ),"
                  },
                  "startColumn": 19,
                  "startLine": 123
                }
              }
            }
          ],
          "message": {
            "text": "CORS policy allows any origin (using wildcard '*'). This is insecure and should be avoided."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.fastapi.security.wildcard-cors.wildcard-cors"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "579b1829b1601ea00deefb08fd74e7ab61a284a1b2d250f10c6813e7c3cd1ca19e30cbe92cdecc501d564e83da9ff3e50d5207b65042aa3a129243c61116a33e_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "observability/architecture/infrastructure/core-services/grafana.yaml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 13,
                  "endLine": 40,
                  "snippet": {
                    "text": "      - name: grafana"
                  },
                  "startColumn": 9,
                  "startLine": 40
                }
              }
            }
          ],
          "message": {
            "text": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "2fd84aee4b1bcfac8703d354a6a0c4c882a3301df0ab92d552ba38674d36af26376f9bb60804c81eade1a79186543794d3af8b7f500f938dc5bf0212afba1077_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "observability/architecture/infrastructure/core-services/prometheus.yaml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 13,
                  "endLine": 42,
                  "snippet": {
                    "text": "      - name: prometheus"
                  },
                  "startColumn": 9,
                  "startLine": 42
                }
              }
            }
          ],
          "message": {
            "text": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "12ddffaad64a4850a42d8423d65e02272b7c42709d90ce5d371710dec059ca08178727b353b81de263c712452c1b4ca5bfbe019c316bd3a5d092c3c4ee8c83ba_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "observability/architecture/orchestration/monitoring-orchestrator.yaml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 13,
                  "endLine": 167,
                  "snippet": {
                    "text": "      - name: orchestrator"
                  },
                  "startColumn": 9,
                  "startLine": 167
                }
              }
            }
          ],
          "message": {
            "text": "In Kubernetes, each pod runs in its own isolated environment with its own set of security policies. However, certain container images may contain `setuid` or `setgid` binaries that could allow an attacker to perform privilege escalation and gain access to sensitive resources. To mitigate this risk, it's recommended to add a `securityContext` to the container in the pod, with the parameter `allowPrivilegeEscalation` set to `false`. This will prevent the container from running any privileged processes and limit the impact of any potential attacks. By adding a `securityContext` to your Kubernetes pod, you can help to ensure that your containerized applications are more secure and less vulnerable to privilege escalation attacks."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "89ca38565c70428b5b353a5b849634cc70b203f8eaec2e1771a1ff1cbd3de8cc4dacc3bf2cf861dd88e7affbec99e8829275dacb835aec8dc2d35e2976bc29a2_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "observability/architecture/orchestration/monitoring-orchestrator.yaml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 18,
                  "endLine": 244,
                  "snippet": {
                    "text": "  resources: [\"*\"]"
                  },
                  "startColumn": 15,
                  "startLine": 244
                }
              }
            }
          ],
          "message": {
            "text": "Semgrep detected a Kubernetes core API ClusterRole with excessive permissions. Attaching excessive permissions to a ClusterRole associated with the core namespace allows the V1 API to perform arbitrary actions on arbitrary resources attached to the cluster. Prefer explicit allowlists of verbs/resources when configuring the core API namespace. "
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.kubernetes.security.legacy-api-clusterrole-excessive-permissions.legacy-api-clusterrole-excessive-permissions"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "89ca38565c70428b5b353a5b849634cc70b203f8eaec2e1771a1ff1cbd3de8cc4dacc3bf2cf861dd88e7affbec99e8829275dacb835aec8dc2d35e2976bc29a2_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "observability/architecture/orchestration/monitoring-orchestrator.yaml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 14,
                  "endLine": 245,
                  "snippet": {
                    "text": "  verbs: [\"*\"]"
                  },
                  "startColumn": 11,
                  "startLine": 245
                }
              }
            }
          ],
          "message": {
            "text": "Semgrep detected a Kubernetes core API ClusterRole with excessive permissions. Attaching excessive permissions to a ClusterRole associated with the core namespace allows the V1 API to perform arbitrary actions on arbitrary resources attached to the cluster. Prefer explicit allowlists of verbs/resources when configuring the core API namespace. "
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.kubernetes.security.legacy-api-clusterrole-excessive-permissions.legacy-api-clusterrole-excessive-permissions"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "9c238799281faa10057cac73fd5c07b3817403d37096e9be489547b875b500bbe90a688b53c8486f5c093218d3782145dc42b0daa9a9d40c85f5c622484d4d71_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "observability/grafana-dashboards.json",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 261,
                  "snippet": {
                    "text": "          \"title\": \"👨‍👩‍👧‍👦 Parental Control Events\","
                  },
                  "startColumn": 25,
                  "startLine": 261
                }
              }
            }
          ],
          "message": {
            "text": "It's possible to embed malicious secret instructions to AI rules files using unicode characters that are invisible to human reviewers.This can lead to future AI-generated code that has security vulnerabilities or other weaknesses baked in which may not be noticed."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.codacy.generic.security.detect-invisible-unicode"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "9c238799281faa10057cac73fd5c07b3817403d37096e9be489547b875b500bbe90a688b53c8486f5c093218d3782145dc42b0daa9a9d40c85f5c622484d4d71_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "observability/grafana-dashboards.json",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 35,
                  "endLine": 261,
                  "snippet": {
                    "text": "          \"title\": \"👨‍👩‍👧‍👦 Parental Control Events\","
                  },
                  "startColumn": 32,
                  "startLine": 261
                }
              }
            }
          ],
          "message": {
            "text": "It's possible to embed malicious secret instructions to AI rules files using unicode characters that are invisible to human reviewers.This can lead to future AI-generated code that has security vulnerabilities or other weaknesses baked in which may not be noticed."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.codacy.generic.security.detect-invisible-unicode"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "9c238799281faa10057cac73fd5c07b3817403d37096e9be489547b875b500bbe90a688b53c8486f5c093218d3782145dc42b0daa9a9d40c85f5c622484d4d71_2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "observability/grafana-dashboards.json",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 261,
                  "snippet": {
                    "text": "          \"title\": \"👨‍👩‍👧‍👦 Parental Control Events\","
                  },
                  "startColumn": 39,
                  "startLine": 261
                }
              }
            }
          ],
          "message": {
            "text": "It's possible to embed malicious secret instructions to AI rules files using unicode characters that are invisible to human reviewers.This can lead to future AI-generated code that has security vulnerabilities or other weaknesses baked in which may not be noticed."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.codacy.generic.security.detect-invisible-unicode"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "2d64b18691ca41cd6139a002e4a1259f22bbefe54734ffba275f02515deba446b58ec222936f59d37c74e9b35cfceca44caa1f8d5279b79fb0ea6cff2b780a97_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/.github/workflows/ci.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 37,
                  "endLine": 34,
                  "snippet": {
                    "text": "        uses: snok/install-poetry@v1"
                  },
                  "startColumn": 9,
                  "startLine": 34
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "2d64b18691ca41cd6139a002e4a1259f22bbefe54734ffba275f02515deba446b58ec222936f59d37c74e9b35cfceca44caa1f8d5279b79fb0ea6cff2b780a97_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/.github/workflows/ci.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 37,
                  "endLine": 94,
                  "snippet": {
                    "text": "        uses: snok/install-poetry@v1"
                  },
                  "startColumn": 9,
                  "startLine": 94
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "560353e0ce418fcbb5e2a7930617b8b2d716756471d33ca2a42ebc44ccc40d5e63d461dfe708512e58ed66b8291081d9f6441023982b1c8394b1a5eee58472ab_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/.github/workflows/ci.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 130,
                  "snippet": {
                    "text": "        uses: codecov/codecov-action@v4"
                  },
                  "startColumn": 9,
                  "startLine": 130
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "ab9cf2439c6c33b8a846318c85a473e9426dae4d02319fd83b1133d895e057353c9485ffb0181a61ad921e3de2edf0f748e2625ca85df386073e1a75a26f459c_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/.github/workflows/ci.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 144,
                  "snippet": {
                    "text": "        uses: aquasecurity/trivy-action@master"
                  },
                  "startColumn": 9,
                  "startLine": 144
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "77d3a9e1b895763c95f8b7fd7bd1e6e7309d9dfc3636201178d2b47b783e899663e11fba33568f767348b4e4e95cbee6529316b2844d233942faa45a47397ccb_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/.github/workflows/ci.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 45,
                  "endLine": 157,
                  "snippet": {
                    "text": "        uses: gaurav-nelson/bandit-action@v1"
                  },
                  "startColumn": 9,
                  "startLine": 157
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "86f677118bd657485ab5e0f097ed1d016f120519199d70ca212c2d1b4ceb8897433377bc7713bfde613aa2ed0704501e32cdc4ff072abdcbf47c27069d2dbbfc_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/.github/workflows/ci.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 44,
                  "endLine": 172,
                  "snippet": {
                    "text": "        uses: docker/setup-buildx-action@v3"
                  },
                  "startColumn": 9,
                  "startLine": 172
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "d5566d563a5152cb93fe7fce5614fb2a60577479fe3c1b5d9c9b549e6295e9c5e0eed558183f15cf0c8ccbd00602a9d320cee4342103f2a4a211b6b063b9fe42_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/.github/workflows/ci.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 37,
                  "endLine": 175,
                  "snippet": {
                    "text": "        uses: docker/login-action@v3"
                  },
                  "startColumn": 9,
                  "startLine": 175
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "ff957576ff581f104e45a1b79c97c8e68b290dfc0934fc93367f6b797ce4a733c775209799571c8c1ae93cf50072d20023e0652b315556a1f7177a091c2ce302_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/.github/workflows/ci.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 40,
                  "endLine": 182,
                  "snippet": {
                    "text": "        uses: docker/metadata-action@v5"
                  },
                  "startColumn": 9,
                  "startLine": 182
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "19fb310f3b5d05d3b03fc487dc7d83b103ff84d29ce60c79680b0f301a6fd18fcf0319df96a46603d0ff8b40cc179a7b3681a5157468e7debb5bffa354bdf0bb_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/.github/workflows/ci.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 42,
                  "endLine": 193,
                  "snippet": {
                    "text": "        uses: docker/build-push-action@v5"
                  },
                  "startColumn": 9,
                  "startLine": 193
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "3436cc1206430f19ecfecaa751df7901cc8641faeab1c3c43267acc1c98c1ca41e2f5df89058189522377f362d57e522776fe003a0f223a266144108a9f4ca87_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/.github/workflows/ci.yml",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 37,
                  "endLine": 229,
                  "snippet": {
                    "text": "        uses: 8398a7/action-slack@v3"
                  },
                  "startColumn": 9,
                  "startLine": 229
                }
              }
            }
          ],
          "message": {
            "text": "An action sourced from a third-party repository on GitHub is not pinned to a full length commit SHA. Pinning an action to a full length commit SHA is currently the only way to use an action as an immutable release. Pinning to a particular SHA helps mitigate the risk of a bad actor adding a backdoor to the action's repository, as they would need to generate a SHA-1 collision for a valid Git object payload."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.yaml.github-actions.security.third-party-action-not-pinned-to-commit-sha.third-party-action-not-pinned-to-commit-sha"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "09ebac0372d329d600cd1c84806c2addc9fd6da182cef89ff401494b8dc76f163ced8bbe4d55573c771eb94115d617969f34876fbb0b9a59958c5abf5979b1b3_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/issue_creator.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 79,
                  "snippet": {
                    "text": "            hash_object = hashlib.md5(content.encode())"
                  },
                  "startColumn": 27,
                  "startLine": 79
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "3724d08428cd621bfb1bc5f0adef4cfa158355825d83ec422fd4048503a4cb1f406b65b957fbf1f192f8262b529b5c8c9c7f4058ad6c4977770b49a5d01c74b8_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation/cache_manager.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 35,
                  "snippet": {
                    "text": "        return hashlib.md5(key_string.encode()).hexdigest()"
                  },
                  "startColumn": 16,
                  "startLine": 35
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "96854e59ddf60685dc5bfc6cf9accae8f73dff36fe75ad2c811b06424b35d291c8cc13c175a301a6ca583e82be0c2355004cfc328b5e2a2e1ba314e69a797338_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/moderation_cache_manager.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 59,
                  "snippet": {
                    "text": "        return hashlib.md5(key_data.encode()).hexdigest()"
                  },
                  "startColumn": 16,
                  "startLine": 59
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "a0c616319476363f484d606c76a7c7d88be92ed63da246cc4446bba3f80ba2080d2a7f639f00a61d59fc166e508a14537ff39752facb1fc9a4b53ae12ba09d71_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/core/simple_cache_service.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 137,
                  "snippet": {
                    "text": "        return hashlib.md5(key_data.encode()).hexdigest()"
                  },
                  "startColumn": 16,
                  "startLine": 137
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "48b6d0345e6af82140ab0d5bf7db8c783b0331a4e44de5c465cb9fd95e02b5423ae01eb603b6a82d8821741ac73ac42a40ae1b0402deebc78c5d8630f5583c71_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/application/services/parent/unified_monitoring_service.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 45,
                  "endLine": 104,
                  "snippet": {
                    "text": "        return hashlib.md5(content.encode()).hexdigest()[:16]"
                  },
                  "startColumn": 16,
                  "startLine": 104
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "15632d4cc535e7a16e1c55e0ef315c5a3c42b728e6eb2d5ead1caa9f615840cd65382bddbd259c18cf396847458cafd74d1fb2b4ed11f235fe57b3cdb1e48b1b_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/core/domain/entities/audio_stream.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 496,
                  "snippet": {
                    "text": "        return hashlib.md5(key_string.encode()).hexdigest()"
                  },
                  "startColumn": 16,
                  "startLine": 496
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "604f146b354bf41184ad796584f3bd94a36a6ecf8f4ed27f7fe2cc5b34831922036191e8a6bb497f5f773ba44f0187315db350ab793dbc529d926a1ddc943cab_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/audio_stream.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 496,
                  "snippet": {
                    "text": "        return hashlib.md5(key_string.encode()).hexdigest()"
                  },
                  "startColumn": 16,
                  "startLine": 496
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "6e377a600c90a257ed93f43318388e5a8e735d0bd33276e3c30cc46ce077b12b86c2379832f9e310c6eebf1b39ab520e37cab17372e09fafc86e76d76cf57302_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 250,
                  "snippet": {
                    "text": "            \"http://safety-service:8000/health\", timeout=10)"
                  },
                  "startColumn": 13,
                  "startLine": 250
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "f1ff9011cb59195716f569598063f4fbe4f7aca6535a259135298365904d086118620865e1cbbcf00ffc7a8b72c5c844676e279546b4d32c2dc68a1850541f00_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 257,
                  "snippet": {
                    "text": "                \"http://safety-service:8000/moderate\","
                  },
                  "startColumn": 17,
                  "startLine": 257
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "40d1a08aa646d45ce1d033b80a46b87b55a6c63a09ae518fff4f923bfde2c211e77542380fb2e632e453f7bb1518e25e12740e4473be0d34ca1787b4ddcfe9e6_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 56,
                  "endLine": 341,
                  "snippet": {
                    "text": "            \"http://child-service:8000/parental/health\","
                  },
                  "startColumn": 13,
                  "startLine": 341
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "8eac2887d52e35b415353bdecd4116552a4739ad46048c50415821450be2425c2ad5fc377bbca6024d024af1168b81d38ed767b075e18ebec1cd940838c63dd2_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 63,
                  "endLine": 347,
                  "snippet": {
                    "text": "                \"http://child-service:8000/conversation/start\","
                  },
                  "startColumn": 17,
                  "startLine": 347
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "32286c453910cc7b6b4260192950ed33dabb6353cefd90335ecf7f3afcb9e59c7c7c6daf37de0d09545392713b7976be96fd9eae3010fefaa6ffb1fd8e96fe78_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 47,
                  "endLine": 374,
                  "snippet": {
                    "text": "            \"http://api.teddy-bear.ai/v1/chat\","
                  },
                  "startColumn": 13,
                  "startLine": 374
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "be792fd075095dfc478ccc14077264442e515f2978de57280530e07a6a24b6fe71c938052b366c62284dbbab69ef2dbc2242c83792a0856fc5af25ea478b821e_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 435,
                  "snippet": {
                    "text": "                \"http://ai-service:8000/chat\","
                  },
                  "startColumn": 17,
                  "startLine": 435
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "92a994a6f018752c56e5aa72bd0c63fde38650c0fb03571acf26feb35b8d8840352806c41bebaa3ae8fcb4af74553e2e62a838f46e398d240a11d037a052e2e0_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 50,
                  "endLine": 491,
                  "snippet": {
                    "text": "                \"http://ai-service:8000/generate\","
                  },
                  "startColumn": 17,
                  "startLine": 491
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "537019ab0fd613c2c62b166787a9baf18fcb339680d5d057c7530dc17458216a3b7f18172a6e47c3a779376da46aec53c6d684c03406768933d9cacc0ddaf49e_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 62,
                  "endLine": 609,
                  "snippet": {
                    "text": "            \"http://child-service:8000/test/database-failure\","
                  },
                  "startColumn": 13,
                  "startLine": 609
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "f1ff9011cb59195716f569598063f4fbe4f7aca6535a259135298365904d086118620865e1cbbcf00ffc7a8b72c5c844676e279546b4d32c2dc68a1850541f00_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 54,
                  "endLine": 617,
                  "snippet": {
                    "text": "                \"http://safety-service:8000/moderate\","
                  },
                  "startColumn": 17,
                  "startLine": 617
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "f1ff9011cb59195716f569598063f4fbe4f7aca6535a259135298365904d086118620865e1cbbcf00ffc7a8b72c5c844676e279546b4d32c2dc68a1850541f00_2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 50,
                  "endLine": 647,
                  "snippet": {
                    "text": "            \"http://safety-service:8000/moderate\","
                  },
                  "startColumn": 13,
                  "startLine": 647
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "b13e81f0a5cbff3c3a19881f39d3a0f559699ba8e9a0b10254a21b61e24bcff4974a00d5bd81aa49b9ea1e550913f00725b0a6022091ce815cf369b6a85ccd67_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 46,
                  "endLine": 672,
                  "snippet": {
                    "text": "            \"http://ai-service:8000/validate\","
                  },
                  "startColumn": 13,
                  "startLine": 672
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "f1ff9011cb59195716f569598063f4fbe4f7aca6535a259135298365904d086118620865e1cbbcf00ffc7a8b72c5c844676e279546b4d32c2dc68a1850541f00_3"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 50,
                  "endLine": 696,
                  "snippet": {
                    "text": "            \"http://safety-service:8000/moderate\","
                  },
                  "startColumn": 13,
                  "startLine": 696
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "483ec208e10aa1f7b5cfc38f3a144a369eaa72a60a8ee42d338d5b973f89681857ac5c8ef1818b681af46c9015f269ecd0e047155743ff9a508f216f60e7c230_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 713,
                  "snippet": {
                    "text": "            \"http://safety-service:8000/fallback/status\", timeout=10"
                  },
                  "startColumn": 13,
                  "startLine": 713
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "7ae879df4959644db61e02b353bc16111f02bcfd464619a22d60a65a86c41dd4d398c42bb99cce6b534a1d19ace3ad24d69dc9805150b126f58cf35e39cc80c3_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 738,
                  "snippet": {
                    "text": "            \"http://safety-service:8000/restore\","
                  },
                  "startColumn": 13,
                  "startLine": 738
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "528732f157b20e601b90f05fe4a4623b43cf7c8b16a453e5df560184b1ff809f6c33183a01213f4f9be80a7c8a98d6db806b8e6aa86cc12f98d78d9db8360b6e_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 45,
                  "endLine": 746,
                  "snippet": {
                    "text": "            \"http://ai-service:8000/restore\","
                  },
                  "startColumn": 13,
                  "startLine": 746
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "f6af8b5a5a296dd81b15f7fe4c6aed8f7693e381c8d93f375e953718bcb878e27abcce2026b3746a58786fb25b8c01596a56a9c2ad1759f0836c542dfee8ca49_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 48,
                  "endLine": 754,
                  "snippet": {
                    "text": "            \"http://child-service:8000/restore\","
                  },
                  "startColumn": 13,
                  "startLine": 754
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "8a949ab598d0eea1c6993c049fab10a7c53794a0c4556da7fb76eaee9dccc42cf149f4336247ae1b258101b232e58a2a40d3db15d1fa33d4a8afde8f08d7b432_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 53,
                  "endLine": 787,
                  "snippet": {
                    "text": "            \"http://safety-service:8000/cache/clear\","
                  },
                  "startColumn": 13,
                  "startLine": 787
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "8f82f60d9c41c8bda494a46052b1528b16489a5e4da6987cd35ab3c469399f779332b12c0c8f4cb9de553644eb80bb02a1bbefd2507193279977eaa51ddea26b_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/domain/entities/child_safety_chaos.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 50,
                  "endLine": 813,
                  "snippet": {
                    "text": "            \"http://ai-service:8000/models/reset\","
                  },
                  "startColumn": 13,
                  "startLine": 813
                }
              }
            }
          ],
          "message": {
            "text": "Detected a request using 'http://'. This request will be unencrypted, and attackers could listen into traffic on the network and be able to obtain sensitive information. Use 'https://' instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-transport.requests.request-with-http.request-with-http"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "2f6b42878b2ebef4b361d7c8317fc38a17f312e485ac3c5b75e4940ff92df1982b2d6cb7a9461b540d64803959dff1584ee82bfb6706edf2491111c320ed29d2_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/api/high_performance_api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 65,
                  "endLine": 144,
                  "snippet": {
                    "text": "            allow_origins=self.config.get(\"cors_origins\", [\"*\"]),"
                  },
                  "startColumn": 27,
                  "startLine": 144
                }
              }
            }
          ],
          "message": {
            "text": "CORS policy allows any origin (using wildcard '*'). This is insecure and should be avoided."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.fastapi.security.wildcard-cors.wildcard-cors"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "329ef185d9c4b32d374d64079df1a0eed950eb3981d9b27f5eb4cc28a412625d243bbfca9ea58ba1748128c1522ee18fc1b709bb329b54bd02e55d484f2e9107_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/advanced_ai_orchestrator.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 62,
                  "endLine": 389,
                  "snippet": {
                    "text": "        return hashlib.md5(\"_\".join(key_components).encode()).hexdigest()"
                  },
                  "startColumn": 16,
                  "startLine": 389
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "7b8ef6e0cfb80a3331076046346c771d7966d101b57614ecde0bca34ac863c052899dddc282f8dd704f335418887be2c38de427595d29bab7d76691b22eb800a_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/external_services/audio_io.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 43,
                  "endLine": 147,
                  "snippet": {
                    "text": "            os.chmod(self.temp_dir, 0o755)"
                  },
                  "startColumn": 13,
                  "startLine": 147
                }
              }
            }
          ],
          "message": {
            "text": "These permissions `0o755` are widely permissive and grant access to more people than may be necessary. A good default is `0o644` which gives read and write access to yourself and read access to everyone else."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.audit.insecure-file-permissions.insecure-file-permissions"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "b2415e81f68c89e8e3f781226e45aca7abe28064dc9c61e1ca319f360bb0307224090e9b2aba7d0b281f73f0c07cf5938fe914b10922226091fe0ef7a70bee6a_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/graphql/dataloaders.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 49,
                  "endLine": 251,
                  "snippet": {
                    "text": "        key_hash = hashlib.md5(key_str.encode()).hexdigest()[:8]"
                  },
                  "startColumn": 20,
                  "startLine": 251
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "894babc54257fbc79560fde2f6601f0ba1abed58386754312c285ef2cd1b486e82168f843cfcb9ae8dd16517e83a911f770415ea6f7a84eccace5341234205ba_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/microservices/service_orchestrator.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 57,
                  "endLine": 455,
                  "snippet": {
                    "text": "        hash_value = int(hashlib.md5(client_ip.encode()).hexdigest(), 16)"
                  },
                  "startColumn": 26,
                  "startLine": 455
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "61a53e4d2f973a7f0d46f4f613d439c64868f8d799d21930d78be45845f31ee3d8e940e14ccb5d8e27d7126dfe6c276dcfbaeb489f7115eeb2facefbbac348d9_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/advanced_content_filter.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 50,
                  "endLine": 648,
                  "snippet": {
                    "text": "        return hashlib.md5(cache_string.encode()).hexdigest()"
                  },
                  "startColumn": 16,
                  "startLine": 648
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "b5ee4da343f6b2dab78e4140fd87901a7301840723b8286c941fda3ed411b20b65701d371838b0884f86bd1955646b8a543495a57e1f0f7557f5c722a6e393cd_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/emergency_response.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 55,
                  "endLine": 288,
                  "snippet": {
                    "text": "        hash_output = hashlib.md5(hash_input.encode()).hexdigest()[:8]"
                  },
                  "startColumn": 23,
                  "startLine": 288
                }
              }
            }
          ],
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.lang.security.insecure-hash-algorithms-md5.insecure-hash-algorithm-md5"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "29c8df38b69a648743a8b27d8a0ac8e0efa4d5a78cd50715683a5deab769549a07c446e7216b59cbf39f5ba258688ee06f1079d2eb89a2da245a736b7d369b28_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/enhanced_security.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 10,
                  "endLine": 157,
                  "snippet": {
                    "text": "        cipher = Cipher(\n            algorithms.AES(aes_key), modes.CBC(iv), backend=default_backend()\n        )"
                  },
                  "startColumn": 18,
                  "startLine": 155
                }
              }
            }
          ],
          "message": {
            "text": "An encryption mode of operation is being used without proper message authentication. This can potentially result in the encrypted content to be decrypted by an attacker. Consider instead use an AEAD mode of operation like GCM. "
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.cryptography.security.mode-without-authentication.crypto-mode-without-authentication"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "29c8df38b69a648743a8b27d8a0ac8e0efa4d5a78cd50715683a5deab769549a07c446e7216b59cbf39f5ba258688ee06f1079d2eb89a2da245a736b7d369b28_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/enhanced_security.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 10,
                  "endLine": 199,
                  "snippet": {
                    "text": "        cipher = Cipher(\n            algorithms.AES(aes_key), modes.CBC(iv), backend=default_backend()\n        )"
                  },
                  "startColumn": 18,
                  "startLine": 197
                }
              }
            }
          ],
          "message": {
            "text": "An encryption mode of operation is being used without proper message authentication. This can potentially result in the encrypted content to be decrypted by an attacker. Consider instead use an AEAD mode of operation like GCM. "
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.cryptography.security.mode-without-authentication.crypto-mode-without-authentication"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "38b4a12b1c0e178deb4ca331c4e4aef326ac42575437a4d1d8aa0362cafbc0acf4057bb86b240ebf7c02a201dcbe647cef310159853d5d58dea33e1d3211a58b_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/rate_limiter.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 26,
                  "endLine": 72,
                  "snippet": {
                    "text": "        return f\"ip:{ip}\""
                  },
                  "startColumn": 9,
                  "startLine": 72
                }
              }
            }
          ],
          "message": {
            "text": "Detected Flask route directly returning a formatted string. This is subject to cross-site scripting if user input can reach the string. Consider using the template engine instead and rendering pages with 'render_template()'."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.flask.security.audit.directly-returned-format-string.directly-returned-format-string"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "df2b0aa7bd103ccb9db4a175ef409ffc2b1f51012c0345fec132469c0427b1e795faa86ab2241d722954f4644304050ae317b997116048a2cfaebca77c19b105_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/infrastructure/security/security.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 33,
                  "endLine": 310,
                  "snippet": {
                    "text": "        return f\"ip:{client_ip}\""
                  },
                  "startColumn": 9,
                  "startLine": 310
                }
              }
            }
          ],
          "message": {
            "text": "Detected Flask route directly returning a formatted string. This is subject to cross-site scripting if user input can reach the string. Consider using the template engine instead and rendering pages with 'render_template()'."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.flask.security.audit.directly-returned-format-string.directly-returned-format-string"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "d2fb1c6f1d9c651569e75a6afc7a73cf44bcec73ceef475e1ebe699f02e0ebee79809e9f6cd32fcb3af0dd9d7604ac8c7a42ac8954d1b5fbddc9d486f1731ef6_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/graphql/app.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 28,
                  "endLine": 29,
                  "snippet": {
                    "text": "        allow_origins=[\"*\"],"
                  },
                  "startColumn": 23,
                  "startLine": 29
                }
              }
            }
          ],
          "message": {
            "text": "CORS policy allows any origin (using wildcard '*'). This is insecure and should be avoided."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.fastapi.security.wildcard-cors.wildcard-cors"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "6dd77eeb105af04399d815f4ba1f7642b406d8241903d7a20bb63d95a1d0dcdb0defd7c33b0df14009e19c681d208f52fa43e8511405eddf7af9c798880a287b_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/parental_dashboard.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 73,
                  "endLine": 18,
                  "snippet": {
                    "text": "templates = Environment(loader=FileSystemLoader(\"src/presentation/api\"))"
                  },
                  "startColumn": 13,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "Detected a Jinja2 environment without autoescaping. Jinja2 does not autoescape by default. This is dangerous if you are rendering to a browser because this allows for cross-site scripting (XSS) attacks. If you are in a web context, enable autoescaping by setting 'autoescape=True.' You may also consider using 'jinja2.select_autoescape()' to only enable automatic escaping for certain file extensions."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.jinja2.security.audit.missing-autoescape-disabled.missing-autoescape-disabled"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "db210f2203d17b5c7d29b03456440452db02cf99de283d1aaf77a85c9fa030eef565d4635e827c1ab6c3e885c60749fd956355c2bacd8d2f8523a6e24f79f3f4_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/presentation/api/rest/production_api.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 24,
                  "endLine": 163,
                  "snippet": {
                    "text": "    allow_origins=[\"*\"],  # Configure properly for production"
                  },
                  "startColumn": 19,
                  "startLine": 163
                }
              }
            }
          ],
          "message": {
            "text": "CORS policy allows any origin (using wildcard '*'). This is insecure and should be avoided."
          },
          "properties": {},
          "ruleId": "codacy.tools-configs.python.fastapi.security.wildcard-cors.wildcard-cors"
        }
      ],
      "tool": {
        "driver": {
          "name": "Semgrep OSS",
          "rules": null,
          "semanticVersion": "1.78.0"
        }
      }
    },
    {
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///mnt/c/Users/jaafa/Desktop/5555/ai-teddy/"
        }
      },
      "results": [
        {
          "level": "error",
          "locations": [
            {
              "message": {
                "text": "requirements.txt: aiohttp@3.9.2"
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "endColumn": 1,
                  "endLine": 10,
                  "startColumn": 1,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Package: aiohttp\nInstalled Version: 3.9.2\nVulnerability CVE-2024-30251\nSeverity: HIGH\nFixed Version: 3.9.4\nLink: [CVE-2024-30251](https://avd.aquasec.com/nvd/cve-2024-30251)"
          },
          "ruleId": "CVE-2024-30251",
          "ruleIndex": 0
        },
        {
          "level": "warning",
          "locations": [
            {
              "message": {
                "text": "requirements.txt: aiohttp@3.9.2"
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "endColumn": 1,
                  "endLine": 10,
                  "startColumn": 1,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Package: aiohttp\nInstalled Version: 3.9.2\nVulnerability CVE-2024-27306\nSeverity: MEDIUM\nFixed Version: 3.9.4\nLink: [CVE-2024-27306](https://avd.aquasec.com/nvd/cve-2024-27306)"
          },
          "ruleId": "CVE-2024-27306",
          "ruleIndex": 1
        },
        {
          "level": "warning",
          "locations": [
            {
              "message": {
                "text": "requirements.txt: aiohttp@3.9.2"
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "endColumn": 1,
                  "endLine": 10,
                  "startColumn": 1,
                  "startLine": 10
                }
              }
            }
          ],
          "message": {
            "text": "Package: aiohttp\nInstalled Version: 3.9.2\nVulnerability CVE-2024-52304\nSeverity: MEDIUM\nFixed Version: 3.10.11\nLink: [CVE-2024-52304](https://avd.aquasec.com/nvd/cve-2024-52304)"
          },
          "ruleId": "CVE-2024-52304",
          "ruleIndex": 2
        },
        {
          "level": "warning",
          "locations": [
            {
              "message": {
                "text": "requirements.txt: black@23.11.0"
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "endColumn": 1,
                  "endLine": 97,
                  "startColumn": 1,
                  "startLine": 97
                }
              }
            }
          ],
          "message": {
            "text": "Package: black\nInstalled Version: 23.11.0\nVulnerability CVE-2024-21503\nSeverity: MEDIUM\nFixed Version: 24.3.0\nLink: [CVE-2024-21503](https://avd.aquasec.com/nvd/cve-2024-21503)"
          },
          "ruleId": "CVE-2024-21503",
          "ruleIndex": 3
        },
        {
          "level": "note",
          "locations": [
            {
              "message": {
                "text": "requirements.txt: cryptography@43.0.3"
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "endColumn": 1,
                  "endLine": 51,
                  "startColumn": 1,
                  "startLine": 51
                }
              }
            }
          ],
          "message": {
            "text": "Package: cryptography\nInstalled Version: 43.0.3\nVulnerability CVE-2024-12797\nSeverity: LOW\nFixed Version: 44.0.1\nLink: [CVE-2024-12797](https://avd.aquasec.com/nvd/cve-2024-12797)"
          },
          "ruleId": "CVE-2024-12797",
          "ruleIndex": 4
        },
        {
          "level": "error",
          "locations": [
            {
              "message": {
                "text": "requirements.txt: python-multipart@0.0.7"
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "endColumn": 1,
                  "endLine": 70,
                  "startColumn": 1,
                  "startLine": 70
                }
              }
            }
          ],
          "message": {
            "text": "Package: python-multipart\nInstalled Version: 0.0.7\nVulnerability CVE-2024-53981\nSeverity: HIGH\nFixed Version: 0.0.18\nLink: [CVE-2024-53981](https://avd.aquasec.com/nvd/cve-2024-53981)"
          },
          "ruleId": "CVE-2024-53981",
          "ruleIndex": 5
        },
        {
          "level": "warning",
          "locations": [
            {
              "message": {
                "text": "requirements.txt: requests@2.31.0"
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "endColumn": 1,
                  "endLine": 118,
                  "startColumn": 1,
                  "startLine": 118
                }
              }
            }
          ],
          "message": {
            "text": "Package: requests\nInstalled Version: 2.31.0\nVulnerability CVE-2024-35195\nSeverity: MEDIUM\nFixed Version: 2.32.0\nLink: [CVE-2024-35195](https://avd.aquasec.com/nvd/cve-2024-35195)"
          },
          "ruleId": "CVE-2024-35195",
          "ruleIndex": 6
        },
        {
          "level": "warning",
          "locations": [
            {
              "message": {
                "text": "requirements.txt: requests@2.31.0"
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "endColumn": 1,
                  "endLine": 118,
                  "startColumn": 1,
                  "startLine": 118
                }
              }
            }
          ],
          "message": {
            "text": "Package: requests\nInstalled Version: 2.31.0\nVulnerability CVE-2024-47081\nSeverity: MEDIUM\nFixed Version: 2.32.4\nLink: [CVE-2024-47081](https://avd.aquasec.com/nvd/cve-2024-47081)"
          },
          "ruleId": "CVE-2024-47081",
          "ruleIndex": 7
        },
        {
          "level": "note",
          "locations": [
            {
              "message": {
                "text": "requirements.txt: sentry-sdk@1.38.0"
              },
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "requirements.txt",
                  "uriBaseId": "ROOTPATH"
                },
                "region": {
                  "endColumn": 1,
                  "endLine": 78,
                  "startColumn": 1,
                  "startLine": 78
                }
              }
            }
          ],
          "message": {
            "text": "Package: sentry-sdk\nInstalled Version: 1.38.0\nVulnerability CVE-2024-40647\nSeverity: LOW\nFixed Version: 2.8.0, 1.45.1\nLink: [CVE-2024-40647](https://avd.aquasec.com/nvd/cve-2024-40647)"
          },
          "ruleId": "CVE-2024-40647",
          "ruleIndex": 8
        }
      ],
      "tool": {
        "driver": {
          "fullName": "Trivy Vulnerability Scanner",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "name": "Trivy",
          "rules": null,
          "version": "0.59.1"
        }
      }
    },
    {
      "results": [],
      "tool": {
        "driver": {
          "name": "dartanalyzer",
          "rules": null
        }
      }
    }
  ],
  "version": "2.1.0"
}