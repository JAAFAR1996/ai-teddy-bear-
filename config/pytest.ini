[tool:pytest]
# Pytest Configuration for AI Teddy Bear Project

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version requirement
minversion = 7.0

# Add project root to Python path
addopts = 
    # Output options
    -v
    --tb=short
    --strict-markers
    --strict-config
    
    # Coverage options
    --cov=core
    --cov-branch
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    
    # Performance options
    --benchmark-skip
    --durations=10
    
    # Parallel execution
    -n auto
    
    # Warnings
    --disable-warnings
    -p no:warnings
    
    # Report generation
    --junitxml=reports/junit.xml
    --html=reports/pytest-report.html
    --self-contained-html
    
    # Qt-specific options
    --qt-no-exception-capture

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    e2e: marks tests as end-to-end tests
    unit: marks tests as unit tests
    performance: marks tests as performance benchmarks
    gui: marks tests that require GUI interaction
    audio: marks tests that require audio capabilities
    network: marks tests that require network access
    windows_only: marks tests that only run on Windows
    linux_only: marks tests that only run on Linux
    macos_only: marks tests that only run on macOS
    requires_gpu: marks tests that require GPU acceleration
    regression: marks tests for regression testing
    smoke: marks tests for smoke testing
    security: marks tests for security validation

# Filtering options
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning
    ignore:.*distutils.*:UserWarning
    ignore:.*imp module.*:DeprecationWarning
    # Qt-specific warnings
    ignore:.*QApplication.*:UserWarning
    ignore:.*QWidget.*:DeprecationWarning

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout settings
timeout = 300
timeout_method = thread

# Temporary directory settings
tmp_path_retention_count = 3
tmp_path_retention_policy = failed

# Collection options
collect_ignore = [
    "setup.py",
    "build",
    "dist",
    ".tox",
    ".venv",
    "venv",
    ".git",
    ".pytest_cache",
    "__pycache__",
    "node_modules",
    "archived_legacy"
]

# Environment variables for tests
env =
    QT_QPA_PLATFORM=offscreen
    PYTEST_RUNNING=1
    TESTING=1 