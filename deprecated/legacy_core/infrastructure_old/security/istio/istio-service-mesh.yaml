apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: ai-teddy-control-plane
  namespace: istio-system
spec:
  profile: production
  values:
    pilot:
      autoscaleEnabled: true
      autoscaleMin: 2
      autoscaleMax: 5
      cpu:
        targetAverageUtilization: 80
      memory:
        targetAverageUtilization: 80
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
        limits:
          cpu: 1000m
          memory: 2Gi
    global:
      # Zero Trust: Enable mTLS by default
      mtls:
        enabled: true
        auto: true
      # Proxy configuration for Zero Trust
      proxy:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        # Enable detailed telemetry for security monitoring
        metadata:
          PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION: true
          PILOT_ENABLE_CROSS_CLUSTER_WORKLOAD_ENTRY: true
      # Tracing for security audit
      tracer:
        zipkin:
          address: zipkin.istio-system:9411
      # Logging configuration
      logging:
        level: "default:info,ads:debug"
      meshConfig:
        # Default security policies
        defaultConfig:
          # Require mTLS for all communications
          proxyStatsMatcher:
            inclusionRegexps:
            - ".*circuit_breakers.*"
            - ".*upstream_rq_retry.*"
            - ".*upstream_rq_pending.*"
            - ".*_cx_.*"
        # Access logging for security monitoring
        accessLogFile: /dev/stdout
        # Enable tracing for all requests
        defaultProviders:
          tracing:
          - "jaeger"
          metrics:
          - "prometheus"
          accessLogging:
          - "envoy"
        # Extension providers
        extensionProviders:
        - name: jaeger
          envoyOtelAls:
            service: jaeger-collector.observability.svc.cluster.local
            port: 14250
        - name: prometheus
          prometheus:
            configOverride:
              metric_relabeling_configs:
              - source_labels: [__name__]
                regex: 'istio_.*'
                target_label: __tmp_istio_metric
                replacement: 'true'
  components:
    # Ingress Gateway with Zero Trust
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        hpaSpec:
          minReplicas: 2
          maxReplicas: 10
          metrics:
          - type: Resource
            resource:
              name: cpu
              target:
                type: Utilization
                averageUtilization: 80
          - type: Resource
            resource:
              name: memory
              target:
                type: Utilization
                averageUtilization: 80
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 2000m
            memory: 1024Mi
        service:
          type: LoadBalancer
          ports:
          - port: 15021
            targetPort: 15021
            name: status-port
            protocol: TCP
          - port: 80
            targetPort: 8080
            name: http2
            protocol: TCP
          - port: 443
            targetPort: 8443
            name: https
            protocol: TCP
        env:
        # Security hardening
        - name: ISTIO_META_ROUTER_MODE
          value: "sni-dnat"
        - name: PILOT_ENABLE_IP_AUTOALLOCATE
          value: "true"
        # Zero Trust: Strict mode
        - name: PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION
          value: "true"
        podAnnotations:
          # Security annotations
          sidecar.istio.io/inject: "true"
          traffic.sidecar.istio.io/includeInboundPorts: "*"
          traffic.sidecar.istio.io/excludeOutboundPorts: "22"
    
    # Egress Gateway for controlled external access
    egressGateways:
    - name: istio-egressgateway
      enabled: true
      k8s:
        hpaSpec:
          minReplicas: 1
          maxReplicas: 5
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        env:
        # Zero Trust: Control all egress traffic
        - name: ISTIO_META_REQUESTED_NETWORK_VIEW
          value: "external"
    
    # Istiod (Control Plane)
    pilot:
      k8s:
        hpaSpec:
          minReplicas: 2
          maxReplicas: 5
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
        env:
        # Zero Trust: Enhanced security
        - name: EXTERNAL_ISTIOD
          value: "false"
        - name: PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION
          value: "true"
        - name: PILOT_ENABLE_CROSS_CLUSTER_WORKLOAD_ENTRY
          value: "true"
        # Security policies
        - name: PILOT_ENABLE_STATUS
          value: "true"
        - name: PILOT_ENABLE_WORKLOAD_ENTRY_CROSS_CLUSTER
          value: "false"
        # JWT validation
        - name: JWT_POLICY
          value: "first-party-jwt"
        podAnnotations:
          # Security monitoring
          prometheus.io/scrape: "true"
          prometheus.io/port: "15014"
          prometheus.io/path: "/stats/prometheus"

---
# Security: PeerAuthentication for mTLS
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default-mtls
  namespace: istio-system
spec:
  # Require mTLS for all services
  mtls:
    mode: STRICT

---
# Security: DestinationRule for mTLS
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: default-mtls
  namespace: istio-system
spec:
  host: "*.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL

---
# Telemetry configuration for security monitoring
apiVersion: telemetry.istio.io/v1alpha1
kind: Telemetry
metadata:
  name: security-metrics
  namespace: istio-system
spec:
  metrics:
  - providers:
    - name: prometheus
  - overrides:
    - match:
        metric: ALL_METRICS
      tagOverrides:
        request_protocol:
          value: "unknown"
    - match:
        metric: REQUEST_COUNT
      disabled: false
    - match:
        metric: REQUEST_DURATION
      disabled: false
    - match:
        metric: TCP_OPENED_CONNECTIONS
      disabled: false
  tracing:
  - providers:
    - name: jaeger
  accessLogging:
  - providers:
    - name: envoy 