{
  "total_files": 83,
  "total_python_files": 65,
  "file_types": {
    "other": 56,
    "repository": 1,
    "config": 5,
    "model": 1,
    "service": 2
  },
  "duplicate_candidates": [
    {
      "type": "functional",
      "signature": "main()",
      "files": [
        ".\\advanced_deep_analyzer.py",
        ".\\advanced_directories_analyzer.py",
        ".\\backup_database.py",
        ".\\chaos_experiment_runner.py",
        ".\\clean_architecture_relocator.py",
        ".\\comprehensive_architecture_analyzer.py",
        ".\\comprehensive_project_analyzer.py",
        ".\\configure_logging.py",
        ".\\config_hardware_esp32_analyzer.py",
        ".\\content_similarity_analyzer.py",
        ".\\data_migration.py",
        ".\\ddd_integration_simple.py",
        ".\\exception_fixer.py",
        ".\\fix_imports_checker.py",
        ".\\frontend_api_cache_analyzer.py",
        ".\\generate_docs.py",
        ".\\generate_encryption_key.py",
        ".\\generate_env.py",
        ".\\generate_keys.py",
        ".\\generate_secure_keys.py",
        ".\\git_secrets_cleanup.py",
        ".\\god_class_splitter.py",
        ".\\health_check.py",
        ".\\immediate_cleanup.py",
        ".\\initialize_db.py",
        ".\\intelligent_config_merger.py",
        ".\\migrate_secrets.py",
        ".\\model_benchmark.py",
        ".\\performance_profile.py",
        ".\\professional_ddd_integration.py",
        ".\\project_analyzer.py",
        ".\\quick_config_analyzer.py",
        ".\\run_all_fixes.py",
        ".\\security_cleanup.py",
        ".\\security_scan.py",
        ".\\service_organizer_analyzer.py",
        ".\\smart_merge_strategy.py",
        ".\\src_cleanup_validator.py",
        ".\\src_deduplication_analyzer.py",
        ".\\system_diagnostics.py",
        ".\\usage_pattern_analyzer.py",
        ".\\vault_secret_manager.py",
        ".\\verify_ddd_structure.py",
        ".\\migration\\ddd_architecture_analyzer.py",
        ".\\migration\\ddd_structure_creator.py",
        ".\\migration\\quick_ddd_setup.py"
      ]
    },
    {
      "type": "functional",
      "signature": "__init__(self,base_path)",
      "files": [
        ".\\advanced_deep_analyzer.py",
        ".\\clean_architecture_relocator.py",
        ".\\comprehensive_architecture_analyzer.py",
        ".\\content_similarity_analyzer.py",
        ".\\frontend_api_cache_analyzer.py",
        ".\\intelligent_config_merger.py",
        ".\\quick_config_analyzer.py",
        ".\\service_organizer_analyzer.py",
        ".\\smart_merge_strategy.py",
        ".\\usage_pattern_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "_count_lines(self,file_path)",
      "files": [
        ".\\advanced_deep_analyzer.py",
        ".\\professional_ddd_integration.py"
      ]
    },
    {
      "type": "functional",
      "signature": "ensure_directories(self)",
      "files": [
        ".\\advanced_directories_analyzer.py",
        ".\\config_hardware_esp32_analyzer.py",
        ".\\src_deduplication_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "calculate_file_hash(self,file_path)",
      "files": [
        ".\\advanced_directories_analyzer.py",
        ".\\comprehensive_architecture_analyzer.py",
        ".\\config_hardware_esp32_analyzer.py",
        ".\\content_similarity_analyzer.py",
        ".\\frontend_api_cache_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "get_content_preview(self,file_path,max_lines)",
      "files": [
        ".\\advanced_directories_analyzer.py",
        ".\\config_hardware_esp32_analyzer.py",
        ".\\src_deduplication_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "scan_all_directories(self)",
      "files": [
        ".\\advanced_directories_analyzer.py",
        ".\\config_hardware_esp32_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "find_exact_duplicates(self)",
      "files": [
        ".\\advanced_directories_analyzer.py",
        ".\\config_hardware_esp32_analyzer.py",
        ".\\src_deduplication_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "find_similar_files(self,similarity_threshold)",
      "files": [
        ".\\advanced_directories_analyzer.py",
        ".\\config_hardware_esp32_analyzer.py",
        ".\\src_deduplication_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "_should_compare_files(self,path1,path2)",
      "files": [
        ".\\advanced_directories_analyzer.py",
        ".\\config_hardware_esp32_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "_calculate_similarity(self,path1,path2)",
      "files": [
        ".\\advanced_directories_analyzer.py",
        ".\\config_hardware_esp32_analyzer.py",
        ".\\src_deduplication_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "cleanup_generated_files(self)",
      "files": [
        ".\\advanced_directories_analyzer.py",
        ".\\config_hardware_esp32_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "move_exact_duplicates(self)",
      "files": [
        ".\\advanced_directories_analyzer.py",
        ".\\config_hardware_esp32_analyzer.py",
        ".\\src_deduplication_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "merge_similar_files(self)",
      "files": [
        ".\\advanced_directories_analyzer.py",
        ".\\config_hardware_esp32_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "_archive_merged_file(self,file_path)",
      "files": [
        ".\\advanced_directories_analyzer.py",
        ".\\config_hardware_esp32_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "generate_comprehensive_report(self)",
      "files": [
        ".\\advanced_directories_analyzer.py",
        ".\\comprehensive_architecture_analyzer.py",
        ".\\config_hardware_esp32_analyzer.py",
        ".\\fix_imports_checker.py",
        ".\\security_scan.py"
      ]
    },
    {
      "type": "functional",
      "signature": "run_complete_analysis(self)",
      "files": [
        ".\\advanced_directories_analyzer.py",
        ".\\config_hardware_esp32_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "run_comprehensive_analysis(self)",
      "files": [
        ".\\comprehensive_architecture_analyzer.py",
        ".\\quick_config_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "log(self,message)",
      "files": [
        ".\\comprehensive_cleanup.py",
        ".\\comprehensive_fix_and_report.py",
        ".\\professional_ddd_integration_v2.py",
        ".\\proper_ddd_splitter.py"
      ]
    },
    {
      "type": "functional",
      "signature": "generate_cleanup_report(self)",
      "files": [
        ".\\comprehensive_cleanup.py",
        ".\\security_cleanup.py"
      ]
    },
    {
      "type": "functional",
      "signature": "__init__(self,src_path)",
      "files": [
        ".\\comprehensive_fixer.py",
        ".\\god_class_refactor_ddd.py",
        ".\\professional_ddd_integration.py",
        ".\\quick_god_class_splitter.py"
      ]
    },
    {
      "type": "functional",
      "signature": "__init__(self,project_root)",
      "files": [
        ".\\comprehensive_project_analyzer.py",
        ".\\professional_ddd_integration_v2.py",
        ".\\project_analyzer.py",
        ".\\security_audit_and_fix.py",
        ".\\security_cleanup.py",
        ".\\migration\\ddd_architecture_analyzer.py",
        ".\\migration\\ddd_structure_creator.py",
        ".\\migration\\quick_ddd_setup.py"
      ]
    },
    {
      "type": "functional",
      "signature": "analyze_file(self,file_path)",
      "files": [
        ".\\comprehensive_project_analyzer.py",
        ".\\exception_fixer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "analyze_project(self)",
      "files": [
        ".\\comprehensive_project_analyzer.py",
        ".\\project_analyzer.py",
        ".\\migration\\ddd_architecture_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "_generate_demo_data(self)",
      "files": [
        ".\\demo_distributed_ai.py",
        ".\\demo_edge_ai.py",
        ".\\demo_homomorphic_encryption.py",
        ".\\demo_multi_layer_cache.py"
      ]
    },
    {
      "type": "functional",
      "signature": "print_header(self,title)",
      "files": [
        ".\\demo_distributed_ai.py",
        ".\\demo_edge_ai.py",
        ".\\demo_homomorphic_encryption.py"
      ]
    },
    {
      "type": "functional",
      "signature": "print_subheader(self,title)",
      "files": [
        ".\\demo_distributed_ai.py",
        ".\\demo_edge_ai.py",
        ".\\demo_homomorphic_encryption.py"
      ]
    },
    {
      "type": "functional",
      "signature": "demo_system_capabilities(self)",
      "files": [
        ".\\demo_distributed_ai.py",
        ".\\demo_edge_ai.py"
      ]
    },
    {
      "type": "functional",
      "signature": "identify_god_classes(self)",
      "files": [
        ".\\fix_ddd_integration.py",
        ".\\god_class_refactor_ddd.py",
        ".\\professional_ddd_integration_v2.py",
        ".\\proper_ddd_splitter.py",
        ".\\quick_god_class_splitter.py"
      ]
    },
    {
      "type": "functional",
      "signature": "_create_init_files(self,directories)",
      "files": [
        ".\\fix_ddd_integration.py",
        ".\\proper_ddd_splitter.py"
      ]
    },
    {
      "type": "functional",
      "signature": "scan_all_python_files(self)",
      "files": [
        ".\\fix_imports_checker.py",
        ".\\usage_pattern_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "generate_encryption_key()",
      "files": [
        ".\\generate_keys.py",
        ".\\generate_secure_keys.py"
      ]
    },
    {
      "type": "functional",
      "signature": "_analyze_file(self,file_path)",
      "files": [
        ".\\god_class_refactor_ddd.py",
        ".\\migration\\ddd_architecture_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "visit_ClassDef(self,node)",
      "files": [
        ".\\god_class_refactor_ddd.py",
        ".\\god_class_refactor_ddd.py",
        ".\\migration\\ddd_architecture_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "visit_FunctionDef(self,node)",
      "files": [
        ".\\god_class_refactor_ddd.py",
        ".\\god_class_refactor_ddd.py",
        ".\\migration\\ddd_architecture_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "visit_Import(self,node)",
      "files": [
        ".\\god_class_refactor_ddd.py",
        ".\\migration\\ddd_architecture_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "analyze_python_file(self,file_path)",
      "files": [
        ".\\god_class_splitter.py",
        ".\\project_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "__init__(self,config)",
      "files": [
        ".\\migrate_secrets.py",
        ".\\vault_secret_manager.py"
      ]
    },
    {
      "type": "functional",
      "signature": "_generate_recommendations(self)",
      "files": [
        ".\\migrate_secrets.py",
        ".\\migration\\ddd_architecture_analyzer.py"
      ]
    },
    {
      "type": "functional",
      "signature": "run_splitting(self)",
      "files": [
        ".\\proper_ddd_splitter.py",
        ".\\quick_god_class_splitter.py"
      ]
    },
    {
      "type": "functional",
      "signature": "__init__(self,src_directory)",
      "files": [
        ".\\src_cleanup_validator.py",
        ".\\src_deduplication_analyzer.py"
      ]
    }
  ],
  "large_files": [
    [
      ".\\advanced_deep_analyzer.py",
      892
    ],
    [
      ".\\advanced_directories_analyzer.py",
      542
    ],
    [
      ".\\comprehensive_architecture_analyzer.py",
      644
    ],
    [
      ".\\comprehensive_project_analyzer.py",
      579
    ],
    [
      ".\\demo_distributed_ai.py",
      563
    ],
    [
      ".\\demo_edge_ai.py",
      520
    ],
    [
      ".\\demo_multi_layer_cache.py",
      558
    ],
    [
      ".\\god_class_refactor_ddd.py",
      627
    ],
    [
      ".\\intelligent_config_merger.py",
      798
    ],
    [
      ".\\migrate_secrets.py",
      620
    ],
    [
      ".\\mtls_automation.py",
      501
    ],
    [
      ".\\proper_ddd_splitter.py",
      529
    ],
    [
      ".\\security_audit_and_fix.py",
      575
    ],
    [
      ".\\security_cleanup.py",
      569
    ],
    [
      ".\\service_organizer_analyzer.py",
      545
    ],
    [
      ".\\usage_pattern_analyzer.py",
      519
    ],
    [
      ".\\migration\\ddd_architecture_analyzer.py",
      669
    ],
    [
      ".\\migration\\ddd_structure_creator.py",
      854
    ]
  ],
  "empty_files": [],
  "test_files": [],
  "config_files": [
    ".\\configure_logging.py",
    ".\\config_hardware_esp32_analyzer.py",
    ".\\intelligent_config_merger.py",
    ".\\migrate_config.py",
    ".\\quick_config_analyzer.py"
  ],
  "detailed_analysis": [
    {
      "path": ".\\advanced_deep_analyzer.py",
      "relative_path": "advanced_deep_analyzer.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 892,
        "loc": 656,
        "classes": 1,
        "functions": 35,
        "imports": 8
      },
      "hash": "a4e75da6f9dd6fb74af9c5fe24751caf",
      "issues": [
        "Uses eval() - security risk",
        "Uses exec() - security risk",
        "Generic exception handling",
        "Print statements in production code",
        "Contains TODO/FIXME/XXX",
        "File too large (892 lines)"
      ],
      "suggested_location": null,
      "complexity": 38,
      "dependencies": [
        "ast",
        "traceback",
        "pathlib",
        "json",
        "datetime",
        "collections",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\advanced_directories_analyzer.py",
      "relative_path": "advanced_directories_analyzer.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 542,
        "loc": 413,
        "classes": 2,
        "functions": 22,
        "imports": 12
      },
      "hash": "66808b53663ba2b1c495d04df327f4de",
      "issues": [
        "Generic exception handling",
        "Print statements in production code",
        "File too large (542 lines)"
      ],
      "suggested_location": null,
      "complexity": 28,
      "dependencies": [
        "shutil",
        "pathlib",
        "json",
        "datetime",
        "difflib",
        "logging",
        "dataclasses",
        "warnings",
        "collections",
        "hashlib",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\backup_database.py",
      "relative_path": "backup_database.py",
      "type": "other",
      "importance": "critical",
      "stats": {
        "lines": 117,
        "loc": 79,
        "classes": 0,
        "functions": 4,
        "imports": 5
      },
      "hash": "eeaf1a99a09147cdbcb9cb0bfa4cd795",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 5,
      "dependencies": [
        "shutil",
        "datetime",
        "logging",
        "sqlite3",
        "os"
      ]
    },
    {
      "path": ".\\chaos_experiment_runner.py",
      "relative_path": "chaos_experiment_runner.py",
      "type": "other",
      "importance": "medium",
      "stats": {
        "lines": 482,
        "loc": 349,
        "classes": 1,
        "functions": 3,
        "imports": 16
      },
      "hash": "caa022fd049aaea400b7ef792a07e970",
      "issues": [
        "Generic exception handling",
        "Print statements in production code",
        "File is getting large (482 lines)"
      ],
      "suggested_location": null,
      "complexity": 8,
      "dependencies": [
        "sys",
        "requests",
        "pathlib",
        "json",
        "datetime",
        "logging",
        "asyncio",
        "argparse",
        "chaos",
        "typing",
        "time"
      ]
    },
    {
      "path": ".\\cleanup_ddd_duplicates.py",
      "relative_path": "cleanup_ddd_duplicates.py",
      "type": "other",
      "importance": "medium",
      "stats": {
        "lines": 118,
        "loc": 79,
        "classes": 0,
        "functions": 5,
        "imports": 3
      },
      "hash": "8fdf83c24c46555a76aba36072085f5f",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 5,
      "dependencies": [
        "pathlib",
        "shutil",
        "os"
      ]
    },
    {
      "path": ".\\clean_architecture_relocator.py",
      "relative_path": "clean_architecture_relocator.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 465,
        "loc": 332,
        "classes": 1,
        "functions": 10,
        "imports": 6
      },
      "hash": "ba387ef15c83dd177193f56b466a4fdc",
      "issues": [
        "Print statements in production code",
        "File is getting large (465 lines)"
      ],
      "suggested_location": null,
      "complexity": 13,
      "dependencies": [
        "traceback",
        "pathlib",
        "shutil",
        "datetime",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\comprehensive_architecture_analyzer.py",
      "relative_path": "comprehensive_architecture_analyzer.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 644,
        "loc": 499,
        "classes": 1,
        "functions": 22,
        "imports": 10
      },
      "hash": "22947972c957bbe1911df2ed3bb28323",
      "issues": [
        "Generic exception handling",
        "Print statements in production code",
        "File too large (644 lines)"
      ],
      "suggested_location": null,
      "complexity": 26,
      "dependencies": [
        "re",
        "traceback",
        "pathlib",
        "shutil",
        "json",
        "datetime",
        "collections",
        "hashlib",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\comprehensive_cleanup.py",
      "relative_path": "comprehensive_cleanup.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 204,
        "loc": 143,
        "classes": 1,
        "functions": 8,
        "imports": 4
      },
      "hash": "9b4b33a0cfc7b20bfdd19eef8e650857",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 10,
      "dependencies": [
        "pathlib",
        "shutil",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\comprehensive_fixer.py",
      "relative_path": "comprehensive_fixer.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 450,
        "loc": 311,
        "classes": 1,
        "functions": 9,
        "imports": 6
      },
      "hash": "c695293ff0748f2f39c3cf7c08711bcb",
      "issues": [
        "Generic exception handling",
        "Print statements in production code",
        "Contains TODO/FIXME/XXX",
        "File is getting large (450 lines)"
      ],
      "suggested_location": null,
      "complexity": 12,
      "dependencies": [
        "re",
        "pathlib",
        "shutil",
        "datetime",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\comprehensive_fix_and_report.py",
      "relative_path": "comprehensive_fix_and_report.py",
      "type": "repository",
      "importance": "high",
      "stats": {
        "lines": 407,
        "loc": 274,
        "classes": 1,
        "functions": 8,
        "imports": 5
      },
      "hash": "8b833688a604af24fa91e537c706690e",
      "issues": [
        "Generic exception handling",
        "Print statements in production code",
        "File is getting large (407 lines)"
      ],
      "suggested_location": "src/infrastructure/persistence/repositories/comprehensive_fix_and_report.py",
      "complexity": 11,
      "dependencies": [
        "re",
        "pathlib",
        "datetime",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\comprehensive_project_analyzer.py",
      "relative_path": "comprehensive_project_analyzer.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 579,
        "loc": 430,
        "classes": 1,
        "functions": 14,
        "imports": 10
      },
      "hash": "9b9fe291fe9243a22dccf2f6626f9971",
      "issues": [
        "Possible hardcoded password",
        "Print statements in production code",
        "Contains TODO/FIXME/XXX",
        "File too large (579 lines)"
      ],
      "suggested_location": null,
      "complexity": 18,
      "dependencies": [
        "ast",
        "re",
        "pathlib",
        "json",
        "datetime",
        "inspect",
        "collections",
        "hashlib",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\configure_logging.py",
      "relative_path": "configure_logging.py",
      "type": "config",
      "importance": "medium",
      "stats": {
        "lines": 187,
        "loc": 156,
        "classes": 1,
        "functions": 4,
        "imports": 9
      },
      "hash": "7b89b4530ed2c6adc2f586188e8371e2",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": "configs/configure_logging.py",
      "complexity": 7,
      "dependencies": [
        "sys",
        "json",
        "logging",
        "argparse",
        "platform",
        "typing",
        "yaml",
        "os"
      ]
    },
    {
      "path": ".\\config_hardware_esp32_analyzer.py",
      "relative_path": "config_hardware_esp32_analyzer.py",
      "type": "config",
      "importance": "high",
      "stats": {
        "lines": 494,
        "loc": 376,
        "classes": 2,
        "functions": 19,
        "imports": 12
      },
      "hash": "25ef1cd529c2242f11c99713b3a5a0e4",
      "issues": [
        "Generic exception handling",
        "Print statements in production code",
        "File is getting large (494 lines)"
      ],
      "suggested_location": "configs/config_hardware_esp32_analyzer.py",
      "complexity": 25,
      "dependencies": [
        "shutil",
        "pathlib",
        "json",
        "datetime",
        "difflib",
        "logging",
        "dataclasses",
        "warnings",
        "collections",
        "hashlib",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\content_similarity_analyzer.py",
      "relative_path": "content_similarity_analyzer.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 423,
        "loc": 307,
        "classes": 1,
        "functions": 9,
        "imports": 9
      },
      "hash": "63432d259edcd7484cdb1f79f874923b",
      "issues": [
        "Print statements in production code",
        "File is getting large (423 lines)"
      ],
      "suggested_location": null,
      "complexity": 12,
      "dependencies": [
        "ast",
        "traceback",
        "pathlib",
        "shutil",
        "datetime",
        "difflib",
        "hashlib",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\data_migration.py",
      "relative_path": "data_migration.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 187,
        "loc": 147,
        "classes": 1,
        "functions": 7,
        "imports": 7
      },
      "hash": "818ef6782a17f429dc9982b8af35a787",
      "issues": [],
      "suggested_location": null,
      "complexity": 10,
      "dependencies": [
        "json",
        "datetime",
        "logging",
        "sqlite3",
        "typing",
        "backup_database",
        "os"
      ]
    },
    {
      "path": ".\\ddd_integration_simple.py",
      "relative_path": "ddd_integration_simple.py",
      "type": "other",
      "importance": "medium",
      "stats": {
        "lines": 89,
        "loc": 66,
        "classes": 0,
        "functions": 5,
        "imports": 3
      },
      "hash": "f44ff7394af74c9385935d2bbdb1b78f",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 5,
      "dependencies": [
        "pathlib",
        "shutil",
        "os"
      ]
    },
    {
      "path": ".\\demo_distributed_ai.py",
      "relative_path": "demo_distributed_ai.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 563,
        "loc": 419,
        "classes": 1,
        "functions": 6,
        "imports": 8
      },
      "hash": "74de6bce8fe3568bf1de7882ad5ab9cf",
      "issues": [
        "Print statements in production code",
        "File too large (563 lines)"
      ],
      "suggested_location": null,
      "complexity": 9,
      "dependencies": [
        "sys",
        "pathlib",
        "src",
        "logging",
        "asyncio",
        "numpy",
        "typing",
        "time"
      ]
    },
    {
      "path": ".\\demo_edge_ai.py",
      "relative_path": "demo_edge_ai.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 520,
        "loc": 389,
        "classes": 1,
        "functions": 6,
        "imports": 9
      },
      "hash": "f72ae181cf5689c5cbfef84c836529a4",
      "issues": [
        "Print statements in production code",
        "File too large (520 lines)"
      ],
      "suggested_location": null,
      "complexity": 9,
      "dependencies": [
        "sys",
        "pathlib",
        "src",
        "logging",
        "asyncio",
        "numpy",
        "typing",
        "time"
      ]
    },
    {
      "path": ".\\demo_homomorphic_encryption.py",
      "relative_path": "demo_homomorphic_encryption.py",
      "type": "other",
      "importance": "critical",
      "stats": {
        "lines": 331,
        "loc": 247,
        "classes": 1,
        "functions": 6,
        "imports": 9
      },
      "hash": "bf6df2cc0b950e8d29abe57909af9e6a",
      "issues": [
        "Print statements in production code",
        "File is getting large (331 lines)"
      ],
      "suggested_location": null,
      "complexity": 9,
      "dependencies": [
        "sys",
        "pathlib",
        "src",
        "logging",
        "asyncio",
        "numpy",
        "typing",
        "time"
      ]
    },
    {
      "path": ".\\demo_multi_layer_cache.py",
      "relative_path": "demo_multi_layer_cache.py",
      "type": "other",
      "importance": "critical",
      "stats": {
        "lines": 558,
        "loc": 430,
        "classes": 1,
        "functions": 2,
        "imports": 11
      },
      "hash": "dce5e06a6884bacbeb2586ca6a4156fb",
      "issues": [
        "Print statements in production code",
        "File too large (558 lines)"
      ],
      "suggested_location": null,
      "complexity": 6,
      "dependencies": [
        "sys",
        "src",
        "json",
        "datetime",
        "logging",
        "asyncio",
        "random",
        "typing",
        "time"
      ]
    },
    {
      "path": ".\\exception_fixer.py",
      "relative_path": "exception_fixer.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 449,
        "loc": 320,
        "classes": 1,
        "functions": 13,
        "imports": 6
      },
      "hash": "255190796308e43169af741c182c9658",
      "issues": [
        "Generic exception handling",
        "Print statements in production code",
        "File is getting large (449 lines)"
      ],
      "suggested_location": null,
      "complexity": 16,
      "dependencies": [
        "ast",
        "re",
        "pathlib",
        "shutil",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\fix_ddd_integration.py",
      "relative_path": "fix_ddd_integration.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 431,
        "loc": 326,
        "classes": 1,
        "functions": 6,
        "imports": 4
      },
      "hash": "5cbf14eb1a4291a5275f37129b5a9aec",
      "issues": [
        "Print statements in production code",
        "File is getting large (431 lines)"
      ],
      "suggested_location": null,
      "complexity": 8,
      "dependencies": [
        "pathlib",
        "shutil",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\fix_imports_checker.py",
      "relative_path": "fix_imports_checker.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 216,
        "loc": 148,
        "classes": 1,
        "functions": 9,
        "imports": 4
      },
      "hash": "6f1e9626855293f2f2a0bd0b19179ea3",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 11,
      "dependencies": [
        "pathlib",
        "re",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\frontend_api_cache_analyzer.py",
      "relative_path": "frontend_api_cache_analyzer.py",
      "type": "other",
      "importance": "critical",
      "stats": {
        "lines": 474,
        "loc": 351,
        "classes": 1,
        "functions": 10,
        "imports": 8
      },
      "hash": "71725eb8a6e90122eb390161aad6aa49",
      "issues": [
        "Print statements in production code",
        "File is getting large (474 lines)"
      ],
      "suggested_location": null,
      "complexity": 13,
      "dependencies": [
        "traceback",
        "pathlib",
        "shutil",
        "json",
        "datetime",
        "hashlib",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\generate_docs.py",
      "relative_path": "generate_docs.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 161,
        "loc": 128,
        "classes": 1,
        "functions": 6,
        "imports": 5
      },
      "hash": "d35ed72c0ae25a25ffbc1ae97fd08955",
      "issues": [],
      "suggested_location": null,
      "complexity": 9,
      "dependencies": [
        "shutil",
        "logging",
        "argparse",
        "subprocess",
        "os"
      ]
    },
    {
      "path": ".\\generate_encryption_key.py",
      "relative_path": "generate_encryption_key.py",
      "type": "other",
      "importance": "critical",
      "stats": {
        "lines": 52,
        "loc": 34,
        "classes": 0,
        "functions": 2,
        "imports": 4
      },
      "hash": "33661c9e1a728ba9a8bac5ef43d2709a",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 2,
      "dependencies": [
        "argparse",
        "base64",
        "secrets",
        "os"
      ]
    },
    {
      "path": ".\\generate_env.py",
      "relative_path": "generate_env.py",
      "type": "other",
      "importance": "medium",
      "stats": {
        "lines": 94,
        "loc": 70,
        "classes": 0,
        "functions": 3,
        "imports": 5
      },
      "hash": "c80b52234e29997eb1ad8a1fe78bcd23",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 4,
      "dependencies": [
        "string",
        "dotenv",
        "argparse",
        "secrets",
        "os"
      ]
    },
    {
      "path": ".\\generate_keys.py",
      "relative_path": "generate_keys.py",
      "type": "other",
      "importance": "medium",
      "stats": {
        "lines": 49,
        "loc": 36,
        "classes": 0,
        "functions": 4,
        "imports": 4
      },
      "hash": "9485f2b2211944f3167e8421b5f5ef8c",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 4,
      "dependencies": [
        "cryptography",
        "base64",
        "secrets",
        "string"
      ]
    },
    {
      "path": ".\\generate_secure_keys.py",
      "relative_path": "generate_secure_keys.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 67,
        "loc": 53,
        "classes": 0,
        "functions": 6,
        "imports": 4
      },
      "hash": "1fabc33251b46531add1d2c8267c40c6",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 6,
      "dependencies": [
        "cryptography",
        "base64",
        "secrets",
        "os"
      ]
    },
    {
      "path": ".\\git_secrets_cleanup.py",
      "relative_path": "git_secrets_cleanup.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 266,
        "loc": 206,
        "classes": 1,
        "functions": 8,
        "imports": 5
      },
      "hash": "0ebbc0b595a6ed173f6cb7856657f230",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 11,
      "dependencies": [
        "re",
        "pathlib",
        "subprocess",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\god_class_refactor_ddd.py",
      "relative_path": "god_class_refactor_ddd.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 627,
        "loc": 475,
        "classes": 5,
        "functions": 16,
        "imports": 9
      },
      "hash": "5311719b01722c563b748bd453045ff6",
      "issues": [
        "File too large (627 lines)",
        "Uses wildcard imports"
      ],
      "suggested_location": null,
      "complexity": 27,
      "dependencies": [
        "ast",
        "re",
        "pathlib",
        "datetime",
        "structlog",
        "dataclasses",
        "asyncio",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\god_class_splitter.py",
      "relative_path": "god_class_splitter.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 451,
        "loc": 331,
        "classes": 3,
        "functions": 14,
        "imports": 7
      },
      "hash": "6454b1440da370dcd026595dd3f53dce",
      "issues": [
        "Generic exception handling",
        "Print statements in production code",
        "Contains TODO/FIXME/XXX",
        "File is getting large (451 lines)",
        "Uses wildcard imports"
      ],
      "suggested_location": null,
      "complexity": 21,
      "dependencies": [
        "ast",
        "re",
        "pathlib",
        "shutil",
        "dataclasses",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\health_check.py",
      "relative_path": "health_check.py",
      "type": "other",
      "importance": "medium",
      "stats": {
        "lines": 88,
        "loc": 69,
        "classes": 0,
        "functions": 2,
        "imports": 7
      },
      "hash": "7fa2850460ae0a56527510ca4d9fd7e6",
      "issues": [],
      "suggested_location": null,
      "complexity": 3,
      "dependencies": [
        "sys",
        "src",
        "redis",
        "logging",
        "sqlite3",
        "typing"
      ]
    },
    {
      "path": ".\\immediate_cleanup.py",
      "relative_path": "immediate_cleanup.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 259,
        "loc": 207,
        "classes": 1,
        "functions": 10,
        "imports": 6
      },
      "hash": "9b36c2e88c9931962c76d3bac6b66eeb",
      "issues": [
        "Generic exception handling",
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 13,
      "dependencies": [
        "sys",
        "pathlib",
        "shutil",
        "glob",
        "subprocess",
        "os"
      ]
    },
    {
      "path": ".\\initialize_db.py",
      "relative_path": "initialize_db.py",
      "type": "other",
      "importance": "medium",
      "stats": {
        "lines": 146,
        "loc": 116,
        "classes": 0,
        "functions": 3,
        "imports": 6
      },
      "hash": "3a0d0a9bf1e23ada3007f10e8c3ebe61",
      "issues": [],
      "suggested_location": null,
      "complexity": 4,
      "dependencies": [
        "json",
        "datetime",
        "logging",
        "sqlite3",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\intelligent_config_merger.py",
      "relative_path": "intelligent_config_merger.py",
      "type": "config",
      "importance": "high",
      "stats": {
        "lines": 798,
        "loc": 556,
        "classes": 1,
        "functions": 14,
        "imports": 11
      },
      "hash": "aa9f529ee00cee78b4db36e517203e42",
      "issues": [
        "Generic exception handling",
        "Print statements in production code",
        "File too large (798 lines)"
      ],
      "suggested_location": "configs/intelligent_config_merger.py",
      "complexity": 18,
      "dependencies": [
        "re",
        "traceback",
        "pathlib",
        "json",
        "datetime",
        "difflib",
        "collections",
        "hashlib",
        "typing",
        "yaml",
        "os"
      ]
    },
    {
      "path": ".\\kafka_example_usage.py",
      "relative_path": "kafka_example_usage.py",
      "type": "other",
      "importance": "low",
      "stats": {
        "lines": 296,
        "loc": 208,
        "classes": 0,
        "functions": 0,
        "imports": 9
      },
      "hash": "dac5b2fcc0a67a664799f7422a628dcf",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 1,
      "dependencies": [
        "src",
        "datetime",
        "logging",
        "asyncio",
        "uuid"
      ]
    },
    {
      "path": ".\\migrate_config.py",
      "relative_path": "migrate_config.py",
      "type": "config",
      "importance": "medium",
      "stats": {
        "lines": 67,
        "loc": 48,
        "classes": 0,
        "functions": 1,
        "imports": 3
      },
      "hash": "81a1a08ed6638567a71255951e9d2d5c",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": "configs/migrate_config.py",
      "complexity": 1,
      "dependencies": [
        "pathlib",
        "json",
        "os"
      ]
    },
    {
      "path": ".\\migrate_secrets.py",
      "relative_path": "migrate_secrets.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 620,
        "loc": 466,
        "classes": 3,
        "functions": 21,
        "imports": 13
      },
      "hash": "c32e3f2e0b1537f5fea8a02106b6204a",
      "issues": [
        "Generic exception handling",
        "File too large (620 lines)"
      ],
      "suggested_location": null,
      "complexity": 29,
      "dependencies": [
        "re",
        "sys",
        "pathlib",
        "json",
        "datetime",
        "hvac",
        "logging",
        "dataclasses",
        "argparse",
        "cryptography",
        "typing",
        "yaml",
        "os"
      ]
    },
    {
      "path": ".\\model_benchmark.py",
      "relative_path": "model_benchmark.py",
      "type": "model",
      "importance": "medium",
      "stats": {
        "lines": 197,
        "loc": 157,
        "classes": 1,
        "functions": 5,
        "imports": 10
      },
      "hash": "60fa1827bf63e8932f559280d36676f0",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": "src/core/domain/entities/model_benchmark.py",
      "complexity": 9,
      "dependencies": [
        "json",
        "os",
        "logging",
        "argparse",
        "openai",
        "google",
        "anthropic",
        "typing",
        "time"
      ]
    },
    {
      "path": ".\\mtls_automation.py",
      "relative_path": "mtls_automation.py",
      "type": "other",
      "importance": "medium",
      "stats": {
        "lines": 501,
        "loc": 351,
        "classes": 1,
        "functions": 1,
        "imports": 12
      },
      "hash": "5d66d3a494dbc5ac106666cdfa0b60b7",
      "issues": [
        "Print statements in production code",
        "File too large (501 lines)"
      ],
      "suggested_location": null,
      "complexity": 5,
      "dependencies": [
        "sys",
        "pathlib",
        "json",
        "datetime",
        "logging",
        "argparse",
        "asyncio",
        "typing",
        "infrastructure",
        "yaml"
      ]
    },
    {
      "path": ".\\performance_profile.py",
      "relative_path": "performance_profile.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 173,
        "loc": 133,
        "classes": 1,
        "functions": 6,
        "imports": 23
      },
      "hash": "577f4aa345359fdc1170deb94d85f642",
      "issues": [
        "Contains TODO/FIXME/XXX"
      ],
      "suggested_location": null,
      "complexity": 12,
      "dependencies": [
        "sys",
        "json",
        "tracemalloc",
        "os",
        "logging",
        "argparse",
        "memory_profiler",
        "pstats",
        "cProfile",
        "typing",
        "io",
        "time"
      ]
    },
    {
      "path": ".\\professional_ddd_integration.py",
      "relative_path": "professional_ddd_integration.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 397,
        "loc": 272,
        "classes": 1,
        "functions": 12,
        "imports": 5
      },
      "hash": "225a1dbc581fa1795535d2ec21630b8f",
      "issues": [
        "Generic exception handling",
        "Print statements in production code",
        "File is getting large (397 lines)"
      ],
      "suggested_location": null,
      "complexity": 15,
      "dependencies": [
        "pathlib",
        "shutil",
        "datetime",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\professional_ddd_integration_v2.py",
      "relative_path": "professional_ddd_integration_v2.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 276,
        "loc": 197,
        "classes": 1,
        "functions": 10,
        "imports": 6
      },
      "hash": "ca27315cd4dc09d00fb6d83901774357",
      "issues": [
        "Generic exception handling",
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 13,
      "dependencies": [
        "pathlib",
        "shutil",
        "json",
        "datetime",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\project_analyzer.py",
      "relative_path": "project_analyzer.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 494,
        "loc": 348,
        "classes": 1,
        "functions": 14,
        "imports": 9
      },
      "hash": "9d31ea92f05ad13886c9a7d8c48dd41b",
      "issues": [
        "Uses eval() - security risk",
        "Uses exec() - security risk",
        "Uses pickle.loads - security risk",
        "Uses os.system - use subprocess instead",
        "Possible hardcoded password",
        "Generic exception handling",
        "Print statements in production code",
        "Contains TODO/FIXME/XXX",
        "File is getting large (494 lines)",
        "Uses wildcard imports"
      ],
      "suggested_location": null,
      "complexity": 17,
      "dependencies": [
        "ast",
        "re",
        "pathlib",
        "json",
        "datetime",
        "collections",
        "hashlib",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\proper_ddd_splitter.py",
      "relative_path": "proper_ddd_splitter.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 529,
        "loc": 412,
        "classes": 1,
        "functions": 7,
        "imports": 5
      },
      "hash": "eeba084928b9d44be0b8ca72d1b3d044",
      "issues": [
        "Print statements in production code",
        "File too large (529 lines)"
      ],
      "suggested_location": null,
      "complexity": 10,
      "dependencies": [
        "pathlib",
        "shutil",
        "datetime",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\quick_config_analyzer.py",
      "relative_path": "quick_config_analyzer.py",
      "type": "config",
      "importance": "high",
      "stats": {
        "lines": 387,
        "loc": 283,
        "classes": 1,
        "functions": 11,
        "imports": 8
      },
      "hash": "133894511c15cda5d76e350c101cd348",
      "issues": [
        "Generic exception handling",
        "Print statements in production code",
        "File is getting large (387 lines)"
      ],
      "suggested_location": "configs/quick_config_analyzer.py",
      "complexity": 14,
      "dependencies": [
        "traceback",
        "pathlib",
        "json",
        "datetime",
        "collections",
        "hashlib",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\quick_god_class_splitter.py",
      "relative_path": "quick_god_class_splitter.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 414,
        "loc": 295,
        "classes": 1,
        "functions": 9,
        "imports": 5
      },
      "hash": "c6258f8e8fd520874f47a11837683e15",
      "issues": [
        "Print statements in production code",
        "File is getting large (414 lines)"
      ],
      "suggested_location": null,
      "complexity": 12,
      "dependencies": [
        "re",
        "pathlib",
        "datetime",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\run_all_fixes.py",
      "relative_path": "run_all_fixes.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 432,
        "loc": 330,
        "classes": 1,
        "functions": 14,
        "imports": 13
      },
      "hash": "f6de8d8b72bbc4c4310db9b8db7b13e4",
      "issues": [
        "Generic exception handling",
        "Print statements in production code",
        "Contains TODO/FIXME/XXX",
        "File is getting large (432 lines)"
      ],
      "suggested_location": null,
      "complexity": 18,
      "dependencies": [
        "exception_fixer",
        "sys",
        "re",
        "ast",
        "pathlib",
        "god_class_splitter",
        "json",
        "datetime",
        "glob",
        "immediate_cleanup",
        "subprocess",
        "time"
      ]
    },
    {
      "path": ".\\security_audit_and_fix.py",
      "relative_path": "security_audit_and_fix.py",
      "type": "other",
      "importance": "critical",
      "stats": {
        "lines": 575,
        "loc": 428,
        "classes": 4,
        "functions": 11,
        "imports": 12
      },
      "hash": "b1a1b560e6211cf5cb4a71fdaba2773e",
      "issues": [
        "Uses eval() - security risk",
        "Uses exec() - security risk",
        "Generic exception handling",
        "Print statements in production code",
        "Contains TODO/FIXME/XXX",
        "File too large (575 lines)"
      ],
      "suggested_location": null,
      "complexity": 21,
      "dependencies": [
        "ast",
        "re",
        "pathlib",
        "json",
        "datetime",
        "logging",
        "dataclasses",
        "asyncio",
        "argparse",
        "typing",
        "enum",
        "os"
      ]
    },
    {
      "path": ".\\security_cleanup.py",
      "relative_path": "security_cleanup.py",
      "type": "other",
      "importance": "critical",
      "stats": {
        "lines": 569,
        "loc": 429,
        "classes": 1,
        "functions": 13,
        "imports": 8
      },
      "hash": "f760e77d8a55a3404170ee1ddf8abb84",
      "issues": [
        "Print statements in production code",
        "File too large (569 lines)"
      ],
      "suggested_location": null,
      "complexity": 16,
      "dependencies": [
        "re",
        "shutil",
        "pathlib",
        "json",
        "logging",
        "typing",
        "secrets",
        "os"
      ]
    },
    {
      "path": ".\\security_scan.py",
      "relative_path": "security_scan.py",
      "type": "other",
      "importance": "critical",
      "stats": {
        "lines": 240,
        "loc": 183,
        "classes": 1,
        "functions": 10,
        "imports": 7
      },
      "hash": "bbcade27d4cce21cb9f4f2733db5bbe4",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 13,
      "dependencies": [
        "sys",
        "json",
        "logging",
        "argparse",
        "subprocess",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\service_organizer_analyzer.py",
      "relative_path": "service_organizer_analyzer.py",
      "type": "service",
      "importance": "high",
      "stats": {
        "lines": 545,
        "loc": 415,
        "classes": 1,
        "functions": 11,
        "imports": 7
      },
      "hash": "9e82464e4f2862def2c3a25d5a4b5b40",
      "issues": [
        "Print statements in production code",
        "File too large (545 lines)"
      ],
      "suggested_location": "src/core/services/service_organizer_analyzer.py",
      "complexity": 14,
      "dependencies": [
        "traceback",
        "pathlib",
        "shutil",
        "json",
        "datetime",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\setup_github_secrets_scanner.py",
      "relative_path": "setup_github_secrets_scanner.py",
      "type": "other",
      "importance": "low",
      "stats": {
        "lines": 377,
        "loc": 306,
        "classes": 0,
        "functions": 0,
        "imports": 0
      },
      "hash": "eaf2c14585192f8c1997946ff88f06cd",
      "issues": [
        "Print statements in production code",
        "File is getting large (377 lines)"
      ],
      "suggested_location": null,
      "complexity": 0,
      "dependencies": []
    },
    {
      "path": ".\\smart_merge_strategy.py",
      "relative_path": "smart_merge_strategy.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 395,
        "loc": 283,
        "classes": 1,
        "functions": 8,
        "imports": 6
      },
      "hash": "eaed6feb2cc9e43adce5fc0b4514fb89",
      "issues": [
        "Print statements in production code",
        "Contains TODO/FIXME/XXX",
        "File is getting large (395 lines)"
      ],
      "suggested_location": null,
      "complexity": 11,
      "dependencies": [
        "traceback",
        "pathlib",
        "shutil",
        "datetime",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\src_cleanup_validator.py",
      "relative_path": "src_cleanup_validator.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 370,
        "loc": 290,
        "classes": 2,
        "functions": 10,
        "imports": 9
      },
      "hash": "bbea440d4f705b16de76c2a5cf8ff045",
      "issues": [
        "Print statements in production code",
        "File is getting large (370 lines)"
      ],
      "suggested_location": null,
      "complexity": 15,
      "dependencies": [
        "ast",
        "sys",
        "importlib",
        "pathlib",
        "datetime",
        "logging",
        "dataclasses",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\src_deduplication_analyzer.py",
      "relative_path": "src_deduplication_analyzer.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 301,
        "loc": 230,
        "classes": 2,
        "functions": 14,
        "imports": 14
      },
      "hash": "8445f649e4a4876bd357f849a9082b75",
      "issues": [
        "Print statements in production code",
        "File is getting large (301 lines)"
      ],
      "suggested_location": null,
      "complexity": 20,
      "dependencies": [
        "sys",
        "shutil",
        "pathlib",
        "json",
        "datetime",
        "difflib",
        "logging",
        "dataclasses",
        "warnings",
        "collections",
        "hashlib",
        "filecmp",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\system_diagnostics.py",
      "relative_path": "system_diagnostics.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 172,
        "loc": 146,
        "classes": 1,
        "functions": 7,
        "imports": 11
      },
      "hash": "8adcbed0c1d2aa03662da390407cb1f0",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 11,
      "dependencies": [
        "sys",
        "torch",
        "subprocess",
        "socket",
        "json",
        "logging",
        "psutil",
        "platform",
        "argparse",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\teddy_ws_client.py",
      "relative_path": "teddy_ws_client.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 343,
        "loc": 237,
        "classes": 1,
        "functions": 7,
        "imports": 21
      },
      "hash": "adb511a7d736d1ed000054aefa457ad8",
      "issues": [
        "Generic exception handling",
        "Print statements in production code",
        "File is getting large (343 lines)",
        "Contains global variables"
      ],
      "suggested_location": null,
      "complexity": 13,
      "dependencies": [
        "pydub",
        "base64",
        "sys",
        "time",
        "json",
        "datetime",
        "simpleaudio",
        "threading",
        "asyncio",
        "numpy",
        "wave",
        "websockets",
        "sounddevice",
        "io",
        "queue",
        "os"
      ]
    },
    {
      "path": ".\\usage_pattern_analyzer.py",
      "relative_path": "usage_pattern_analyzer.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 519,
        "loc": 377,
        "classes": 1,
        "functions": 11,
        "imports": 8
      },
      "hash": "43f473e7b8a8cf8f0979e92afeff455e",
      "issues": [
        "Generic exception handling",
        "Print statements in production code",
        "Contains TODO/FIXME/XXX",
        "File too large (519 lines)"
      ],
      "suggested_location": null,
      "complexity": 14,
      "dependencies": [
        "ast",
        "re",
        "traceback",
        "pathlib",
        "datetime",
        "collections",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\vault_secret_manager.py",
      "relative_path": "vault_secret_manager.py",
      "type": "service",
      "importance": "high",
      "stats": {
        "lines": 273,
        "loc": 201,
        "classes": 3,
        "functions": 16,
        "imports": 8
      },
      "hash": "068441f0d7f8ae72644f23461dcabc19",
      "issues": [
        "Generic exception handling",
        "Print statements in production code"
      ],
      "suggested_location": "src/core/services/vault_secret_manager.py",
      "complexity": 23,
      "dependencies": [
        "sys",
        "pathlib",
        "json",
        "hvac",
        "logging",
        "dataclasses",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\verify_ddd_structure.py",
      "relative_path": "verify_ddd_structure.py",
      "type": "other",
      "importance": "medium",
      "stats": {
        "lines": 167,
        "loc": 123,
        "classes": 0,
        "functions": 5,
        "imports": 2
      },
      "hash": "7799c3a3aa4d210fd6fa2082a802f741",
      "issues": [
        "Generic exception handling",
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 5,
      "dependencies": [
        "pathlib",
        "os"
      ]
    },
    {
      "path": ".\\migration\\ddd_architecture_analyzer.py",
      "relative_path": "migration\\ddd_architecture_analyzer.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 669,
        "loc": 507,
        "classes": 6,
        "functions": 28,
        "imports": 12
      },
      "hash": "5de4d655b318e8f1d3019fba8b5fd2fe",
      "issues": [
        "Print statements in production code",
        "File too large (669 lines)"
      ],
      "suggested_location": null,
      "complexity": 42,
      "dependencies": [
        "ast",
        "sys",
        "re",
        "networkx",
        "pathlib",
        "json",
        "datetime",
        "logging",
        "dataclasses",
        "collections",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\migration\\ddd_structure_creator.py",
      "relative_path": "migration\\ddd_structure_creator.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 854,
        "loc": 647,
        "classes": 1,
        "functions": 10,
        "imports": 4
      },
      "hash": "9e9d1e71d3dad8174c969a6bb12a0667",
      "issues": [
        "Print statements in production code",
        "File too large (854 lines)"
      ],
      "suggested_location": null,
      "complexity": 12,
      "dependencies": [
        "pathlib",
        "datetime",
        "typing",
        "os"
      ]
    },
    {
      "path": ".\\migration\\quick_ddd_setup.py",
      "relative_path": "migration\\quick_ddd_setup.py",
      "type": "other",
      "importance": "high",
      "stats": {
        "lines": 251,
        "loc": 186,
        "classes": 1,
        "functions": 6,
        "imports": 2
      },
      "hash": "5dcf2a64961143a56835510c64f898f1",
      "issues": [
        "Print statements in production code"
      ],
      "suggested_location": null,
      "complexity": 8,
      "dependencies": [
        "pathlib",
        "os"
      ]
    }
  ],
  "file_hashes": {
    "a4e75da6f9dd6fb74af9c5fe24751caf": [
      ".\\advanced_deep_analyzer.py"
    ],
    "66808b53663ba2b1c495d04df327f4de": [
      ".\\advanced_directories_analyzer.py"
    ],
    "eeaf1a99a09147cdbcb9cb0bfa4cd795": [
      ".\\backup_database.py"
    ],
    "caa022fd049aaea400b7ef792a07e970": [
      ".\\chaos_experiment_runner.py"
    ],
    "8fdf83c24c46555a76aba36072085f5f": [
      ".\\cleanup_ddd_duplicates.py"
    ],
    "ba387ef15c83dd177193f56b466a4fdc": [
      ".\\clean_architecture_relocator.py"
    ],
    "22947972c957bbe1911df2ed3bb28323": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "9b4b33a0cfc7b20bfdd19eef8e650857": [
      ".\\comprehensive_cleanup.py"
    ],
    "c695293ff0748f2f39c3cf7c08711bcb": [
      ".\\comprehensive_fixer.py"
    ],
    "8b833688a604af24fa91e537c706690e": [
      ".\\comprehensive_fix_and_report.py"
    ],
    "9b9fe291fe9243a22dccf2f6626f9971": [
      ".\\comprehensive_project_analyzer.py"
    ],
    "7b89b4530ed2c6adc2f586188e8371e2": [
      ".\\configure_logging.py"
    ],
    "25ef1cd529c2242f11c99713b3a5a0e4": [
      ".\\config_hardware_esp32_analyzer.py"
    ],
    "63432d259edcd7484cdb1f79f874923b": [
      ".\\content_similarity_analyzer.py"
    ],
    "818ef6782a17f429dc9982b8af35a787": [
      ".\\data_migration.py"
    ],
    "f44ff7394af74c9385935d2bbdb1b78f": [
      ".\\ddd_integration_simple.py"
    ],
    "74de6bce8fe3568bf1de7882ad5ab9cf": [
      ".\\demo_distributed_ai.py"
    ],
    "f72ae181cf5689c5cbfef84c836529a4": [
      ".\\demo_edge_ai.py"
    ],
    "bf6df2cc0b950e8d29abe57909af9e6a": [
      ".\\demo_homomorphic_encryption.py"
    ],
    "dce5e06a6884bacbeb2586ca6a4156fb": [
      ".\\demo_multi_layer_cache.py"
    ],
    "255190796308e43169af741c182c9658": [
      ".\\exception_fixer.py"
    ],
    "5cbf14eb1a4291a5275f37129b5a9aec": [
      ".\\fix_ddd_integration.py"
    ],
    "6f1e9626855293f2f2a0bd0b19179ea3": [
      ".\\fix_imports_checker.py"
    ],
    "71725eb8a6e90122eb390161aad6aa49": [
      ".\\frontend_api_cache_analyzer.py"
    ],
    "d35ed72c0ae25a25ffbc1ae97fd08955": [
      ".\\generate_docs.py"
    ],
    "33661c9e1a728ba9a8bac5ef43d2709a": [
      ".\\generate_encryption_key.py"
    ],
    "c80b52234e29997eb1ad8a1fe78bcd23": [
      ".\\generate_env.py"
    ],
    "9485f2b2211944f3167e8421b5f5ef8c": [
      ".\\generate_keys.py"
    ],
    "1fabc33251b46531add1d2c8267c40c6": [
      ".\\generate_secure_keys.py"
    ],
    "0ebbc0b595a6ed173f6cb7856657f230": [
      ".\\git_secrets_cleanup.py"
    ],
    "5311719b01722c563b748bd453045ff6": [
      ".\\god_class_refactor_ddd.py"
    ],
    "6454b1440da370dcd026595dd3f53dce": [
      ".\\god_class_splitter.py"
    ],
    "7fa2850460ae0a56527510ca4d9fd7e6": [
      ".\\health_check.py"
    ],
    "9b36c2e88c9931962c76d3bac6b66eeb": [
      ".\\immediate_cleanup.py"
    ],
    "3a0d0a9bf1e23ada3007f10e8c3ebe61": [
      ".\\initialize_db.py"
    ],
    "aa9f529ee00cee78b4db36e517203e42": [
      ".\\intelligent_config_merger.py"
    ],
    "dac5b2fcc0a67a664799f7422a628dcf": [
      ".\\kafka_example_usage.py"
    ],
    "81a1a08ed6638567a71255951e9d2d5c": [
      ".\\migrate_config.py"
    ],
    "c32e3f2e0b1537f5fea8a02106b6204a": [
      ".\\migrate_secrets.py"
    ],
    "60fa1827bf63e8932f559280d36676f0": [
      ".\\model_benchmark.py"
    ],
    "5d66d3a494dbc5ac106666cdfa0b60b7": [
      ".\\mtls_automation.py"
    ],
    "577f4aa345359fdc1170deb94d85f642": [
      ".\\performance_profile.py"
    ],
    "225a1dbc581fa1795535d2ec21630b8f": [
      ".\\professional_ddd_integration.py"
    ],
    "ca27315cd4dc09d00fb6d83901774357": [
      ".\\professional_ddd_integration_v2.py"
    ],
    "9d31ea92f05ad13886c9a7d8c48dd41b": [
      ".\\project_analyzer.py"
    ],
    "eeba084928b9d44be0b8ca72d1b3d044": [
      ".\\proper_ddd_splitter.py"
    ],
    "133894511c15cda5d76e350c101cd348": [
      ".\\quick_config_analyzer.py"
    ],
    "c6258f8e8fd520874f47a11837683e15": [
      ".\\quick_god_class_splitter.py"
    ],
    "f6de8d8b72bbc4c4310db9b8db7b13e4": [
      ".\\run_all_fixes.py"
    ],
    "b1a1b560e6211cf5cb4a71fdaba2773e": [
      ".\\security_audit_and_fix.py"
    ],
    "f760e77d8a55a3404170ee1ddf8abb84": [
      ".\\security_cleanup.py"
    ],
    "bbcade27d4cce21cb9f4f2733db5bbe4": [
      ".\\security_scan.py"
    ],
    "9e82464e4f2862def2c3a25d5a4b5b40": [
      ".\\service_organizer_analyzer.py"
    ],
    "eaf2c14585192f8c1997946ff88f06cd": [
      ".\\setup_github_secrets_scanner.py"
    ],
    "eaed6feb2cc9e43adce5fc0b4514fb89": [
      ".\\smart_merge_strategy.py"
    ],
    "bbea440d4f705b16de76c2a5cf8ff045": [
      ".\\src_cleanup_validator.py"
    ],
    "8445f649e4a4876bd357f849a9082b75": [
      ".\\src_deduplication_analyzer.py"
    ],
    "8adcbed0c1d2aa03662da390407cb1f0": [
      ".\\system_diagnostics.py"
    ],
    "adb511a7d736d1ed000054aefa457ad8": [
      ".\\teddy_ws_client.py"
    ],
    "43f473e7b8a8cf8f0979e92afeff455e": [
      ".\\usage_pattern_analyzer.py"
    ],
    "068441f0d7f8ae72644f23461dcabc19": [
      ".\\vault_secret_manager.py"
    ],
    "7799c3a3aa4d210fd6fa2082a802f741": [
      ".\\verify_ddd_structure.py"
    ],
    "5de4d655b318e8f1d3019fba8b5fd2fe": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "9e9d1e71d3dad8174c969a6bb12a0667": [
      ".\\migration\\ddd_structure_creator.py"
    ],
    "5dcf2a64961143a56835510c64f898f1": [
      ".\\migration\\quick_ddd_setup.py"
    ]
  },
  "function_signatures": {
    "main()": [
      ".\\advanced_deep_analyzer.py",
      ".\\advanced_directories_analyzer.py",
      ".\\backup_database.py",
      ".\\chaos_experiment_runner.py",
      ".\\clean_architecture_relocator.py",
      ".\\comprehensive_architecture_analyzer.py",
      ".\\comprehensive_project_analyzer.py",
      ".\\configure_logging.py",
      ".\\config_hardware_esp32_analyzer.py",
      ".\\content_similarity_analyzer.py",
      ".\\data_migration.py",
      ".\\ddd_integration_simple.py",
      ".\\exception_fixer.py",
      ".\\fix_imports_checker.py",
      ".\\frontend_api_cache_analyzer.py",
      ".\\generate_docs.py",
      ".\\generate_encryption_key.py",
      ".\\generate_env.py",
      ".\\generate_keys.py",
      ".\\generate_secure_keys.py",
      ".\\git_secrets_cleanup.py",
      ".\\god_class_splitter.py",
      ".\\health_check.py",
      ".\\immediate_cleanup.py",
      ".\\initialize_db.py",
      ".\\intelligent_config_merger.py",
      ".\\migrate_secrets.py",
      ".\\model_benchmark.py",
      ".\\performance_profile.py",
      ".\\professional_ddd_integration.py",
      ".\\project_analyzer.py",
      ".\\quick_config_analyzer.py",
      ".\\run_all_fixes.py",
      ".\\security_cleanup.py",
      ".\\security_scan.py",
      ".\\service_organizer_analyzer.py",
      ".\\smart_merge_strategy.py",
      ".\\src_cleanup_validator.py",
      ".\\src_deduplication_analyzer.py",
      ".\\system_diagnostics.py",
      ".\\usage_pattern_analyzer.py",
      ".\\vault_secret_manager.py",
      ".\\verify_ddd_structure.py",
      ".\\migration\\ddd_architecture_analyzer.py",
      ".\\migration\\ddd_structure_creator.py",
      ".\\migration\\quick_ddd_setup.py"
    ],
    "__init__(self,base_path)": [
      ".\\advanced_deep_analyzer.py",
      ".\\clean_architecture_relocator.py",
      ".\\comprehensive_architecture_analyzer.py",
      ".\\content_similarity_analyzer.py",
      ".\\frontend_api_cache_analyzer.py",
      ".\\intelligent_config_merger.py",
      ".\\quick_config_analyzer.py",
      ".\\service_organizer_analyzer.py",
      ".\\smart_merge_strategy.py",
      ".\\usage_pattern_analyzer.py"
    ],
    "analyze_large_files(self,min_size_kb)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "analyze_security_and_compliance_files(self)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "analyze_configuration_ecosystem(self)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "analyze_testing_infrastructure(self)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "analyze_frontend_and_ui(self)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "analyze_infrastructure_and_deployment(self)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_analyze_file_complexity(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_count_lines(self,file_path)": [
      ".\\advanced_deep_analyzer.py",
      ".\\professional_ddd_integration.py"
    ],
    "_categorize_large_file(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_get_large_file_recommendations(self,size_kb,line_count,complexity)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_analyze_security_file(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_get_security_file_type(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_scan_security_issues(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_assess_security_quality(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_identify_security_issues(self)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_get_security_recommendations(self)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_analyze_config_file(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_analyze_json_config(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_detect_secrets_in_data(self,data)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_find_config_issues(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_get_config_recommendations(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_find_config_redundancies(self,config_analysis)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_analyze_test_file(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_estimate_test_coverage(self,content)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_analyze_test_coverage(self)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_analyze_frontend_file(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_analyze_frontend_complexity(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_analyze_package_json(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_analyze_infra_file(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_get_infra_type(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "_assess_infra_complexity(self,file_path)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "generate_comprehensive_report(self,analyses)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "run_complete_deep_analysis(self)": [
      ".\\advanced_deep_analyzer.py"
    ],
    "__init__(self)": [
      ".\\advanced_directories_analyzer.py",
      ".\\chaos_experiment_runner.py",
      ".\\comprehensive_cleanup.py",
      ".\\comprehensive_fix_and_report.py",
      ".\\config_hardware_esp32_analyzer.py",
      ".\\demo_distributed_ai.py",
      ".\\demo_edge_ai.py",
      ".\\demo_homomorphic_encryption.py",
      ".\\demo_multi_layer_cache.py",
      ".\\exception_fixer.py",
      ".\\fix_ddd_integration.py",
      ".\\fix_imports_checker.py",
      ".\\generate_docs.py",
      ".\\git_secrets_cleanup.py",
      ".\\god_class_refactor_ddd.py",
      ".\\god_class_refactor_ddd.py",
      ".\\immediate_cleanup.py",
      ".\\mtls_automation.py",
      ".\\performance_profile.py",
      ".\\proper_ddd_splitter.py",
      ".\\run_all_fixes.py",
      ".\\security_scan.py",
      ".\\system_diagnostics.py"
    ],
    "ensure_directories(self)": [
      ".\\advanced_directories_analyzer.py",
      ".\\config_hardware_esp32_analyzer.py",
      ".\\src_deduplication_analyzer.py"
    ],
    "calculate_file_hash(self,file_path)": [
      ".\\advanced_directories_analyzer.py",
      ".\\comprehensive_architecture_analyzer.py",
      ".\\config_hardware_esp32_analyzer.py",
      ".\\content_similarity_analyzer.py",
      ".\\frontend_api_cache_analyzer.py"
    ],
    "classify_file(self,file_path)": [
      ".\\advanced_directories_analyzer.py"
    ],
    "get_content_preview(self,file_path,max_lines)": [
      ".\\advanced_directories_analyzer.py",
      ".\\config_hardware_esp32_analyzer.py",
      ".\\src_deduplication_analyzer.py"
    ],
    "scan_all_directories(self)": [
      ".\\advanced_directories_analyzer.py",
      ".\\config_hardware_esp32_analyzer.py"
    ],
    "find_exact_duplicates(self)": [
      ".\\advanced_directories_analyzer.py",
      ".\\config_hardware_esp32_analyzer.py",
      ".\\src_deduplication_analyzer.py"
    ],
    "find_similar_files(self,similarity_threshold)": [
      ".\\advanced_directories_analyzer.py",
      ".\\config_hardware_esp32_analyzer.py",
      ".\\src_deduplication_analyzer.py"
    ],
    "_should_compare_files(self,path1,path2)": [
      ".\\advanced_directories_analyzer.py",
      ".\\config_hardware_esp32_analyzer.py"
    ],
    "_calculate_similarity(self,path1,path2)": [
      ".\\advanced_directories_analyzer.py",
      ".\\config_hardware_esp32_analyzer.py",
      ".\\src_deduplication_analyzer.py"
    ],
    "cleanup_generated_files(self)": [
      ".\\advanced_directories_analyzer.py",
      ".\\config_hardware_esp32_analyzer.py"
    ],
    "move_exact_duplicates(self)": [
      ".\\advanced_directories_analyzer.py",
      ".\\config_hardware_esp32_analyzer.py",
      ".\\src_deduplication_analyzer.py"
    ],
    "_choose_primary_file(self,file_paths)": [
      ".\\advanced_directories_analyzer.py"
    ],
    "merge_similar_files(self)": [
      ".\\advanced_directories_analyzer.py",
      ".\\config_hardware_esp32_analyzer.py"
    ],
    "_merge_test_files(self,path1,path2)": [
      ".\\advanced_directories_analyzer.py"
    ],
    "_merge_config_files(self,path1,path2)": [
      ".\\advanced_directories_analyzer.py"
    ],
    "_merge_json_configs(self,path1,path2)": [
      ".\\advanced_directories_analyzer.py"
    ],
    "_merge_generic_files(self,path1,path2)": [
      ".\\advanced_directories_analyzer.py"
    ],
    "_archive_merged_file(self,file_path)": [
      ".\\advanced_directories_analyzer.py",
      ".\\config_hardware_esp32_analyzer.py"
    ],
    "generate_comprehensive_report(self)": [
      ".\\advanced_directories_analyzer.py",
      ".\\comprehensive_architecture_analyzer.py",
      ".\\config_hardware_esp32_analyzer.py",
      ".\\fix_imports_checker.py",
      ".\\security_scan.py"
    ],
    "run_complete_analysis(self)": [
      ".\\advanced_directories_analyzer.py",
      ".\\config_hardware_esp32_analyzer.py"
    ],
    "backup_database(source_db,backup_dir)": [
      ".\\backup_database.py"
    ],
    "restore_database(backup_file,target_db)": [
      ".\\backup_database.py"
    ],
    "list_backups(backup_dir)": [
      ".\\backup_database.py"
    ],
    "_calculate_overall_success(self,results)": [
      ".\\chaos_experiment_runner.py"
    ],
    "verify_integration_success()": [
      ".\\cleanup_ddd_duplicates.py"
    ],
    "get_ddd_folders()": [
      ".\\cleanup_ddd_duplicates.py"
    ],
    "move_to_legacy(folder_path)": [
      ".\\cleanup_ddd_duplicates.py"
    ],
    "cleanup_ddd_folders()": [
      ".\\cleanup_ddd_duplicates.py"
    ],
    "create_cleanup_report(success_count,total_count)": [
      ".\\cleanup_ddd_duplicates.py"
    ],
    "_create_relocation_plan(self)": [
      ".\\clean_architecture_relocator.py"
    ],
    "validate_source_files(self)": [
      ".\\clean_architecture_relocator.py"
    ],
    "create_target_directories(self)": [
      ".\\clean_architecture_relocator.py"
    ],
    "relocate_services(self)": [
      ".\\clean_architecture_relocator.py"
    ],
    "cleanup_empty_directories(self)": [
      ".\\clean_architecture_relocator.py"
    ],
    "create_updated_imports_guide(self)": [
      ".\\clean_architecture_relocator.py"
    ],
    "generate_relocation_report(self,validation_results,relocation_results,cleanup_results)": [
      ".\\clean_architecture_relocator.py"
    ],
    "run_complete_relocation(self)": [
      ".\\clean_architecture_relocator.py"
    ],
    "scan_for_duplicates(self)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "extract_service_type(self,filename)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "extract_config_type(self,filename)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "_analyze_hash_duplicates(self,file_hashes)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "_analyze_name_duplicates(self,file_names)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "_analyze_service_duplicates(self,service_files)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "_analyze_config_duplicates(self,config_files)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "evaluate_files(self)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "_calculate_file_score(self,file_path,critical_files)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "classify_files(self)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "_get_classification_reason(self,evaluation)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "propose_merge_strategy(self)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "_select_best_file(self,files)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "_get_merge_approach(self,service_type)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "_extract_unique_features(self,files)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "propose_clean_architecture(self)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "calculate_clean_score(self)": [
      ".\\comprehensive_architecture_analyzer.py"
    ],
    "run_comprehensive_analysis(self)": [
      ".\\comprehensive_architecture_analyzer.py",
      ".\\quick_config_analyzer.py"
    ],
    "log(self,message)": [
      ".\\comprehensive_cleanup.py",
      ".\\comprehensive_fix_and_report.py",
      ".\\professional_ddd_integration_v2.py",
      ".\\proper_ddd_splitter.py"
    ],
    "remove_all_backup_files(self)": [
      ".\\comprehensive_cleanup.py"
    ],
    "move_remaining_ddd_folders(self)": [
      ".\\comprehensive_cleanup.py"
    ],
    "remove_duplicate_god_classes(self)": [
      ".\\comprehensive_cleanup.py"
    ],
    "verify_cleanup_success(self)": [
      ".\\comprehensive_cleanup.py"
    ],
    "generate_cleanup_report(self)": [
      ".\\comprehensive_cleanup.py",
      ".\\security_cleanup.py"
    ],
    "run_comprehensive_cleanup(self)": [
      ".\\comprehensive_cleanup.py"
    ],
    "create_test_files()": [
      ".\\comprehensive_fixer.py"
    ],
    "__init__(self,src_path)": [
      ".\\comprehensive_fixer.py",
      ".\\god_class_refactor_ddd.py",
      ".\\professional_ddd_integration.py",
      ".\\quick_god_class_splitter.py"
    ],
    "fix_all_issues(self)": [
      ".\\comprehensive_fixer.py"
    ],
    "_fix_file(self,file_path)": [
      ".\\comprehensive_fixer.py"
    ],
    "_fix_exception_handling(self,content,file_path)": [
      ".\\comprehensive_fixer.py"
    ],
    "_fix_print_statements(self,content,file_path)": [
      ".\\comprehensive_fixer.py"
    ],
    "_resolve_todos(self,content,file_path)": [
      ".\\comprehensive_fixer.py"
    ],
    "_add_type_hints(self,content,file_path)": [
      ".\\comprehensive_fixer.py"
    ],
    "_print_summary(self)": [
      ".\\comprehensive_fixer.py"
    ],
    "fix_imports_in_file(self,file_path)": [
      ".\\comprehensive_fix_and_report.py"
    ],
    "scan_and_fix_all_imports(self)": [
      ".\\comprehensive_fix_and_report.py"
    ],
    "verify_structure_completeness(self)": [
      ".\\comprehensive_fix_and_report.py"
    ],
    "count_lines_recovered(self)": [
      ".\\comprehensive_fix_and_report.py"
    ],
    "generate_final_comprehensive_report(self)": [
      ".\\comprehensive_fix_and_report.py"
    ],
    "run_comprehensive_fix(self)": [
      ".\\comprehensive_fix_and_report.py"
    ],
    "__init__(self,project_root)": [
      ".\\comprehensive_project_analyzer.py",
      ".\\professional_ddd_integration_v2.py",
      ".\\project_analyzer.py",
      ".\\security_audit_and_fix.py",
      ".\\security_cleanup.py",
      ".\\migration\\ddd_architecture_analyzer.py",
      ".\\migration\\ddd_structure_creator.py",
      ".\\migration\\quick_ddd_setup.py"
    ],
    "analyze_ast(self,file_path,content)": [
      ".\\comprehensive_project_analyzer.py"
    ],
    "analyze_content_patterns(self,content)": [
      ".\\comprehensive_project_analyzer.py"
    ],
    "determine_file_type(self,file_path,content,ast_info)": [
      ".\\comprehensive_project_analyzer.py"
    ],
    "determine_importance(self,file_path,ast_info,patterns)": [
      ".\\comprehensive_project_analyzer.py"
    ],
    "suggest_new_location(self,file_path,file_type,ast_info)": [
      ".\\comprehensive_project_analyzer.py"
    ],
    "find_similar_files(self,file_path,content_hash)": [
      ".\\comprehensive_project_analyzer.py"
    ],
    "identify_issues(self,file_path,ast_info,patterns,file_type)": [
      ".\\comprehensive_project_analyzer.py"
    ],
    "calculate_content_hash(self,content)": [
      ".\\comprehensive_project_analyzer.py"
    ],
    "analyze_file(self,file_path)": [
      ".\\comprehensive_project_analyzer.py",
      ".\\exception_fixer.py"
    ],
    "extract_main_purpose(self,content,ast_info)": [
      ".\\comprehensive_project_analyzer.py"
    ],
    "analyze_project(self)": [
      ".\\comprehensive_project_analyzer.py",
      ".\\project_analyzer.py",
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "generate_summary(self,results)": [
      ".\\comprehensive_project_analyzer.py"
    ],
    "configure_logging(log_level,log_dir,config_path)": [
      ".\\configure_logging.py"
    ],
    "_deep_merge(base,update)": [
      ".\\configure_logging.py"
    ],
    "log_system_info()": [
      ".\\configure_logging.py"
    ],
    "_merge_json_files(self,path1,path2)": [
      ".\\config_hardware_esp32_analyzer.py"
    ],
    "_merge_code_files(self,path1,path2)": [
      ".\\config_hardware_esp32_analyzer.py"
    ],
    "_merge_doc_files(self,path1,path2)": [
      ".\\config_hardware_esp32_analyzer.py"
    ],
    "get_file_content_normalized(self,file_path)": [
      ".\\content_similarity_analyzer.py"
    ],
    "calculate_similarity_percentage(self,content1,content2)": [
      ".\\content_similarity_analyzer.py"
    ],
    "analyze_service_group(self,group_name)": [
      ".\\content_similarity_analyzer.py"
    ],
    "execute_cleanup_actions(self,group_name,analysis)": [
      ".\\content_similarity_analyzer.py"
    ],
    "generate_detailed_analysis_report(self,all_results)": [
      ".\\content_similarity_analyzer.py"
    ],
    "run_complete_similarity_analysis(self)": [
      ".\\content_similarity_analyzer.py"
    ],
    "__init__(self,db_path)": [
      ".\\data_migration.py"
    ],
    "_connect_db(self)": [
      ".\\data_migration.py"
    ],
    "migrate_v1_to_v2(self)": [
      ".\\data_migration.py"
    ],
    "migrate_v2_to_v3(self)": [
      ".\\data_migration.py"
    ],
    "backup_before_migration(self)": [
      ".\\data_migration.py"
    ],
    "run_migrations(self)": [
      ".\\data_migration.py"
    ],
    "create_legacy_folder()": [
      ".\\ddd_integration_simple.py"
    ],
    "move_ddd_domains()": [
      ".\\ddd_integration_simple.py"
    ],
    "copy_structure(source_dir,target_dir)": [
      ".\\ddd_integration_simple.py"
    ],
    "create_init_files()": [
      ".\\ddd_integration_simple.py"
    ],
    "_generate_demo_data(self)": [
      ".\\demo_distributed_ai.py",
      ".\\demo_edge_ai.py",
      ".\\demo_homomorphic_encryption.py",
      ".\\demo_multi_layer_cache.py"
    ],
    "_generate_audio_sample(self,energy_level,sample_type)": [
      ".\\demo_distributed_ai.py"
    ],
    "print_header(self,title)": [
      ".\\demo_distributed_ai.py",
      ".\\demo_edge_ai.py",
      ".\\demo_homomorphic_encryption.py"
    ],
    "print_subheader(self,title)": [
      ".\\demo_distributed_ai.py",
      ".\\demo_edge_ai.py",
      ".\\demo_homomorphic_encryption.py"
    ],
    "demo_system_capabilities(self)": [
      ".\\demo_distributed_ai.py",
      ".\\demo_edge_ai.py"
    ],
    "_calculate_efficiency(self,processing_time_ms,specs)": [
      ".\\demo_edge_ai.py"
    ],
    "demo_performance_metrics(self)": [
      ".\\demo_homomorphic_encryption.py"
    ],
    "demo_security_features(self)": [
      ".\\demo_homomorphic_encryption.py"
    ],
    "_detect_context(self,code_block)": [
      ".\\exception_fixer.py"
    ],
    "_fix_bare_except(self,match,context,file_content)": [
      ".\\exception_fixer.py"
    ],
    "_fix_broad_exception(self,match,context,file_content)": [
      ".\\exception_fixer.py"
    ],
    "_fix_silent_except(self,match,context,file_content)": [
      ".\\exception_fixer.py"
    ],
    "_fix_silent_exception(self,match,context,file_content)": [
      ".\\exception_fixer.py"
    ],
    "_fix_print_in_except(self,match,context,file_content)": [
      ".\\exception_fixer.py"
    ],
    "_add_logging_import(self,file_content)": [
      ".\\exception_fixer.py"
    ],
    "fix_file(self,analysis)": [
      ".\\exception_fixer.py"
    ],
    "fix_project_exceptions(self,target_dirs)": [
      ".\\exception_fixer.py"
    ],
    "create_exception_guidelines(self)": [
      ".\\exception_fixer.py"
    ],
    "identify_god_classes(self)": [
      ".\\fix_ddd_integration.py",
      ".\\god_class_refactor_ddd.py",
      ".\\professional_ddd_integration_v2.py",
      ".\\proper_ddd_splitter.py",
      ".\\quick_god_class_splitter.py"
    ],
    "split_accessibility_service(self,file_path)": [
      ".\\fix_ddd_integration.py"
    ],
    "split_memory_service(self,file_path)": [
      ".\\fix_ddd_integration.py"
    ],
    "_create_init_files(self,directories)": [
      ".\\fix_ddd_integration.py",
      ".\\proper_ddd_splitter.py"
    ],
    "fix_integration(self)": [
      ".\\fix_ddd_integration.py"
    ],
    "scan_all_python_files(self)": [
      ".\\fix_imports_checker.py",
      ".\\usage_pattern_analyzer.py"
    ],
    "check_imports_in_file(self,file_path)": [
      ".\\fix_imports_checker.py"
    ],
    "check_file_exists(self,import_path)": [
      ".\\fix_imports_checker.py"
    ],
    "suggest_fix_for_import(self,broken_import)": [
      ".\\fix_imports_checker.py"
    ],
    "_check_ddd_structure(self)": [
      ".\\fix_imports_checker.py"
    ],
    "_generate_fix_recommendations(self)": [
      ".\\fix_imports_checker.py"
    ],
    "analyze_mypy_cache(self)": [
      ".\\frontend_api_cache_analyzer.py"
    ],
    "analyze_frontend_structure(self)": [
      ".\\frontend_api_cache_analyzer.py"
    ],
    "analyze_api_structure(self)": [
      ".\\frontend_api_cache_analyzer.py"
    ],
    "clean_mypy_cache(self,cache_analysis)": [
      ".\\frontend_api_cache_analyzer.py"
    ],
    "fix_frontend_duplicates(self,frontend_analysis)": [
      ".\\frontend_api_cache_analyzer.py"
    ],
    "generate_report(self)": [
      ".\\frontend_api_cache_analyzer.py"
    ],
    "run_analysis(self)": [
      ".\\frontend_api_cache_analyzer.py"
    ],
    "generate_sphinx_docs(self,output_dir)": [
      ".\\generate_docs.py"
    ],
    "generate_markdown_docs(self,output_dir)": [
      ".\\generate_docs.py"
    ],
    "generate_api_reference(self,output_dir)": [
      ".\\generate_docs.py"
    ],
    "generate_coverage_report(self,output_dir)": [
      ".\\generate_docs.py"
    ],
    "generate_encryption_key(key_length)": [
      ".\\generate_encryption_key.py"
    ],
    "generate_secret(length)": [
      ".\\generate_env.py"
    ],
    "generate_env_file(output_path)": [
      ".\\generate_env.py"
    ],
    "generate_encryption_key()": [
      ".\\generate_keys.py",
      ".\\generate_secure_keys.py"
    ],
    "generate_jwt_secret()": [
      ".\\generate_keys.py"
    ],
    "generate_random_key(length)": [
      ".\\generate_keys.py"
    ],
    "generate_jwt_secret(length)": [
      ".\\generate_secure_keys.py"
    ],
    "generate_secret_key(length)": [
      ".\\generate_secure_keys.py"
    ],
    "generate_all_keys()": [
      ".\\generate_secure_keys.py"
    ],
    "save_keys_to_file(keys,filename)": [
      ".\\generate_secure_keys.py"
    ],
    "create_secrets_replacement_file(self)": [
      ".\\git_secrets_cleanup.py"
    ],
    "scan_git_history(self)": [
      ".\\git_secrets_cleanup.py"
    ],
    "_identify_secret_type(self,secret)": [
      ".\\git_secrets_cleanup.py"
    ],
    "generate_cleanup_commands(self)": [
      ".\\git_secrets_cleanup.py"
    ],
    "create_pre_commit_hook(self)": [
      ".\\git_secrets_cleanup.py"
    ],
    "generate_full_report(self)": [
      ".\\git_secrets_cleanup.py"
    ],
    "_analyze_file(self,file_path)": [
      ".\\god_class_refactor_ddd.py",
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_is_god_class(self,target)": [
      ".\\god_class_refactor_ddd.py"
    ],
    "_extract_domain_name(self,filename)": [
      ".\\god_class_refactor_ddd.py"
    ],
    "_is_aggregate(self,class_name,class_content)": [
      ".\\god_class_refactor_ddd.py"
    ],
    "_is_entity(self,class_name,class_content)": [
      ".\\god_class_refactor_ddd.py"
    ],
    "_is_use_case(self,func_name,func_content)": [
      ".\\god_class_refactor_ddd.py"
    ],
    "_is_service_method(self,func_name,func_content)": [
      ".\\god_class_refactor_ddd.py"
    ],
    "visit_ClassDef(self,node)": [
      ".\\god_class_refactor_ddd.py",
      ".\\god_class_refactor_ddd.py",
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "visit_FunctionDef(self,node)": [
      ".\\god_class_refactor_ddd.py",
      ".\\god_class_refactor_ddd.py",
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "visit_Import(self,node)": [
      ".\\god_class_refactor_ddd.py",
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "__init__(self,max_lines_per_file)": [
      ".\\god_class_splitter.py"
    ],
    "analyze_python_file(self,file_path)": [
      ".\\god_class_splitter.py",
      ".\\project_analyzer.py"
    ],
    "_extract_dependencies(self,node,lines)": [
      ".\\god_class_splitter.py"
    ],
    "should_split_file(self,file_path)": [
      ".\\god_class_splitter.py"
    ],
    "create_split_plan(self,classes,functions,original_file)": [
      ".\\god_class_splitter.py"
    ],
    "_split_large_class(self,class_info)": [
      ".\\god_class_splitter.py"
    ],
    "execute_split(self,plan)": [
      ".\\god_class_splitter.py"
    ],
    "_create_init_file(self,package_dir,plan)": [
      ".\\god_class_splitter.py"
    ],
    "_create_split_file(self,package_dir,split,original_content)": [
      ".\\god_class_splitter.py"
    ],
    "_extract_class_content(self,split,original_content)": [
      ".\\god_class_splitter.py"
    ],
    "_extract_functions_content(self,split,original_content)": [
      ".\\god_class_splitter.py"
    ],
    "_create_facade_file(self,plan)": [
      ".\\god_class_splitter.py"
    ],
    "split_god_classes(self,target_files)": [
      ".\\god_class_splitter.py"
    ],
    "check_services()": [
      ".\\health_check.py"
    ],
    "get_dir_size(self,path)": [
      ".\\immediate_cleanup.py"
    ],
    "safe_remove_dir(self,dir_path)": [
      ".\\immediate_cleanup.py"
    ],
    "remove_cache_files(self)": [
      ".\\immediate_cleanup.py"
    ],
    "remove_deprecated_dirs(self)": [
      ".\\immediate_cleanup.py"
    ],
    "remove_duplicate_files(self)": [
      ".\\immediate_cleanup.py"
    ],
    "clean_log_files(self)": [
      ".\\immediate_cleanup.py"
    ],
    "create_gitignore_updates(self)": [
      ".\\immediate_cleanup.py"
    ],
    "run_cleanup(self)": [
      ".\\immediate_cleanup.py"
    ],
    "create_database(db_path)": [
      ".\\initialize_db.py"
    ],
    "seed_initial_config(db_path)": [
      ".\\initialize_db.py"
    ],
    "discover_all_config_files(self)": [
      ".\\intelligent_config_merger.py"
    ],
    "load_config_content(self,file_path)": [
      ".\\intelligent_config_merger.py"
    ],
    "calculate_content_similarity(self,content1,content2)": [
      ".\\intelligent_config_merger.py"
    ],
    "_clean_content_for_comparison(self,content)": [
      ".\\intelligent_config_merger.py"
    ],
    "analyze_config_duplicates(self,config_files)": [
      ".\\intelligent_config_merger.py"
    ],
    "merge_similar_configs(self,similar_group,content_map)": [
      ".\\intelligent_config_merger.py"
    ],
    "_merge_dict_configs(self,base_config,other_config)": [
      ".\\intelligent_config_merger.py"
    ],
    "find_config_references(self,config_file_path)": [
      ".\\intelligent_config_merger.py"
    ],
    "update_config_references(self,old_path,new_path,references)": [
      ".\\intelligent_config_merger.py"
    ],
    "execute_intelligent_merge(self,analysis)": [
      ".\\intelligent_config_merger.py"
    ],
    "generate_merge_report(self,analysis,results)": [
      ".\\intelligent_config_merger.py"
    ],
    "run_intelligent_config_cleanup(self)": [
      ".\\intelligent_config_merger.py"
    ],
    "migrate_config()": [
      ".\\migrate_config.py"
    ],
    "__init__(self,config)": [
      ".\\migrate_secrets.py",
      ".\\vault_secret_manager.py"
    ],
    "initialize_vault_client(self)": [
      ".\\migrate_secrets.py"
    ],
    "_setup_vault_mount(self)": [
      ".\\migrate_secrets.py"
    ],
    "scan_for_secrets(self,root_path)": [
      ".\\migrate_secrets.py"
    ],
    "_should_exclude_file(self,file_path)": [
      ".\\migrate_secrets.py"
    ],
    "_scan_file_content(self,file_path,content)": [
      ".\\migrate_secrets.py"
    ],
    "_is_valid_secret(self,value,secret_type)": [
      ".\\migrate_secrets.py"
    ],
    "_extract_key_name(self,line,pattern_name)": [
      ".\\migrate_secrets.py"
    ],
    "create_backup(self)": [
      ".\\migrate_secrets.py"
    ],
    "migrate_to_vault(self)": [
      ".\\migrate_secrets.py"
    ],
    "_generate_vault_path(self,secret)": [
      ".\\migrate_secrets.py"
    ],
    "_simulate_migration(self)": [
      ".\\migrate_secrets.py"
    ],
    "update_configuration_files(self,migration_results)": [
      ".\\migrate_secrets.py"
    ],
    "_update_file_with_vault_reference(self,secret,migration_results)": [
      ".\\migrate_secrets.py"
    ],
    "generate_vault_policies(self)": [
      ".\\migrate_secrets.py"
    ],
    "_convert_to_hcl(self,policy_dict)": [
      ".\\migrate_secrets.py"
    ],
    "generate_migration_report(self,migration_results,backup_dir)": [
      ".\\migrate_secrets.py"
    ],
    "_group_secrets_by_type(self)": [
      ".\\migrate_secrets.py"
    ],
    "_generate_recommendations(self)": [
      ".\\migrate_secrets.py",
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_generate_summary_report(self,report,report_file)": [
      ".\\migrate_secrets.py"
    ],
    "__init__(self,model_providers)": [
      ".\\model_benchmark.py"
    ],
    "_benchmark_llm(self,provider)": [
      ".\\model_benchmark.py"
    ],
    "run_benchmarks(self)": [
      ".\\model_benchmark.py"
    ],
    "export_results(self,results,output_path)": [
      ".\\model_benchmark.py"
    ],
    "profile_cpu(self,func)": [
      ".\\performance_profile.py"
    ],
    "profile_memory(self,func)": [
      ".\\performance_profile.py"
    ],
    "benchmark_llm_performance(self,llm_service,prompts)": [
      ".\\performance_profile.py"
    ],
    "export_profile_results(self,results,output_path)": [
      ".\\performance_profile.py"
    ],
    "integrate_ddd_professionally(self)": [
      ".\\professional_ddd_integration.py"
    ],
    "_create_legacy_structure(self)": [
      ".\\professional_ddd_integration.py"
    ],
    "_move_god_classes_to_legacy(self)": [
      ".\\professional_ddd_integration.py"
    ],
    "_integrate_ddd_domains(self)": [
      ".\\professional_ddd_integration.py"
    ],
    "_create_domain_structure(self,domain_name,ddd_folder)": [
      ".\\professional_ddd_integration.py"
    ],
    "_move_ddd_content(self,ddd_folder,domain_name)": [
      ".\\professional_ddd_integration.py"
    ],
    "_organize_final_structure(self)": [
      ".\\professional_ddd_integration.py"
    ],
    "_update_references(self)": [
      ".\\professional_ddd_integration.py"
    ],
    "_generate_integration_report(self)": [
      ".\\professional_ddd_integration.py"
    ],
    "create_legacy_structure(self)": [
      ".\\professional_ddd_integration_v2.py"
    ],
    "move_to_legacy(self,file_path)": [
      ".\\professional_ddd_integration_v2.py"
    ],
    "get_ddd_domains(self)": [
      ".\\professional_ddd_integration_v2.py"
    ],
    "integrate_domain(self,domain_name)": [
      ".\\professional_ddd_integration_v2.py"
    ],
    "create_domain_init_files(self)": [
      ".\\professional_ddd_integration_v2.py"
    ],
    "generate_integration_report(self)": [
      ".\\professional_ddd_integration_v2.py"
    ],
    "run_integration(self)": [
      ".\\professional_ddd_integration_v2.py"
    ],
    "_analyze_ast(self,content,file_path)": [
      ".\\project_analyzer.py"
    ],
    "_determine_file_type(self,file_path,content)": [
      ".\\project_analyzer.py"
    ],
    "_determine_importance(self,file_path,content,classes,functions)": [
      ".\\project_analyzer.py"
    ],
    "_find_issues(self,content,file_path)": [
      ".\\project_analyzer.py"
    ],
    "_suggest_location(self,current_path,file_type)": [
      ".\\project_analyzer.py"
    ],
    "_calculate_complexity(self,analysis_data)": [
      ".\\project_analyzer.py"
    ],
    "_find_duplicates(self)": [
      ".\\project_analyzer.py"
    ],
    "_generate_summary(self)": [
      ".\\project_analyzer.py"
    ],
    "save_report(self,output_file)": [
      ".\\project_analyzer.py"
    ],
    "print_summary(self)": [
      ".\\project_analyzer.py"
    ],
    "split_accessibility_service(self,file_path,lines_count)": [
      ".\\proper_ddd_splitter.py"
    ],
    "move_original_to_legacy(self,file_path)": [
      ".\\proper_ddd_splitter.py"
    ],
    "run_splitting(self)": [
      ".\\proper_ddd_splitter.py",
      ".\\quick_god_class_splitter.py"
    ],
    "discover_config_files(self)": [
      ".\\quick_config_analyzer.py"
    ],
    "analyze_exact_duplicates(self,files)": [
      ".\\quick_config_analyzer.py"
    ],
    "_read_file_safe(self,file_path)": [
      ".\\quick_config_analyzer.py"
    ],
    "calculate_similarity(self,content1,content2)": [
      ".\\quick_config_analyzer.py"
    ],
    "_clean_content(self,content)": [
      ".\\quick_config_analyzer.py"
    ],
    "_lcs_similarity(self,text1,text2)": [
      ".\\quick_config_analyzer.py"
    ],
    "find_similar_configs(self,files,threshold)": [
      ".\\quick_config_analyzer.py"
    ],
    "analyze_config_sizes(self,files)": [
      ".\\quick_config_analyzer.py"
    ],
    "split_god_class(self,file_path,lines)": [
      ".\\quick_god_class_splitter.py"
    ],
    "_extract_components(self,content)": [
      ".\\quick_god_class_splitter.py"
    ],
    "_get_domain_name(self,filename)": [
      ".\\quick_god_class_splitter.py"
    ],
    "_create_ddd_structure(self,components,domain_name,base_path)": [
      ".\\quick_god_class_splitter.py"
    ],
    "_create_file_content(self,items,imports,domain_name)": [
      ".\\quick_god_class_splitter.py"
    ],
    "_create_orchestrator(self,domain_name)": [
      ".\\quick_god_class_splitter.py"
    ],
    "print_phase_header(self,phase_num,phase_name,description)": [
      ".\\run_all_fixes.py"
    ],
    "run_phase1_cleanup(self)": [
      ".\\run_all_fixes.py"
    ],
    "run_phase2_god_classes(self)": [
      ".\\run_all_fixes.py"
    ],
    "run_phase3_exceptions(self)": [
      ".\\run_all_fixes.py"
    ],
    "run_phase4_todos(self)": [
      ".\\run_all_fixes.py"
    ],
    "run_phase5_tests(self)": [
      ".\\run_all_fixes.py"
    ],
    "_resolve_todos(self)": [
      ".\\run_all_fixes.py"
    ],
    "_generate_tests(self)": [
      ".\\run_all_fixes.py"
    ],
    "_create_test_template(self,class_name,service_path)": [
      ".\\run_all_fixes.py"
    ],
    "save_results_report(self)": [
      ".\\run_all_fixes.py"
    ],
    "print_final_summary(self)": [
      ".\\run_all_fixes.py"
    ],
    "run_all_fixes(self)": [
      ".\\run_all_fixes.py"
    ],
    "_load_security_patterns(self)": [
      ".\\security_audit_and_fix.py"
    ],
    "_severity_score(self,severity)": [
      ".\\security_audit_and_fix.py"
    ],
    "_fix_hardcoded_secret(self,lines,issue)": [
      ".\\security_audit_and_fix.py"
    ],
    "_fix_eval_exec(self,lines,issue)": [
      ".\\security_audit_and_fix.py"
    ],
    "_fix_weak_exception(self,lines,issue)": [
      ".\\security_audit_and_fix.py"
    ],
    "_generate_secret_key(self,var_name)": [
      ".\\security_audit_and_fix.py"
    ],
    "_ensure_import(self,lines,import_statement)": [
      ".\\security_audit_and_fix.py"
    ],
    "generate_report(self,output_file)": [
      ".\\security_audit_and_fix.py"
    ],
    "__init__(self,auditor,file_path,lines)": [
      ".\\security_audit_and_fix.py"
    ],
    "visit_Call(self,node)": [
      ".\\security_audit_and_fix.py"
    ],
    "scan_for_secrets(self)": [
      ".\\security_cleanup.py"
    ],
    "_should_exclude(self,file_path,exclude_patterns)": [
      ".\\security_cleanup.py"
    ],
    "_scan_file(self,file_path)": [
      ".\\security_cleanup.py"
    ],
    "clean_config_files(self)": [
      ".\\security_cleanup.py"
    ],
    "_clean_json_config(self,config_path)": [
      ".\\security_cleanup.py"
    ],
    "update_gitignore(self)": [
      ".\\security_cleanup.py"
    ],
    "generate_secure_keys(self)": [
      ".\\security_cleanup.py"
    ],
    "create_secure_config_loader(self)": [
      ".\\security_cleanup.py"
    ],
    "create_git_secrets_config(self)": [
      ".\\security_cleanup.py"
    ],
    "run_full_cleanup(self)": [
      ".\\security_cleanup.py"
    ],
    "run_bandit_scan(self,directory)": [
      ".\\security_scan.py"
    ],
    "_categorize_bandit_issues(self,issues)": [
      ".\\security_scan.py"
    ],
    "run_safety_check(self)": [
      ".\\security_scan.py"
    ],
    "_categorize_safety_issues(self,vulnerabilities)": [
      ".\\security_scan.py"
    ],
    "run_trufflehog_scan(self,repository_path)": [
      ".\\security_scan.py"
    ],
    "_categorize_trufflehog_secrets(self,secrets)": [
      ".\\security_scan.py"
    ],
    "_export_report(self,report,output_path)": [
      ".\\security_scan.py"
    ],
    "categorize_services_by_functionality(self)": [
      ".\\service_organizer_analyzer.py"
    ],
    "create_clean_architecture_plan(self,functional_groups)": [
      ".\\service_organizer_analyzer.py"
    ],
    "detect_duplicate_functionalities(self,functional_groups)": [
      ".\\service_organizer_analyzer.py"
    ],
    "_select_primary_service(self,services,service_type)": [
      ".\\service_organizer_analyzer.py"
    ],
    "generate_merge_operations(self,duplicates)": [
      ".\\service_organizer_analyzer.py"
    ],
    "_get_clean_arch_location(self,service_path)": [
      ".\\service_organizer_analyzer.py"
    ],
    "execute_service_organization(self,operations)": [
      ".\\service_organizer_analyzer.py"
    ],
    "generate_organization_report(self,functional_groups,duplicates,results)": [
      ".\\service_organizer_analyzer.py"
    ],
    "run_complete_organization(self)": [
      ".\\service_organizer_analyzer.py"
    ],
    "analyze_file_content(self,file_path)": [
      ".\\smart_merge_strategy.py"
    ],
    "create_unified_service(self,service_group)": [
      ".\\smart_merge_strategy.py"
    ],
    "_generate_unified_content(self,service_group,analyzed_files)": [
      ".\\smart_merge_strategy.py"
    ],
    "handle_special_files(self,service_group)": [
      ".\\smart_merge_strategy.py"
    ],
    "generate_merge_report(self,results)": [
      ".\\smart_merge_strategy.py"
    ],
    "execute_smart_merge(self)": [
      ".\\smart_merge_strategy.py"
    ],
    "__init__(self,src_directory)": [
      ".\\src_cleanup_validator.py",
      ".\\src_deduplication_analyzer.py"
    ],
    "validate_imports(self)": [
      ".\\src_cleanup_validator.py"
    ],
    "_can_import(self,module_name)": [
      ".\\src_cleanup_validator.py"
    ],
    "validate_file_structure(self)": [
      ".\\src_cleanup_validator.py"
    ],
    "validate_config_files(self)": [
      ".\\src_cleanup_validator.py"
    ],
    "validate_empty_files(self)": [
      ".\\src_cleanup_validator.py"
    ],
    "check_database_paths(self)": [
      ".\\src_cleanup_validator.py"
    ],
    "run_full_validation(self)": [
      ".\\src_cleanup_validator.py"
    ],
    "generate_validation_report(self)": [
      ".\\src_cleanup_validator.py"
    ],
    "calculate_file_hashes(self,file_path)": [
      ".\\src_deduplication_analyzer.py"
    ],
    "scan_all_files(self)": [
      ".\\src_deduplication_analyzer.py"
    ],
    "_should_ignore_file(self,file_path)": [
      ".\\src_deduplication_analyzer.py"
    ],
    "_files_compatible_for_comparison(self,path1,path2)": [
      ".\\src_deduplication_analyzer.py"
    ],
    "generate_detailed_report(self)": [
      ".\\src_deduplication_analyzer.py"
    ],
    "run_full_analysis(self)": [
      ".\\src_deduplication_analyzer.py"
    ],
    "get_system_info(self)": [
      ".\\system_diagnostics.py"
    ],
    "check_ai_dependencies(self)": [
      ".\\system_diagnostics.py"
    ],
    "gpu_diagnostics(self)": [
      ".\\system_diagnostics.py"
    ],
    "run_comprehensive_diagnostics(self)": [
      ".\\system_diagnostics.py"
    ],
    "export_diagnostics(self,output_path)": [
      ".\\system_diagnostics.py"
    ],
    "__init__(self,ws_url)": [
      ".\\teddy_ws_client.py"
    ],
    "record_audio_continuous(self,duration)": [
      ".\\teddy_ws_client.py"
    ],
    "audio_to_wav_bytes(self,audio_data)": [
      ".\\teddy_ws_client.py"
    ],
    "play_audio(self,audio_bytes)": [
      ".\\teddy_ws_client.py"
    ],
    "show_emotion(self,emotion)": [
      ".\\teddy_ws_client.py"
    ],
    "validate_audio(self,audio_data)": [
      ".\\teddy_ws_client.py"
    ],
    "audio_callback(indata,frames,time,status)": [
      ".\\teddy_ws_client.py"
    ],
    "extract_imports_from_file(self,file_path)": [
      ".\\usage_pattern_analyzer.py"
    ],
    "analyze_service_usage_patterns(self)": [
      ".\\usage_pattern_analyzer.py"
    ],
    "classify_services_by_usage(self,service_usage)": [
      ".\\usage_pattern_analyzer.py"
    ],
    "generate_smart_merge_recommendations(self,service_usage,classification)": [
      ".\\usage_pattern_analyzer.py"
    ],
    "execute_usage_based_organization(self,recommendations)": [
      ".\\usage_pattern_analyzer.py"
    ],
    "_get_clean_architecture_location(self,group_name)": [
      ".\\usage_pattern_analyzer.py"
    ],
    "generate_usage_analysis_report(self,service_usage,classification,recommendations,results)": [
      ".\\usage_pattern_analyzer.py"
    ],
    "run_complete_usage_analysis(self)": [
      ".\\usage_pattern_analyzer.py"
    ],
    "_setup_logger(self)": [
      ".\\vault_secret_manager.py"
    ],
    "_init_vault_client(self)": [
      ".\\vault_secret_manager.py"
    ],
    "store_api_keys(self,api_keys,path)": [
      ".\\vault_secret_manager.py"
    ],
    "get_api_key(self,service_name,path)": [
      ".\\vault_secret_manager.py"
    ],
    "get_all_api_keys(self,path)": [
      ".\\vault_secret_manager.py"
    ],
    "rotate_api_key(self,service_name,new_key,path)": [
      ".\\vault_secret_manager.py"
    ],
    "delete_api_key(self,service_name,path)": [
      ".\\vault_secret_manager.py"
    ],
    "_encrypt_sensitive_keys(self,keys)": [
      ".\\vault_secret_manager.py"
    ],
    "_decrypt_sensitive_keys(self,encrypted_keys)": [
      ".\\vault_secret_manager.py"
    ],
    "health_check(self)": [
      ".\\vault_secret_manager.py"
    ],
    "_check_mount_point_exists(self)": [
      ".\\vault_secret_manager.py"
    ],
    "__init__(self,vault_url)": [
      ".\\vault_secret_manager.py"
    ],
    "initialize_from_env(self)": [
      ".\\vault_secret_manager.py"
    ],
    "get_service_config(self)": [
      ".\\vault_secret_manager.py"
    ],
    "check_file_completeness()": [
      ".\\verify_ddd_structure.py"
    ],
    "check_imports()": [
      ".\\verify_ddd_structure.py"
    ],
    "check_file_sizes()": [
      ".\\verify_ddd_structure.py"
    ],
    "generate_fix_report()": [
      ".\\verify_ddd_structure.py"
    ],
    "_scan_project_files(self)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_should_skip_file(self,file_path)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_classify_domain_layer(self,file_path,analysis)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_build_dependency_graph(self)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_resolve_import_to_file(self,import_path)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_detect_circular_dependencies(self)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_classify_ddd_layers(self)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_identify_domain_entities(self)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_is_aggregate_root(self,class_name,file_path)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_calculate_complexity_metrics(self)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_calculate_file_complexity(self,analysis)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_generate_migration_plan(self)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_assess_migration_risk(self)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_get_project_stats(self)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_serialize_layer_mapping(self)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_serialize_entity(self,entity)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "_serialize_migration_plan(self,plan)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "__init__(self,analysis)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "visit_ImportFrom(self,node)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "visit_AsyncFunctionDef(self,node)": [
      ".\\migration\\ddd_architecture_analyzer.py"
    ],
    "create_complete_structure(self)": [
      ".\\migration\\ddd_structure_creator.py"
    ],
    "_create_directories(self)": [
      ".\\migration\\ddd_structure_creator.py"
    ],
    "_get_init_content(self,directory)": [
      ".\\migration\\ddd_structure_creator.py"
    ],
    "_create_domain_base_classes(self)": [
      ".\\migration\\ddd_structure_creator.py"
    ],
    "_create_application_base_classes(self)": [
      ".\\migration\\ddd_structure_creator.py"
    ],
    "_create_infrastructure_base_classes(self)": [
      ".\\migration\\ddd_structure_creator.py"
    ],
    "_create_presentation_base_classes(self)": [
      ".\\migration\\ddd_structure_creator.py"
    ],
    "_create_config_files(self)": [
      ".\\migration\\ddd_structure_creator.py"
    ],
    "create_structure(self)": [
      ".\\migration\\quick_ddd_setup.py"
    ],
    "_create_base_entity(self)": [
      ".\\migration\\quick_ddd_setup.py"
    ],
    "_create_child_entity(self)": [
      ".\\migration\\quick_ddd_setup.py"
    ],
    "_create_commands(self)": [
      ".\\migration\\quick_ddd_setup.py"
    ]
  },
  "import_dependencies": {},
  "summary": {
    "total_files": 83,
    "python_files": 65,
    "importance_distribution": {
      "high": 43,
      "critical": 8,
      "medium": 12,
      "low": 2
    },
    "type_distribution": {
      "other": 56,
      "repository": 1,
      "config": 5,
      "model": 1,
      "service": 2
    },
    "total_issues": 143,
    "duplicate_groups": 41,
    "empty_files": 0,
    "large_files": 18
  }
}