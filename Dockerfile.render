# AI Teddy Bear - Cloud-Optimized Dockerfile for Render.com
# ============================================================
# Removes PyAudio dependencies and uses cloud-compatible alternatives

FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive \
    PORT=8000

# Set working directory
WORKDIR /app

# Install system dependencies (cloud-compatible)
RUN apt-get update && apt-get install -y \
    curl \
    git \
    build-essential \
    pkg-config \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create app user for security
RUN adduser --disabled-password --gecos '' appuser

# Copy requirements first for better caching
COPY requirements.render.txt .

# Install Python dependencies with optimizations
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.render.txt

# Copy application code
COPY app.py .
COPY src/ ./src/
COPY config/ ./config/

# Create necessary directories with proper permissions
RUN mkdir -p logs uploads temp audio_cache && \
    chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port (Render uses PORT environment variable)
EXPOSE ${PORT}

# Health check optimized for cloud
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# Start command optimized for production - SECURITY: Bind to all interfaces only in cloud
CMD uvicorn app:app \
    --host 0.0.0.0 \
    --port ${PORT} \
    --workers 1 \
    --loop uvloop \
    --http httptools \
    --access-log \
    --log-level info 