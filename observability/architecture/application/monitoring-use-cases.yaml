# Application Layer - Monitoring Use Cases
# This defines HOW we implement monitoring (Application Logic)

apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-use-cases
  namespace: ai-teddy-observability
  labels:
    layer: application
    component: use-cases
data:
  use-cases.yaml: |
    # AI Teddy Bear Monitoring Use Cases
    
    real_time_monitoring:
      child_interaction_tracking:
        description: "Track child interactions in real-time for safety"
        components:
          - otel-collector
          - prometheus
          - grafana-dashboard
        flow:
          - collect_interaction_events
          - validate_safety_rules
          - store_metrics
          - trigger_alerts_if_needed
        sla: "< 100ms latency"
        
      system_health_monitoring:
        description: "Monitor system health and performance"
        components:
          - prometheus
          - alertmanager
          - grafana
        flow:
          - scrape_metrics
          - evaluate_rules
          - send_notifications
          - update_dashboards
        sla: "99.9% availability"
    
    incident_response:
      safety_incident_handling:
        description: "Handle child safety incidents immediately"
        components:
          - alertmanager
          - jaeger
          - loki
        flow:
          - detect_incident
          - gather_context
          - notify_stakeholders
          - track_resolution
        sla: "< 30 seconds notification"
        
      performance_degradation:
        description: "Handle performance issues proactively"
        components:
          - prometheus
          - grafana
          - alertmanager
        flow:
          - detect_degradation
          - analyze_root_cause
          - auto_scale_if_possible
          - escalate_if_needed
        sla: "< 5 minutes resolution"
    
    compliance_reporting:
      gdpr_compliance_tracking:
        description: "Track GDPR compliance metrics"
        components:
          - loki
          - prometheus
          - grafana
        flow:
          - collect_privacy_events
          - aggregate_compliance_metrics
          - generate_reports
          - audit_data_handling
        sla: "Daily reports"
        
      coppa_monitoring:
        description: "Monitor COPPA compliance for children"
        components:
          - otel-collector
          - loki
          - alertmanager
        flow:
          - track_child_data_access
          - validate_parental_consent
          - monitor_data_retention
          - alert_on_violations
        sla: "Real-time monitoring"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-workflows
  namespace: ai-teddy-observability
  labels:
    layer: application
    component: workflows
data:
  workflows.yaml: |
    # Monitoring Workflows and Orchestration
    
    data_pipeline:
      collection_workflow:
        stages:
          - name: "ingestion"
            component: "otel-collector"
            input: "application-telemetry"
            output: "normalized-metrics"
            
          - name: "storage"
            component: "prometheus"
            input: "normalized-metrics"
            output: "time-series-data"
            
          - name: "analysis"
            component: "grafana"
            input: "time-series-data"
            output: "insights-dashboards"
            
          - name: "alerting"
            component: "alertmanager"
            input: "rule-evaluations"
            output: "notifications"
    
    incident_lifecycle:
      detection_to_resolution:
        phases:
          - name: "detection"
            tools: ["prometheus", "alertmanager"]
            duration: "< 30 seconds"
            
          - name: "investigation"
            tools: ["jaeger", "loki", "grafana"]
            duration: "< 5 minutes"
            
          - name: "mitigation"
            tools: ["kubernetes-hpa", "manual-scaling"]
            duration: "< 10 minutes"
            
          - name: "resolution"
            tools: ["deployment-fixes", "configuration-updates"]
            duration: "< 30 minutes"
            
          - name: "post-mortem"
            tools: ["grafana-reports", "loki-analysis"]
            duration: "24 hours"
    
    backup_and_recovery:
      data_protection_workflow:
        backup_schedule:
          - component: "prometheus-data"
            frequency: "daily"
            retention: "30d"
            
          - component: "grafana-dashboards"
            frequency: "weekly"
            retention: "90d"
            
          - component: "alerting-rules"
            frequency: "on-change"
            retention: "1y"
        
        recovery_procedures:
          - scenario: "prometheus-failure"
            steps: ["restore-from-backup", "restart-services", "verify-metrics"]
            rto: "15 minutes"
            
          - scenario: "grafana-corruption"
            steps: ["restore-dashboards", "reconfigure-datasources", "test-visualization"]
            rto: "30 minutes" 