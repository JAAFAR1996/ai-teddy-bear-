apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: child-service
  namespace: argocd
  labels:
    app.kubernetes.io/name: child-service
    app.kubernetes.io/part-of: teddy-bear-system
    app.kubernetes.io/component: microservice
    service-type: data-service
    project: ai-teddy-bear
  annotations:
    argocd.argoproj.io/sync-wave: "2"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    link.argocd.argoproj.io/external-link: https://monitoring.teddy-bear.ai/child-service
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: ai-teddy-bear
  source:
    repoURL: https://github.com/ai-teddy-bear/child-service
    targetRevision: HEAD
    path: deployments/k8s
    helm:
      releaseName: child-service
      parameters:
        - name: image.tag
          value: "v1.2.3"
        - name: replicaCount
          value: "3"
        - name: resources.requests.cpu
          value: "500m"
        - name: resources.requests.memory
          value: "1Gi"
        - name: resources.limits.cpu
          value: "1000m"
        - name: resources.limits.memory
          value: "2Gi"
        - name: autoscaling.enabled
          value: "true"
        - name: autoscaling.minReplicas
          value: "2"
        - name: autoscaling.maxReplicas
          value: "10"
        - name: database.host
          value: "postgresql.ai-teddy-production.svc.cluster.local"
        - name: redis.host
          value: "redis.ai-teddy-production.svc.cluster.local"
        - name: security.encryption.enabled
          value: "true"
        - name: monitoring.enabled
          value: "true"
        - name: tracing.enabled
          value: "true"
      valueFiles:
        - values.yaml
        - values-production.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: ai-teddy-production
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - Validate=true
      - CreateNamespace=false
      - PrunePropagationPolicy=foreground
      - Replace=false
    retry:
      limit: 3
      backoff:
        duration: 10s
        factor: 2
        maxDuration: 2m
  revisionHistoryLimit: 5
  ignoreDifferences:
    - group: apps
      kind: Deployment
      jsonPointers:
        - /spec/replicas
    - group: autoscaling
      kind: HorizontalPodAutoscaler
      jsonPointers:
        - /status

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ai-service
  namespace: argocd
  labels:
    app.kubernetes.io/name: ai-service
    app.kubernetes.io/part-of: teddy-bear-system
    app.kubernetes.io/component: ai-microservice
    service-type: ai-service
    project: ai-teddy-bear
  annotations:
    argocd.argoproj.io/sync-wave: "3"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  project: ai-teddy-bear
  source:
    repoURL: https://github.com/ai-teddy-bear/ai-service
    targetRevision: HEAD
    path: deployments/k8s
    helm:
      releaseName: ai-service
      parameters:
        - name: image.tag
          value: "v2.1.0"
        - name: replicaCount
          value: "5"
        - name: resources.requests.cpu
          value: "1000m"
        - name: resources.requests.memory
          value: "2Gi"
        - name: resources.limits.cpu
          value: "2000m"
        - name: resources.limits.memory
          value: "4Gi"
        - name: gpu.enabled
          value: "true"
        - name: gpu.count
          value: "1"
        - name: ai.model.path
          value: "/models/teddy-bear-v2"
        - name: ai.openai.enabled
          value: "true"
        - name: ai.huggingface.enabled
          value: "true"
        - name: edge.enabled
          value: "true"
        - name: distributed.enabled
          value: "true"
        - name: homomorphic.encryption.enabled
          value: "true"
      valueFiles:
        - values.yaml
        - values-production.yaml
        - secrets/ai-secrets.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: ai-teddy-production
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - Validate=true
      - CreateNamespace=false
      - PrunePropagationPolicy=foreground
    retry:
      limit: 5
      backoff:
        duration: 15s
        factor: 2
        maxDuration: 5m
  revisionHistoryLimit: 5

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: graphql-federation
  namespace: argocd
  labels:
    app.kubernetes.io/name: graphql-federation
    app.kubernetes.io/part-of: teddy-bear-system
    app.kubernetes.io/component: api-gateway
    service-type: api-service
    project: ai-teddy-bear
  annotations:
    argocd.argoproj.io/sync-wave: "4"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  project: ai-teddy-bear
  source:
    repoURL: https://github.com/ai-teddy-bear/graphql-federation
    targetRevision: HEAD
    path: deployments/k8s
    helm:
      releaseName: graphql-federation
      parameters:
        - name: image.tag
          value: "v1.1.0"
        - name: replicaCount
          value: "3"
        - name: federation.services.childService.url
          value: "http://child-service.ai-teddy-production.svc.cluster.local:8000"
        - name: federation.services.aiService.url
          value: "http://ai-service.ai-teddy-production.svc.cluster.local:8000"
        - name: federation.services.monitoringService.url
          value: "http://monitoring-service.ai-teddy-production.svc.cluster.local:8000"
        - name: federation.services.safetyService.url
          value: "http://safety-service.ai-teddy-production.svc.cluster.local:8000"
        - name: auth.jwt.secret
          value: "${JWT_SECRET}"
        - name: cache.redis.url
          value: "redis://redis.ai-teddy-production.svc.cluster.local:6379"
        - name: monitoring.prometheus.enabled
          value: "true"
      valueFiles:
        - values.yaml
        - values-production.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: ai-teddy-production
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - Validate=true
      - CreateNamespace=false
    retry:
      limit: 3
      backoff:
        duration: 10s
        maxDuration: 2m
  revisionHistoryLimit: 5

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: caching-system
  namespace: argocd
  labels:
    app.kubernetes.io/name: caching-system
    app.kubernetes.io/part-of: teddy-bear-system
    app.kubernetes.io/component: cache-layer
    service-type: infrastructure
    project: ai-teddy-bear
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: ai-teddy-bear
  source:
    repoURL: https://github.com/ai-teddy-bear/caching-system
    targetRevision: HEAD
    path: deployments/k8s
    helm:
      releaseName: caching-system
      parameters:
        - name: redis.cluster.enabled
          value: "true"
        - name: redis.cluster.nodes
          value: "6"
        - name: redis.persistence.enabled
          value: "true"
        - name: redis.persistence.size
          value: "50Gi"
        - name: multilayer.l1.memory.size
          value: "256Mi"
        - name: multilayer.l2.redis.enabled
          value: "true"
        - name: multilayer.l3.cdn.enabled
          value: "true"
        - name: performance.monitoring.enabled
          value: "true"
      valueFiles:
        - values.yaml
        - values-production.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: ai-teddy-production
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - Validate=true
      - CreateNamespace=false
    retry:
      limit: 3
      backoff:
        duration: 10s
        maxDuration: 2m
  revisionHistoryLimit: 5 