{
  "performance": {
    "memory_usage": {},
    "large_files": [
      {
        "file": "core\\ui\\modern_ui.py",
        "size_kb": 157.255859375,
        "lines": 3864
      },
      {
        "file": "core\\application\\services\\data_cleanup_service.py",
        "size_kb": 110.8203125,
        "lines": 2852
      },
      {
        "file": "core\\audio\\audio_manager.py",
        "size_kb": 89.8076171875,
        "lines": 2451
      },
      {
        "file": "core\\infrastructure\\persistence\\conversation_sqlite_repository.py",
        "size_kb": 66.94140625,
        "lines": 1609
      },
      {
        "file": "core\\domain\\services\\advanced_emotion_analyzer.py",
        "size_kb": 64.982421875,
        "lines": 1707
      },
      {
        "file": "simulator\\esp32_teddy_simulator.py",
        "size_kb": 57.677734375,
        "lines": 1268
      },
      {
        "file": "core\\simulators\\esp32_teddy_simulator.py",
        "size_kb": 57.66015625,
        "lines": 1271
      },
      {
        "file": "core\\application\\services\\memory_service.py",
        "size_kb": 52.498046875,
        "lines": 1419
      },
      {
        "file": "core\\application\\services\\parent_report_service.py",
        "size_kb": 52.228515625,
        "lines": 1287
      },
      {
        "file": "core\\domain\\repositories\\conversation_repository.py",
        "size_kb": 49.71875,
        "lines": 1373
      }
    ],
    "cpu_info": {
      "cpu_count": 20,
      "memory_total_gb": 15.706581115722656,
      "memory_available_gb": 0.9396743774414062
    }
  },
  "dependencies": {
    "import_graph": {
      "advanced_analysis_script.py": [
        "tracemalloc",
        "cProfile",
        "importlib.util",
        "collections",
        "pstats",
        "pathlib",
        "memory_profiler",
        "os",
        "typing",
        "pympler",
        "sys",
        "psutil",
        "re",
        "json",
        "ast",
        "time"
      ],
      "analysis_script.py": [
        "collections",
        "pathlib",
        "os",
        "typing",
        "sys",
        "psutil",
        "re",
        "json",
        "ast",
        "time"
      ],
      "main.py": [
        "asyncio",
        "fastapi.middleware.cors",
        "logging",
        "fastapi.staticfiles",
        "pathlib",
        "infrastructure.config",
        "uvicorn",
        "api.websocket.manager",
        "infrastructure.dependencies",
        "fastapi.responses",
        "api.endpoints.device",
        "fastapi",
        "api.endpoints.audio",
        "contextlib",
        "api.endpoints.dashboard",
        "api.endpoints.children"
      ],
      "config\\secure_config.py": [
        "secrets",
        "logging",
        "pathlib",
        "os",
        "typing",
        "cryptography.fernet",
        "dataclasses"
      ],
      "config\\settings.py": [
        "os",
        "dotenv"
      ],
      "config\\__init__.py": [],
      "core\\create_audio_streamer.py": [],
      "core\\database.py": [
        "datetime",
        "sqlalchemy.sql",
        "typing",
        "sqlalchemy.ext.declarative",
        "json",
        "sqlalchemy",
        "os",
        "sqlalchemy.orm"
      ],
      "core\\enhanced_hume_2025.py": [
        "asyncio",
        "hume",
        "datetime",
        "numpy",
        "soundfile",
        "time",
        "logging",
        "enum",
        "os",
        "typing",
        "random",
        "statistics",
        "json",
        "librosa",
        "dataclasses"
      ],
      "core\\esp32_simple_simulator.py": [
        "threading",
        "tkinter",
        "asyncio",
        "requests",
        "time",
        "datetime",
        "io",
        "base64",
        "uuid",
        "pygame",
        "speech_recognition",
        "gtts",
        "wave",
        "json",
        "sys",
        "pyaudio"
      ],
      "core\\esp32_simulator.py": [
        "base64",
        "asyncio",
        "requests",
        "PySide6.QtCore",
        "PySide6.QtWidgets",
        "websockets",
        "wave",
        "qasync",
        "json",
        "sys",
        "pyaudio"
      ],
      "core\\hume_demo_2025.py": [],
      "core\\hume_fixed.py": [
        "asyncio",
        "hume",
        "soundfile",
        "numpy",
        "pathlib",
        "dotenv",
        "os",
        "typing",
        "json",
        "time"
      ],
      "core\\hume_integration.py": [
        "asyncio",
        "hume",
        "soundfile",
        "numpy",
        "pathlib",
        "dotenv",
        "os",
        "typing",
        "database",
        "json",
        "time"
      ],
      "core\\main.py": [
        "logging",
        "argparse",
        "uvicorn"
      ],
      "core\\run_simulator.py": [
        "logging",
        "pathlib",
        "core.simulators.esp32_production_simulator",
        "sys"
      ],
      "core\\setup.py": [
        "src.data.database",
        "pathlib",
        "os",
        "subprocess",
        "sys"
      ],
      "core\\start_teddy_system.py": [
        "threading",
        "os",
        "subprocess",
        "sys",
        "time"
      ],
      "core\\wsgi.py": [
        "pathlib",
        "uvicorn",
        "os",
        "sys",
        "main"
      ],
      "core\\__init__.py": [],
      "domain\\models.py": [
        "datetime",
        "uuid",
        "enum",
        "typing",
        "pydantic"
      ],
      "infrastructure\\config.py": [
        "functools",
        "logging",
        "pathlib",
        "enum",
        "os",
        "typing",
        "pydantic_settings",
        "pydantic",
        "json"
      ],
      "infrastructure\\dependencies.py": [
        "redis.asyncio",
        "abc",
        "functools",
        "logging",
        "config",
        "typing",
        "sqlalchemy.ext.asyncio",
        "domain.models",
        "fastapi",
        "services.voice_service",
        "contextlib",
        "sqlalchemy.orm",
        "services.storage_service",
        "services.ai_service"
      ],
      "scripts\\backup_database.py": [
        "shutil",
        "datetime",
        "sqlite3",
        "logging",
        "os"
      ],
      "scripts\\configure_logging.py": [
        "argparse",
        "logging",
        "yaml",
        "os",
        "typing",
        "logging.config",
        "json",
        "platform",
        "sys"
      ],
      "scripts\\config_manager.py": [
        "argparse",
        "yaml",
        "logging",
        "dotenv",
        "os",
        "typing",
        "jsonschema",
        "json"
      ],
      "scripts\\data_migration.py": [
        "datetime",
        "sqlite3",
        "backup_database",
        "logging",
        "os",
        "typing",
        "json"
      ],
      "scripts\\generate_docs.py": [
        "shutil",
        "argparse",
        "logging",
        "os",
        "subprocess"
      ],
      "scripts\\generate_encryption_key.py": [
        "os",
        "secrets",
        "base64",
        "argparse"
      ],
      "scripts\\generate_env.py": [
        "secrets",
        "argparse",
        "dotenv",
        "os",
        "string"
      ],
      "scripts\\generate_keys.py": [
        "secrets",
        "base64",
        "cryptography.fernet",
        "string"
      ],
      "scripts\\health_check.py": [
        "sqlite3",
        "logging",
        "src.application.services.llm_service",
        "src.application.services.voice_interaction_service",
        "typing",
        "redis",
        "sys"
      ],
      "scripts\\initialize_db.py": [
        "datetime",
        "sqlite3",
        "logging",
        "os",
        "typing",
        "json"
      ],
      "scripts\\migrate_config.py": [
        "os",
        "json",
        "pathlib"
      ],
      "scripts\\model_benchmark.py": [
        "google.generativeai",
        "argparse",
        "anthropic",
        "logging",
        "typing",
        "os",
        "json",
        "openai",
        "time"
      ],
      "scripts\\performance_profile.py": [
        "cProfile",
        "tracemalloc",
        "argparse",
        "io",
        "logging",
        "pstats",
        "memory_profiler",
        "os",
        "typing",
        "sys",
        "json",
        "time"
      ],
      "scripts\\security_scan.py": [
        "argparse",
        "logging",
        "os",
        "typing",
        "subprocess",
        "json",
        "sys"
      ],
      "scripts\\system_diagnostics.py": [
        "argparse",
        "socket",
        "logging",
        "os",
        "typing",
        "subprocess",
        "psutil",
        "json",
        "platform",
        "sys",
        "torch"
      ],
      "scripts\\teddy_ws_client.py": [
        "threading",
        "pydub.playback",
        "asyncio",
        "base64",
        "datetime",
        "numpy",
        "io",
        "queue",
        "simpleaudio",
        "time",
        "pydub",
        "os",
        "websockets",
        "wave",
        "sounddevice",
        "json",
        "sys"
      ],
      "services\\ai_service.py": [
        "asyncio",
        "datetime",
        "infrastructure.config",
        "logging",
        "typing",
        "random",
        "aiohttp",
        "domain.models",
        "json",
        "openai"
      ],
      "services\\voice_service.py": [
        "pathlib",
        "typing",
        "gtts",
        "wave",
        "tempfile",
        "asyncio",
        "base64",
        "pydub",
        "elevenlabs",
        "domain.models",
        "json",
        "pydub.playback",
        "numpy",
        "io",
        "logging",
        "azure.cognitiveservices.speech",
        "whisper",
        "infrastructure.config",
        "speech_recognition"
      ],
      "simulator\\cloud_server_launcher.py": [
        "threading",
        "tkinter",
        "time",
        "requests",
        "datetime",
        "typing",
        "os",
        "subprocess",
        "psutil",
        "json",
        "sys",
        "webbrowser"
      ],
      "simulator\\complete_system_launcher.py": [
        "threading",
        "tkinter",
        "requests",
        "datetime",
        "os",
        "subprocess",
        "sys",
        "time"
      ],
      "simulator\\esp32_teddy_simulator.py": [
        "threading",
        "tkinter",
        "requests",
        "datetime",
        "uuid",
        "io",
        "pygame",
        "typing",
        "random",
        "speech_recognition",
        "gtts",
        "time"
      ],
      "simulator\\parent_mobile_app_simulator.py": [
        "tkinter",
        "requests",
        "matplotlib.backends.backend_tkagg",
        "typing",
        "matplotlib.pyplot"
      ],
      "tests\\conftest.py": [
        "httpx",
        "asyncio",
        "uuid",
        "pytest",
        "sqlalchemy.ext.asyncio",
        "sqlalchemy.orm"
      ],
      "tests\\test_basic_functionality.py": [
        "src.data.database",
        "asyncio",
        "pytest",
        "pathlib",
        "src.domain.emotion_analyzer",
        "main",
        "src.domain.analytics",
        "fastapi.testclient",
        "src.domain.games.voice_games_engine",
        "src.infrastructure.security",
        "src.application.main_service",
        "src.audio.speech_disorder_detector",
        "sys"
      ],
      "tests\\test_integration.py": [
        "src.data.database",
        "asyncio",
        "src.api.parental_dashboard",
        "config.settings",
        "pytest",
        "pathlib",
        "src.domain.emotion_analyzer",
        "src.domain.analytics",
        "src.application.main_service",
        "src.infrastructure.security",
        "src.audio.speech_disorder_detector",
        "sys"
      ],
      "tests\\e2e\\test_full_journey.py": [
        "pytest",
        "playwright.async_api"
      ],
      "tests\\e2e\\test_mobile_experience.py": [
        "pytest",
        "playwright.async_api"
      ],
      "tests\\enhanced_testing\\__init__.py": [
        "security_tests",
        "fixtures",
        "mocks",
        "base_test",
        "performance_tests",
        "integration_tests",
        "utils",
        "load_tests"
      ],
      "tests\\integration\\test_ai_service_integration.py": [
        "pytest",
        "src.core.application.services.modern_ai_service",
        "unittest.mock"
      ],
      "tests\\integration\\test_conversation_flow.py": [
        "pytest",
        "sqlalchemy.ext.asyncio",
        "httpx",
        "uuid"
      ],
      "tests\\integration\\test_voice_api_integration.py": [
        "tempfile",
        "src.api.endpoints.voice",
        "gc",
        "base64",
        "asyncio",
        "unittest.mock",
        "whisper",
        "io",
        "pytest",
        "math",
        "pathlib",
        "fastapi.testclient",
        "struct",
        "fastapi",
        "wave",
        "json",
        "src.application.services.voice_service",
        "time"
      ],
      "tests\\load\\locustfile.py": [
        "random",
        "locust",
        "json"
      ],
      "tests\\load\\test_concurrent_users.py": [
        "typing",
        "asyncio",
        "time",
        "aiohttp"
      ],
      "tests\\load\\test_load_performance.py": [
        "random",
        "locust",
        "asyncio"
      ],
      "tests\\tests\\conftest.py": [
        "httpx",
        "asyncio",
        "uuid",
        "pytest",
        "sqlalchemy.ext.asyncio",
        "sqlalchemy.orm"
      ],
      "tests\\tests\\test_basic_functionality.py": [
        "src.data.database",
        "asyncio",
        "pytest",
        "pathlib",
        "src.domain.emotion_analyzer",
        "main",
        "src.domain.analytics",
        "fastapi.testclient",
        "src.domain.games.voice_games_engine",
        "src.infrastructure.security",
        "src.application.main_service",
        "src.audio.speech_disorder_detector",
        "sys"
      ],
      "tests\\tests\\test_integration.py": [
        "src.data.database",
        "asyncio",
        "src.api.parental_dashboard",
        "config.settings",
        "pytest",
        "pathlib",
        "src.domain.emotion_analyzer",
        "src.domain.analytics",
        "src.application.main_service",
        "src.infrastructure.security",
        "src.audio.speech_disorder_detector",
        "sys"
      ],
      "tests\\unit\\test_child_aggregate.py": [
        "pytest",
        "typing",
        "uuid"
      ],
      "tests\\unit\\test_clean_container.py": [
        "core.application.services.voice_service",
        "core.application.services.ai_service",
        "asyncio",
        "unittest.mock",
        "pytest",
        "inspect",
        "core.application.services.child_service",
        "core.infrastructure.session_manager",
        "os",
        "core.infrastructure.container"
      ],
      "tests\\unit\\test_container.py": [
        "pytest",
        "asyncio",
        "src.infrastructure.container"
      ],
      "tests\\unit\\test_content_moderator.py": [
        "pytest",
        "src.core.domain.services.content_moderator"
      ],
      "tests\\unit\\test_conversation_repository.py": [
        "tempfile",
        "asyncio",
        "datetime",
        "sqlite3",
        "unittest.mock",
        "pytest",
        "collections",
        "src.domain.entities.conversation",
        "os",
        "typing",
        "src.infrastructure.persistence.conversation_sqlite_repository",
        "src.domain.repositories.base",
        "json"
      ],
      "tests\\unit\\test_emotion_analyzer.py": [
        "pytest",
        "src.core.domain.services.emotion_analyzer",
        "numpy"
      ],
      "tests\\unit\\test_session_manager.py": [
        "asyncio",
        "datetime",
        "pytest",
        "core.infrastructure.session_manager",
        "sqlalchemy.ext.asyncio",
        "sqlalchemy"
      ],
      "tests\\unit\\test_voice_service.py": [
        "tempfile",
        "shutil",
        "base64",
        "asyncio",
        "unittest.mock",
        "io",
        "pytest",
        "math",
        "pathlib",
        "os",
        "struct",
        "wave",
        "src.application.services.voice_service",
        "time"
      ],
      "tests\\unit\\ui\\test_simple.py": [],
      "tests\\unit\\ui\\__init__.py": [],
      "tests\\unit\\ui\\audio\\test_audio_engine.py": [
        "pytest",
        "core.ui.audio.audio_engine",
        "unittest.mock",
        "numpy"
      ],
      "tests\\unit\\ui\\audio\\__init__.py": [],
      "tests\\unit\\ui\\network\\test_websocket_client.py": [
        "core.ui.network.websocket_client",
        "datetime",
        "unittest.mock",
        "pytest",
        "PySide6.QtWebSockets",
        "json",
        "PySide6.QtCore"
      ],
      "tests\\unit\\ui\\network\\__init__.py": [],
      "tests\\unit\\ui\\widgets\\test_conversation_widget.py": [
        "unittest.mock",
        "datetime",
        "pytest",
        "core.ui.widgets.conversation_widget",
        "PySide6.QtWidgets",
        "PySide6.QtCore"
      ],
      "tests\\unit\\ui\\widgets\\__init__.py": [],
      "tests\\tests\\e2e\\test_full_journey.py": [
        "pytest",
        "playwright.async_api"
      ],
      "tests\\tests\\e2e\\test_mobile_experience.py": [
        "pytest",
        "playwright.async_api"
      ],
      "tests\\tests\\enhanced_testing\\__init__.py": [
        "security_tests",
        "fixtures",
        "mocks",
        "base_test",
        "performance_tests",
        "integration_tests",
        "utils",
        "load_tests"
      ],
      "tests\\tests\\integration\\test_ai_service_integration.py": [
        "pytest",
        "src.core.application.services.modern_ai_service",
        "unittest.mock"
      ],
      "tests\\tests\\integration\\test_conversation_flow.py": [
        "pytest",
        "sqlalchemy.ext.asyncio",
        "httpx",
        "uuid"
      ],
      "tests\\tests\\integration\\test_voice_api_integration.py": [
        "tempfile",
        "src.api.endpoints.voice",
        "gc",
        "base64",
        "asyncio",
        "unittest.mock",
        "whisper",
        "io",
        "pytest",
        "math",
        "pathlib",
        "fastapi.testclient",
        "struct",
        "fastapi",
        "wave",
        "json",
        "src.application.services.voice_service",
        "time"
      ],
      "tests\\tests\\load\\locustfile.py": [
        "random",
        "locust",
        "json"
      ],
      "tests\\tests\\load\\test_concurrent_users.py": [
        "typing",
        "asyncio",
        "time",
        "aiohttp"
      ],
      "tests\\tests\\load\\test_load_performance.py": [
        "random",
        "locust",
        "asyncio"
      ],
      "tests\\tests\\unit\\test_child_aggregate.py": [
        "pytest",
        "typing",
        "uuid"
      ],
      "tests\\tests\\unit\\test_container.py": [
        "pytest",
        "asyncio",
        "src.infrastructure.container"
      ],
      "tests\\tests\\unit\\test_content_moderator.py": [
        "pytest",
        "src.core.domain.services.content_moderator"
      ],
      "tests\\tests\\unit\\test_conversation_repository.py": [
        "tempfile",
        "asyncio",
        "datetime",
        "sqlite3",
        "unittest.mock",
        "pytest",
        "collections",
        "src.domain.entities.conversation",
        "os",
        "typing",
        "src.infrastructure.persistence.conversation_sqlite_repository",
        "src.domain.repositories.base",
        "json"
      ],
      "tests\\tests\\unit\\test_emotion_analyzer.py": [
        "pytest",
        "src.core.domain.services.emotion_analyzer",
        "numpy"
      ],
      "tests\\tests\\unit\\test_voice_service.py": [
        "tempfile",
        "shutil",
        "base64",
        "asyncio",
        "unittest.mock",
        "io",
        "pytest",
        "math",
        "pathlib",
        "os",
        "struct",
        "wave",
        "src.application.services.voice_service",
        "time"
      ],
      "core\\api\\dashboard_api.py": [
        "fastapi.responses",
        "typing",
        "fastapi"
      ],
      "core\\api\\game_endpoints.py": [
        "src.domain.games.voice_games_engine",
        "datetime",
        "fastapi",
        "pydantic"
      ],
      "core\\api\\parental_dashboard.py": [
        "plotly.express",
        "pandas",
        "datetime",
        "fastapi.staticfiles",
        "fastapi.responses",
        "typing",
        "src.domain.analytics",
        "fastapi",
        "plotly.graph_objects"
      ],
      "core\\api\\production_api.py": [
        "fastapi.middleware.cors",
        "uvicorn",
        "typing",
        "pydantic",
        "core.infrastructure.middleware.request_id",
        "contextlib",
        "core.domain.entities.child",
        "core.infrastructure.security.api_key_validator",
        "core.infrastructure.monitoring.metrics",
        "fastapi.responses",
        "fastapi",
        "core.infrastructure.container",
        "core.infrastructure.config",
        "core.infrastructure.middleware.rate_limiter",
        "core.application.services.voice_service",
        "core.application.services.ai_service",
        "datetime",
        "core.domain.value_objects",
        "logging",
        "core.application.services.child_service"
      ],
      "core\\api\\__init__.py": [
        "endpoints",
        "fastapi"
      ],
      "core\\application\\health_monitoring.py": [
        "src.application.services.service_registry",
        "asyncio",
        "src.infrastructure.config",
        "datetime",
        "structlog",
        "enum",
        "typing",
        "prometheus_client",
        "src.infrastructure.observability",
        "src.infrastructure.external_services",
        "src.infrastructure.security.audit_logger",
        "dataclasses"
      ],
      "core\\application\\main_service.py": [
        "src.application.services.service_registry",
        "asyncio",
        "src.infrastructure.config",
        "datetime",
        "opentelemetry",
        "structlog",
        "uuid",
        "src.application.services.circuit_breaker",
        "enum",
        "typing",
        "prometheus_client",
        "src.infrastructure.observability",
        "src.infrastructure.security.audit_logger",
        "dataclasses"
      ],
      "core\\application\\story_service.py": [
        "src.audio.multi_voice_tts",
        "typing",
        "src.domain.story_generator"
      ],
      "core\\audio\\audio_io.py": [
        "tempfile",
        "shutil",
        "threading",
        "soundfile",
        "datetime",
        "uuid",
        "numpy",
        "logging",
        "pydub",
        "pathlib",
        "enum",
        "os",
        "typing",
        "pydub.effects",
        "contextlib",
        "json",
        "librosa",
        "dataclasses"
      ],
      "core\\audio\\audio_manager.py": [
        "pathlib",
        "os",
        "typing",
        "struct",
        "audio_io",
        "wave",
        "librosa",
        "tempfile",
        "asyncio",
        "pydub",
        "tts_playback",
        "pygame",
        "state_manager",
        "json",
        "dataclasses",
        "time",
        "pydub.playback",
        "soundfile",
        "datetime",
        "numpy",
        "io",
        "logging",
        "enum",
        "audio_recorder",
        "threading",
        "audio_processing",
        "traceback"
      ],
      "core\\audio\\audio_processing.py": [
        "scipy",
        "scipy.fft",
        "asyncio",
        "soundfile",
        "time",
        "numpy",
        "io",
        "unittest",
        "logging",
        "collections",
        "scipy.signal",
        "enum",
        "scipy.ndimage",
        "typing",
        "concurrent.futures",
        "webrtcvad",
        "librosa",
        "dataclasses"
      ],
      "core\\audio\\audio_processor.py": [
        "soundfile",
        "numpy",
        "pydub",
        "pathlib",
        "os",
        "librosa",
        "time"
      ],
      "core\\audio\\audio_recorder.py": [
        "scipy",
        "soundfile",
        "numpy",
        "logging",
        "os",
        "typing",
        "state_manager"
      ],
      "core\\audio\\hume_emotion_analyzer.py": [
        "tempfile",
        "hume.core.utilities",
        "asyncio",
        "base64",
        "datetime",
        "numpy",
        "hume",
        "pathlib",
        "os",
        "typing",
        "hume.models.config",
        "aiohttp",
        "random",
        "json",
        "dataclasses"
      ],
      "core\\audio\\modern_audio_manager.py": [
        "pathlib",
        "typing",
        "os",
        "random",
        "infrastructure.container",
        "asyncio",
        "structlog",
        "application.services.base_service",
        "json",
        "time",
        "dataclasses",
        "datetime",
        "numpy",
        "logging",
        "enum",
        "application.services.emotion_analyzer",
        "audio_manager",
        "hume_emotion_analyzer",
        "src.infrastructure.modern_container"
      ],
      "core\\audio\\multi_voice_tts.py": [
        "asyncio",
        "datetime",
        "numpy",
        "io",
        "pydub",
        "typing",
        "elevenlabs"
      ],
      "core\\audio\\speech_disorder_detector.py": [
        "datetime",
        "numpy",
        "collections",
        "typing",
        "librosa"
      ],
      "core\\audio\\state_manager.py": [
        "threading",
        "logging",
        "enum",
        "typing",
        "dataclasses"
      ],
      "core\\audio\\tts_playback.py": [
        "pydub.playback",
        "scipy.io.wavfile",
        "pydub",
        "pathlib",
        "os",
        "sounddevice"
      ],
      "core\\audio\\voice_enhancements.py": [
        "typing",
        "random"
      ],
      "core\\audio\\__init__.py": [
        "audio_manager",
        "audio_processing",
        "hume_emotion_analyzer",
        "tts_playback",
        "audio_io",
        "state_manager",
        "modern_audio_manager"
      ],
      "core\\domain\\analytics.py": [
        "typing",
        "json",
        "datetime",
        "sqlite3"
      ],
      "core\\domain\\behavioral_analyzer.py": [
        "asyncio",
        "datetime",
        "math",
        "enum",
        "typing",
        "random",
        "statistics",
        "json",
        "dataclasses"
      ],
      "core\\domain\\emotion_analyzer.py": [
        "pandas",
        "asyncio",
        "requests",
        "datetime",
        "hume",
        "hume.client",
        "typing",
        "json"
      ],
      "core\\domain\\emotion_config.py": [
        "typing",
        "dataclasses"
      ],
      "core\\domain\\story_generator.py": [
        "datetime",
        "typing",
        "re",
        "json",
        "openai"
      ],
      "core\\domain\\value_objects.py": [
        "typing",
        "dataclasses",
        "enum"
      ],
      "core\\domain\\__init__.py": [
        "value_objects"
      ],
      "core\\edge\\device_manager.py": [
        "asyncio",
        "typing",
        "psutil",
        "GPUtil",
        "platform"
      ],
      "core\\edge\\edge_orchestrator.py": [
        "typing",
        "asyncio",
        "edge_processor",
        "device_manager"
      ],
      "core\\edge\\edge_processor.py": [
        "typing",
        "tflite_runtime.interpreter",
        "asyncio",
        "numpy"
      ],
      "core\\infrastructure\\config.py": [
        "logging",
        "yaml",
        "pathlib",
        "os",
        "typing",
        "pydantic",
        "json",
        "dataclasses"
      ],
      "core\\infrastructure\\config_manager.py": [
        "logging",
        "config",
        "pathlib",
        "dotenv",
        "typing",
        "os",
        "jsonschema",
        "json"
      ],
      "core\\infrastructure\\container.py": [
        "application.services.child_service",
        "core.domain.repositories.child_repository",
        "core.infrastructure.security.api_key_validator",
        "core.infrastructure.monitoring.metrics",
        "domain.services.emotion_analyzer",
        "domain.repositories.child_repository",
        "application.services.voice_service",
        "core.infrastructure.config",
        "core.application.services.emotion_service",
        "application.services.emotion_service",
        "core.application.services.voice_service",
        "core.application.services.ai_service",
        "dependency_injector.wiring",
        "core.domain.services.emotion_analyzer",
        "logging",
        "core.infrastructure.session_manager",
        "core.application.services.child_service",
        "infrastructure.database.connection_pool",
        "infrastructure.security.api_key_validator",
        "core.infrastructure.persistence.child_sqlite_repository",
        "infrastructure.caching.cache_service",
        "core.infrastructure.caching.cache_service",
        "application.services.ai_service",
        "dependency_injector",
        "infrastructure.session_manager",
        "infrastructure.config",
        "core.infrastructure.database.connection_pool",
        "infrastructure.monitoring.metrics",
        "infrastructure.persistence.child_sqlite_repository"
      ],
      "core\\infrastructure\\enterprise_observability.py": [
        "opentelemetry",
        "functools",
        "os",
        "typing",
        "opentelemetry.sdk.trace.export",
        "contextlib",
        "opentelemetry.sdk.resources",
        "opentelemetry.sdk.trace",
        "json",
        "dataclasses",
        "time",
        "opentelemetry.semantic_conventions.resource",
        "datetime",
        "opentelemetry.instrumentation.asgi",
        "logging",
        "opentelemetry.instrumentation.fastapi",
        "opentelemetry.exporter.otlp.proto.grpc.trace_exporter",
        "prometheus_client",
        "threading",
        "traceback"
      ],
      "core\\infrastructure\\enterprise_session_manager.py": [
        "redis.asyncio",
        "asyncio",
        "datetime",
        "uuid",
        "structlog",
        "typing",
        "json",
        "time"
      ],
      "core\\infrastructure\\external_services.py": [
        "email.mime.text",
        "asyncio",
        "requests",
        "smtplib",
        "logging",
        "typing",
        "os",
        "email.mime.multipart"
      ],
      "core\\infrastructure\\file_manager.py": [
        "shutil",
        "uuid",
        "pathlib",
        "os",
        "typing"
      ],
      "core\\infrastructure\\modern_container.py": [
        "threading",
        "asyncio",
        "abc",
        "datetime",
        "structlog",
        "inspect",
        "logging",
        "dependency_injector.wiring",
        "contextvars",
        "tenacity",
        "enum",
        "typing",
        "weakref",
        "importlib",
        "concurrent.futures",
        "dependency_injector",
        "dataclasses"
      ],
      "core\\infrastructure\\observability.py": [
        "opentelemetry",
        "structlog",
        "functools",
        "logging",
        "opentelemetry.instrumentation.fastapi",
        "opentelemetry.instrumentation.logging",
        "opentelemetry.exporter.otlp.proto.grpc.trace_exporter",
        "typing",
        "opentelemetry.sdk.trace.export",
        "opentelemetry.exporter.prometheus",
        "opentelemetry.sdk.trace",
        "opentelemetry.exporter.jaeger.thrift",
        "time"
      ],
      "core\\infrastructure\\security.py": [
        "base64",
        "uuid",
        "pathlib",
        "os",
        "typing",
        "mimetypes",
        "re",
        "hashlib",
        "time"
      ],
      "core\\infrastructure\\session_manager.py": [
        "asyncio",
        "datetime",
        "uuid",
        "logging",
        "enum",
        "typing",
        "sqlalchemy.ext.declarative",
        "sqlalchemy.ext.asyncio",
        "sqlalchemy.orm",
        "sqlalchemy"
      ],
      "core\\infrastructure\\simple_observability.py": [],
      "core\\simulators\\cloud_server_launcher.py": [
        "threading",
        "tkinter",
        "requests",
        "datetime",
        "os",
        "subprocess",
        "sys",
        "psutil",
        "json",
        "time",
        "webbrowser"
      ],
      "core\\simulators\\complete_system_launcher.py": [
        "threading",
        "tkinter",
        "requests",
        "datetime",
        "os",
        "subprocess",
        "sys",
        "time"
      ],
      "core\\simulators\\esp32_production_simulator.py": [
        "uuid",
        "PySide6",
        "pathlib",
        "typing",
        "PySide6.QtGui",
        "wave",
        "PySide6.QtCore",
        "base64",
        "asyncio",
        "subprocess",
        "json",
        "dataclasses",
        "datetime",
        "numpy",
        "io",
        "logging",
        "aiohttp",
        "websockets",
        "sounddevice",
        "PySide6.QtWidgets",
        "concurrent.futures",
        "sys"
      ],
      "core\\simulators\\esp32_teddy_simulator.py": [
        "threading",
        "tkinter",
        "asyncio",
        "requests",
        "time",
        "datetime",
        "io",
        "uuid",
        "pygame",
        "random",
        "speech_recognition",
        "gtts",
        "json",
        "sys"
      ],
      "core\\simulators\\parent_mobile_app_simulator.py": [
        "threading",
        "tkinter",
        "requests",
        "datetime",
        "numpy",
        "matplotlib.backends.backend_tkagg",
        "matplotlib.pyplot",
        "json",
        "time"
      ],
      "core\\ui\\enterprise_dashboard.py": [
        "tempfile",
        "plotly.express",
        "asyncio",
        "datetime",
        "numpy",
        "structlog",
        "logging",
        "typing",
        "PySide6.QtWidgets",
        "random",
        "os",
        "PySide6.QtGui",
        "plotly.figure_factory",
        "plotly.graph_objects",
        "PySide6.QtCore",
        "PySide6.QtWebEngineWidgets"
      ],
      "core\\ui\\modern_ui.py": [
        "gzip",
        "plotly.express",
        "uuid",
        "pathlib",
        "typing",
        "random",
        "PySide6.QtGui",
        "noisereduce",
        "wave",
        "librosa",
        "PySide6.QtCore",
        "tempfile",
        "asyncio",
        "base64",
        "structlog",
        "plotly.graph_objects",
        "PySide6.QtWebSockets",
        "json",
        "time",
        "PySide6.QtWebEngineWidgets",
        "PySide6.QtNetwork",
        "datetime",
        "numpy",
        "io",
        "enterprise_dashboard",
        "logging",
        "sounddevice",
        "PySide6.QtCharts",
        "scipy",
        "plotly.offline",
        "scipy.signal",
        "PySide6.QtWidgets",
        "plotly.figure_factory",
        "psutil",
        "pyaudio",
        "librosa.display",
        "platform",
        "sys"
      ],
      "core\\ui\\__init__.py": [
        "dialogs",
        "widgets",
        "modern_ui"
      ],
      "core\\services\\grpc\\ai_service.py": [
        "asyncio",
        "grpc",
        "concurrent"
      ],
      "core\\services\\grpc\\audio_service.py": [
        "asyncio",
        "grpc",
        "concurrent"
      ],
      "core\\services\\grpc\\client.py": [
        "asyncio",
        "grpc"
      ],
      "core\\infrastructure\\caching\\cache_service.py": [
        "aioredis",
        "asyncio",
        "functools",
        "typing",
        "hashlib",
        "pickle"
      ],
      "core\\infrastructure\\caching\\simple_cache_service.py": [
        "asyncio",
        "functools",
        "logging",
        "typing",
        "hashlib",
        "time"
      ],
      "core\\infrastructure\\database\\connection_pool.py": [
        "asyncio",
        "datetime",
        "structlog",
        "tenacity",
        "typing",
        "sqlalchemy.ext.asyncio",
        "sqlalchemy",
        "sqlalchemy.orm",
        "contextlib",
        "sqlalchemy.pool"
      ],
      "core\\infrastructure\\middleware\\rate_limiter.py": [
        "typing",
        "collections",
        "fastapi",
        "time"
      ],
      "core\\infrastructure\\middleware\\security.py": [
        "secrets",
        "asyncio",
        "starlette.middleware.base",
        "datetime",
        "structlog",
        "fastapi.middleware.cors",
        "collections",
        "functools",
        "fastapi.middleware.trustedhost",
        "starlette.responses",
        "typing",
        "fastapi",
        "redis",
        "hashlib",
        "pydantic",
        "time"
      ],
      "core\\infrastructure\\persistence\\base_sqlite_repository.py": [
        "abc",
        "datetime",
        "sqlite3",
        "src.domain.repositories.base",
        "logging",
        "typing",
        "contextlib",
        "json"
      ],
      "core\\infrastructure\\persistence\\child_sqlite_repository.py": [
        "datetime",
        "uuid",
        "sqlite3",
        "src.domain.repositories.child_repository",
        "src.infrastructure.persistence.base_sqlite_repository",
        "os",
        "typing",
        "src.domain.entities.child",
        "src.domain.repositories.base",
        "json"
      ],
      "core\\infrastructure\\persistence\\conversation_sqlite_repository.py": [
        "datetime",
        "uuid",
        "sqlite3",
        "io",
        "csv",
        "collections",
        "src.domain.entities.conversation",
        "src.infrastructure.persistence.base_sqlite_repository",
        "os",
        "typing",
        "src.domain.repositories.conversation_repository",
        "src.domain.repositories.base",
        "json"
      ],
      "core\\infrastructure\\persistence\\models.py": [
        "datetime",
        "uuid",
        "sqlalchemy.sql",
        "typing",
        "sqlalchemy.ext.declarative",
        "sqlalchemy.dialects.sqlite",
        "sqlalchemy",
        "sqlalchemy.event",
        "sqlalchemy.ext.hybrid",
        "sqlalchemy.orm",
        "json"
      ],
      "core\\infrastructure\\persistence\\sqlalchemy_base_repository.py": [
        "asyncio",
        "abc",
        "datetime",
        "src.domain.repositories.base",
        "logging",
        "sqlalchemy.exc",
        "typing",
        "sqlalchemy.orm.query",
        "sqlalchemy",
        "contextlib",
        "sqlalchemy.orm"
      ],
      "core\\infrastructure\\persistence\\sqlalchemy_models.py": [
        "datetime",
        "uuid",
        "sqlalchemy.sql",
        "typing",
        "sqlalchemy.ext.declarative",
        "sqlalchemy.dialects.sqlite",
        "sqlalchemy",
        "sqlalchemy.ext.hybrid",
        "sqlalchemy.orm",
        "json"
      ],
      "core\\infrastructure\\persistence\\transcription_sqlite_repository.py": [
        "datetime",
        "src.domain.entities.transcription",
        "sqlite3",
        "src.infrastructure.persistence.base_sqlite_repository",
        "os",
        "contextlib",
        "wave",
        "src.domain.repositories.base"
      ],
      "core\\infrastructure\\processing\\async_processor.py": [
        "uuid",
        "typing",
        "librosa",
        "asyncio",
        "collections",
        "json",
        "dataclasses",
        "time",
        "signal",
        "datetime",
        "numpy",
        "logging",
        "contextvars",
        "enum",
        "weakref",
        "threading",
        "cv2",
        "traceback",
        "concurrent.futures",
        "PIL",
        "sys"
      ],
      "core\\infrastructure\\security\\audit.py": [
        "datetime",
        "enum",
        "sqlalchemy.ext.declarative",
        "json",
        "sqlalchemy"
      ],
      "core\\infrastructure\\security\\audit_logger.py": [
        "cryptography.hazmat.primitives",
        "asyncio",
        "time",
        "datetime",
        "structlog",
        "cryptography.hazmat.primitives.serialization",
        "enum",
        "cryptography.hazmat.primitives.asymmetric",
        "typing",
        "sqlalchemy.ext.declarative",
        "sqlalchemy",
        "hashlib",
        "json",
        "dataclasses"
      ],
      "core\\infrastructure\\security\\auth.py": [
        "secrets",
        "datetime",
        "typing",
        "jwt",
        "fastapi",
        "fastapi.security"
      ],
      "core\\infrastructure\\security\\data_encryption.py": [
        "cryptography.hazmat.primitives",
        "base64",
        "datetime",
        "structlog",
        "cryptography.hazmat.primitives.ciphers",
        "enum",
        "cryptography.hazmat.primitives.asymmetric",
        "os",
        "typing",
        "cryptography.hazmat.primitives.kdf.pbkdf2",
        "cryptography.fernet",
        "hashlib",
        "json",
        "dataclasses"
      ],
      "core\\infrastructure\\security\\encryption.py": [
        "cryptography.hazmat.primitives",
        "base64",
        "cryptography.hazmat.primitives.kdf.pbkdf2",
        "os",
        "typing",
        "cryptography.hazmat.primitives.ciphers.aead"
      ],
      "core\\infrastructure\\security\\enhanced_security.py": [
        "cryptography.hazmat.backends",
        "typing",
        "cryptography.fernet",
        "ipaddress",
        "fastapi.security",
        "bcrypt",
        "string",
        "asyncio",
        "structlog",
        "cryptography.hazmat.primitives.kdf.pbkdf2",
        "fastapi",
        "json",
        "dataclasses",
        "time",
        "secrets",
        "cryptography.hazmat.primitives",
        "redis.asyncio",
        "datetime",
        "math",
        "cryptography.hazmat.primitives.ciphers",
        "contextvars",
        "enum",
        "cryptography.hazmat.primitives.asymmetric",
        "slowapi",
        "re",
        "hashlib",
        "slowapi.util",
        "jwt",
        "hmac"
      ],
      "core\\infrastructure\\security\\__init__.py": [
        "encryption"
      ],
      "core\\domain\\entities\\audio_stream.py": [
        "datetime",
        "uuid",
        "numpy",
        "enum",
        "typing",
        "pydantic",
        "hashlib",
        "dataclasses"
      ],
      "core\\domain\\entities\\base.py": [
        "typing",
        "abc",
        "datetime",
        "uuid"
      ],
      "core\\domain\\entities\\child.py": [
        "datetime",
        "uuid",
        "enum",
        "typing",
        "re",
        "pydantic"
      ],
      "core\\domain\\entities\\child_aggregate.py": [
        "typing",
        "base",
        "dataclasses"
      ],
      "core\\domain\\entities\\conversation.py": [
        "datetime",
        "uuid",
        "collections",
        "enum",
        "typing",
        "re",
        "pydantic",
        "hashlib",
        "statistics"
      ],
      "core\\domain\\entities\\emotion_log.py": [
        "typing",
        "sqlmodel",
        "datetime"
      ],
      "core\\domain\\entities\\transcription.py": [
        "typing",
        "datetime",
        "dataclasses"
      ],
      "core\\domain\\family\\advanced_family_system.py": [
        "asyncio",
        "datetime",
        "uuid",
        "enum",
        "typing",
        "random",
        "json",
        "dataclasses"
      ],
      "core\\domain\\games\\enhanced_games_system.py": [
        "asyncio",
        "abc",
        "datetime",
        "enum",
        "typing",
        "random",
        "json",
        "dataclasses"
      ],
      "core\\domain\\games\\game_content.py": [
        "typing",
        "random"
      ],
      "core\\domain\\games\\voice_games_engine.py": [
        "datetime",
        "enum",
        "typing",
        "random",
        "json",
        "openai"
      ],
      "core\\domain\\repositories\\base.py": [
        "asyncio",
        "abc",
        "datetime",
        "enum",
        "typing",
        "contextlib",
        "dataclasses"
      ],
      "core\\domain\\repositories\\child_repository.py": [
        "asyncio",
        "abc",
        "datetime",
        "typing",
        "src.domain.entities.child",
        "src.domain.repositories.base"
      ],
      "core\\domain\\repositories\\conversation_repository.py": [
        "abc",
        "datetime",
        "src.domain.entities.conversation",
        "io",
        "csv",
        "collections",
        "enum",
        "typing",
        "src.domain.repositories.base",
        "json"
      ],
      "core\\domain\\repositories\\emotion_log_repository.py": [
        "typing",
        "sqlmodel",
        "src.domain.entities.emotion_log",
        "datetime"
      ],
      "core\\domain\\services\\advanced_emotion_analyzer.py": [
        "asyncio",
        "transformers",
        "datetime",
        "numpy",
        "uuid",
        "sqlalchemy.exc",
        "infrastructure.persistence.models",
        "typing",
        "struct",
        "sqlalchemy",
        "sqlalchemy.orm",
        "contextlib",
        "json",
        "librosa",
        "dataclasses",
        "infrastructure.persistence.sqlalchemy_models"
      ],
      "core\\domain\\services\\content_moderator.py": [
        "typing"
      ],
      "core\\domain\\services\\emotion_analyzer.py": [
        "typing"
      ],
      "core\\domain\\stories\\ai_story_generator.py": [
        "asyncio",
        "datetime",
        "enum",
        "typing",
        "random",
        "re",
        "json",
        "openai",
        "dataclasses"
      ],
      "core\\domain\\stories\\educational_story_games.py": [
        "asyncio",
        "datetime",
        "enum",
        "typing",
        "random",
        "json",
        "dataclasses"
      ],
      "core\\domain\\stories\\interactive_story_engine.py": [
        "asyncio",
        "abc",
        "datetime",
        "uuid",
        "enum",
        "typing",
        "random",
        "json",
        "dataclasses"
      ],
      "core\\audio\\cli\\process.py": [
        "audio_manager",
        "argparse",
        "audio_processing",
        "logging",
        "typing",
        "sys"
      ],
      "core\\audio\\cli\\record.py": [
        "audio_manager",
        "argparse",
        "logging",
        "typing",
        "sys"
      ],
      "core\\audio\\cli\\tts.py": [
        "audio_manager",
        "argparse",
        "logging",
        "typing",
        "sys"
      ],
      "core\\audio\\cli\\__init__.py": [],
      "core\\application\\events\\event_bus.py": [],
      "core\\application\\interfaces\\repositories.py": [
        "typing",
        "abc"
      ],
      "core\\application\\interfaces\\services.py": [
        "abc"
      ],
      "core\\application\\patterns\\observer.py": [],
      "core\\application\\patterns\\strategy.py": [],
      "core\\application\\services\\accessibility_service.py": [
        "datetime",
        "logging",
        "pathlib",
        "enum",
        "typing",
        "json",
        "dataclasses"
      ],
      "core\\application\\services\\advanced_personalization_service.py": [
        "datetime",
        "numpy",
        "logging",
        "collections",
        "pathlib",
        "typing",
        "json",
        "dataclasses"
      ],
      "core\\application\\services\\advanced_progress_analyzer.py": [
        "spacy",
        "asyncio",
        "transformers",
        "datetime",
        "anthropic",
        "logging",
        "collections",
        "enum",
        "typing",
        "textstat",
        "re",
        "nltk.sentiment",
        "nltk",
        "json",
        "openai",
        "dataclasses",
        "torch"
      ],
      "core\\application\\services\\ai_service.py": [
        "asyncio",
        "datetime",
        "openai.types.chat",
        "domain.value_objects",
        "functools",
        "logging",
        "dataclasses",
        "infrastructure.config",
        "typing",
        "domain.entities.child",
        "domain.services.emotion_analyzer",
        "random",
        "infrastructure.caching.simple_cache_service",
        "hashlib",
        "json",
        "openai",
        "time"
      ],
      "core\\application\\services\\ar_vr_service.py": [
        "base64",
        "datetime",
        "logging",
        "pathlib",
        "typing",
        "json",
        "dataclasses"
      ],
      "core\\application\\services\\azure_speech_to_text_service.py": [
        "src.domain.entities.transcription",
        "sqlite3",
        "os",
        "azure.cognitiveservices.speech",
        "src.infrastructure.persistence.transcription_sqlite_repository"
      ],
      "core\\application\\services\\base_service.py": [
        "abc",
        "datetime",
        "uuid",
        "domain.repositories.base",
        "logging",
        "typing",
        "domain.entities.child"
      ],
      "core\\application\\services\\child_service.py": [
        "datetime",
        "uuid",
        "logging",
        "base_service",
        "typing",
        "domain.entities.child",
        "domain.repositories.child_repository"
      ],
      "core\\application\\services\\circuit_breaker.py": [
        "asyncio",
        "time",
        "datetime",
        "structlog",
        "functools",
        "enum",
        "typing",
        "dataclasses"
      ],
      "core\\application\\services\\cloud_transcription_service.py": [
        "base64",
        "asyncio",
        "abc",
        "io",
        "structlog",
        "src.application.services.circuit_breaker",
        "tenacity",
        "enum",
        "typing",
        "azure.cognitiveservices.speech",
        "aiohttp",
        "google.cloud",
        "pydantic",
        "openai",
        "dataclasses"
      ],
      "core\\application\\services\\conversation_service.py": [
        "domain.entities.conversation",
        "datetime",
        "uuid",
        "logging",
        "base_service",
        "typing",
        "domain.entities.child",
        "domain.repositories.conversation_repository"
      ],
      "core\\application\\services\\email_service.py": [
        "email.mime.text",
        "asyncio",
        "smtplib",
        "structlog",
        "email",
        "logging",
        "pathlib",
        "typing",
        "aiosmtplib",
        "email.mime.base",
        "email.mime.multipart",
        "json"
      ],
      "core\\application\\services\\emotion_service.py": [
        "asyncio",
        "datetime",
        "sqlite3",
        "src.audio.hume_emotion_analyzer",
        "pathlib",
        "typing",
        "statistics",
        "json",
        "src.infrastructure.modern_container",
        "dataclasses"
      ],
      "core\\application\\services\\enhanced_hume_integration.py": [
        "pathlib",
        "os",
        "typing",
        "random",
        "hume",
        "librosa",
        "asyncio",
        "infrastructure.security.audit_logger",
        "infrastructure.persistence.conversation_sqlite_repository",
        "json",
        "dataclasses",
        "soundfile",
        "datetime",
        "numpy",
        "io",
        "logging",
        "enum",
        "domain.entities.child",
        "hashlib",
        "aiofiles",
        "concurrent.futures",
        "statistics"
      ],
      "core\\application\\services\\enhanced_parent_report_service.py": [
        "spacy",
        "asyncio",
        "datetime",
        "anthropic",
        "logging",
        "collections",
        "enum",
        "typing",
        "re",
        "nltk.sentiment",
        "nltk",
        "json",
        "openai",
        "dataclasses"
      ],
      "core\\application\\services\\health_service.py": [
        "gc",
        "tracemalloc",
        "src.application.services.service_registry",
        "asyncio",
        "datetime",
        "structlog",
        "dataclasses",
        "os",
        "typing",
        "prometheus_client",
        "psutil",
        "platform",
        "sys"
      ],
      "core\\application\\services\\issue_tracker_service.py": [
        "asyncio",
        "datetime",
        "sqlite3",
        "traceback",
        "structlog",
        "pathlib",
        "typing",
        "hashlib",
        "json"
      ],
      "core\\application\\services\\llm_service.py": [
        "google.generativeai",
        "anthropic",
        "logging",
        "enum",
        "typing",
        "openai"
      ],
      "core\\application\\services\\llm_service_factory.py": [
        "google.generativeai",
        "redis.asyncio",
        "asyncio",
        "abc",
        "datetime",
        "transformers",
        "anthropic",
        "src.infrastructure.config",
        "logging",
        "collections",
        "src.domain.entities.conversation",
        "enum",
        "typing",
        "hashlib",
        "json",
        "openai",
        "dataclasses",
        "torch"
      ],
      "core\\application\\services\\memory_service.py": [
        "pathlib",
        "os",
        "typing",
        "src.domain.entities.child",
        "transformers",
        "asyncio",
        "sqlite3",
        "collections",
        "aiosqlite",
        "json",
        "openai",
        "dataclasses",
        "sklearn.cluster",
        "redis.asyncio",
        "src.infrastructure.config",
        "datetime",
        "numpy",
        "logging",
        "enum",
        "sentence_transformers",
        "pickle",
        "torch",
        "src.domain.entities.conversation",
        "faiss"
      ],
      "core\\application\\services\\moderation_integration_example.py": [
        "typing",
        "asyncio",
        "openai",
        "application.services.moderation_service_modern"
      ],
      "core\\application\\services\\moderation_service.py": [
        "spacy",
        "uuid",
        "anthropic",
        "typing",
        "os",
        "transformers",
        "azure.ai.contentsafety.models",
        "asyncio",
        "collections",
        "csv",
        "azure.ai.contentsafety",
        "json",
        "openai",
        "dataclasses",
        "src.infrastructure.security.encryption",
        "redis.asyncio",
        "src.infrastructure.config",
        "datetime",
        "io",
        "logging",
        "enum",
        "sqlalchemy.ext.declarative",
        "google.cloud",
        "re",
        "hashlib",
        "src.domain.entities.conversation",
        "azure.core.credentials",
        "src.application.services.parent_dashboard_service",
        "sqlalchemy"
      ],
      "core\\application\\services\\moderation_service_modern.py": [
        "asyncio",
        "logging",
        "typing",
        "re",
        "hashlib",
        "openai",
        "dataclasses"
      ],
      "core\\application\\services\\notification_service.py": [
        "asyncio",
        "datetime",
        "sms_service",
        "structlog",
        "jinja2",
        "logging",
        "pathlib",
        "push_service",
        "rate_monitor_service",
        "enum",
        "typing",
        "issue_tracker_service",
        "database",
        "json",
        "dataclasses",
        "email_service"
      ],
      "core\\application\\services\\parent_dashboard_service.py": [
        "uuid",
        "src.domain.repositories.child_repository",
        "email",
        "os",
        "typing",
        "sqlalchemy",
        "src.domain.entities.child",
        "pytz",
        "redis",
        "asyncio",
        "base64",
        "jinja2",
        "collections",
        "apscheduler.schedulers.asyncio",
        "src.domain.repositories.conversation_repository",
        "json",
        "sqlalchemy.orm",
        "dataclasses",
        "pandas",
        "redis.asyncio",
        "src.infrastructure.config",
        "datetime",
        "numpy",
        "io",
        "logging",
        "enum",
        "sqlalchemy.ext.declarative",
        "aiosmtplib",
        "matplotlib.pyplot",
        "src.application.services.moderation_service",
        "email.mime.text",
        "src.domain.entities.conversation",
        "email.mime.base",
        "email.mime.multipart",
        "seaborn"
      ],
      "core\\application\\services\\parent_report_service.py": [
        "pandas",
        "base64",
        "seaborn",
        "datetime",
        "numpy",
        "io",
        "reportlab.platypus",
        "asyncio",
        "pathlib",
        "reportlab.lib.pagesizes",
        "typing",
        "matplotlib.pyplot",
        "reportlab.lib",
        "reportlab.lib.styles",
        "json",
        "reportlab.pdfgen",
        "openai",
        "dataclasses"
      ],
      "core\\application\\services\\progress_analyzer.py": [
        "asyncio",
        "datetime",
        "logging",
        "typing",
        "json",
        "openai",
        "dataclasses"
      ],
      "core\\application\\services\\push_service.py": [
        "httpx",
        "asyncio",
        "structlog",
        "logging",
        "pathlib",
        "typing",
        "json"
      ],
      "core\\application\\services\\rate_monitor_service.py": [
        "asyncio",
        "datetime",
        "sqlite3",
        "structlog",
        "collections",
        "pathlib",
        "typing",
        "json",
        "dataclasses"
      ],
      "core\\application\\services\\scheduler_service.py": [
        "apscheduler.triggers.interval",
        "apscheduler.triggers.cron",
        "asyncio",
        "datetime",
        "structlog",
        "logging",
        "apscheduler.jobstores.memory",
        "typing",
        "apscheduler.schedulers.asyncio",
        "database",
        "apscheduler.executors.asyncio",
        "json",
        "data_cleanup_service",
        "time",
        "notification_service"
      ],
      "core\\application\\services\\screen_time_manager.py": [
        "asyncio",
        "datetime",
        "logging",
        "pathlib",
        "typing",
        "json",
        "dataclasses"
      ],
      "core\\application\\services\\service_registry.py": [
        "asyncio",
        "abc",
        "datetime",
        "structlog",
        "enum",
        "typing",
        "dataclasses"
      ],
      "core\\application\\services\\simple_health_service.py": [
        "typing",
        "time",
        "datetime",
        "psutil"
      ],
      "core\\application\\services\\sms_service.py": [
        "httpx",
        "asyncio",
        "structlog",
        "logging",
        "pathlib",
        "typing",
        "json"
      ],
      "core\\application\\services\\speech_to_text_service.py": [
        "tempfile",
        "src.domain.entities.transcription",
        "sqlite3",
        "logging",
        "src.application.services.azure_speech_to_text_service",
        "os",
        "src.infrastructure.persistence.transcription_sqlite_repository",
        "re",
        "whisper"
      ],
      "core\\application\\services\\streaming_service.py": [
        "src.application.services.llm_service_factory",
        "uuid",
        "src.application.services.speech_to_text_service",
        "typing",
        "websockets.server",
        "gtts",
        "asyncio",
        "base64",
        "collections",
        "elevenlabs",
        "asyncio.log",
        "json",
        "openai",
        "time",
        "src.infrastructure.config",
        "datetime",
        "numpy",
        "io",
        "logging",
        "websockets",
        "src.application.services.moderation_service",
        "src.audio.state_manager",
        "src.domain.entities.conversation",
        "traceback",
        "websockets.client",
        "src.application.services.parent_dashboard_service",
        "src.domain.entities.audio_stream"
      ],
      "core\\application\\services\\voice_interaction_service.py": [
        "uuid",
        "torchaudio",
        "pathlib",
        "typing",
        "pydub.effects",
        "struct",
        "noisereduce",
        "wave",
        "src.domain.entities.child",
        "librosa",
        "asyncio",
        "collections",
        "pydub",
        "textblob",
        "elevenlabs",
        "json",
        "openai",
        "dataclasses",
        "src.core.application.interfaces.services",
        "soundfile",
        "src.infrastructure.config",
        "datetime",
        "numpy",
        "io",
        "scipy.io",
        "logging",
        "enum",
        "azure.cognitiveservices.speech",
        "re",
        "sounddevice",
        "whisper",
        "torch",
        "scipy",
        "src.application.services.streaming_service",
        "src.domain.emotion_analyzer",
        "langdetect",
        "src.domain.emotion_config",
        "pyrubberband",
        "webrtcvad",
        "src.domain.entities.audio_stream"
      ],
      "core\\application\\use_cases\\base.py": [],
      "core\\application\\use_cases\\start_conversation.py": [],
      "core\\application\\validators\\input_validator.py": [],
      "core\\application\\services\\ai\\ai_service.py": [
        "src.application.services.service_registry",
        "asyncio",
        "opentelemetry",
        "datetime",
        "structlog",
        "src.application.services.circuit_breaker",
        "response_generator",
        "core.infrastructure.session_manager",
        "models",
        "typing",
        "src.infrastructure.observability",
        "random",
        "emotion_analyzer",
        "src.infrastructure.security.data_encryption",
        "src.infrastructure.security.audit_logger"
      ],
      "core\\application\\services\\ai\\conversation_manager.py": [
        "src.application.services.service_registry",
        "opentelemetry",
        "datetime",
        "structlog",
        "core.infrastructure.session_manager",
        "typing",
        "src.infrastructure.observability",
        "dataclasses"
      ],
      "core\\application\\services\\ai\\educational_content.py": [
        "src.application.services.service_registry",
        "opentelemetry",
        "structlog",
        "typing",
        "random",
        "src.infrastructure.observability"
      ],
      "core\\application\\services\\ai\\emotion_analyzer.py": [
        "src.application.services.service_registry",
        "opentelemetry",
        "structlog",
        "enum",
        "typing",
        "src.infrastructure.observability",
        "re",
        "dataclasses"
      ],
      "core\\application\\services\\ai\\models.py": [
        "typing",
        "enum",
        "datetime",
        "dataclasses"
      ],
      "core\\application\\services\\ai\\modern_ai_service.py": [
        "opentelemetry",
        "anthropic",
        "pathlib",
        "config.secure_config",
        "typing",
        "src.domain.entities.child",
        "pydantic",
        "asyncio",
        "base64",
        "structlog",
        "tenacity",
        "openai",
        "time",
        "dataclasses",
        "datetime",
        "src.application.services.circuit_breaker",
        "logging",
        "enum",
        "prometheus_client",
        "abc",
        "sys"
      ],
      "core\\application\\services\\ai\\personality_engine.py": [
        "src.application.services.service_registry",
        "structlog",
        "typing",
        "random",
        "models"
      ],
      "core\\application\\services\\ai\\response_generator.py": [
        "src.application.services.service_registry",
        "asyncio",
        "opentelemetry",
        "structlog",
        "models",
        "typing",
        "src.infrastructure.observability",
        "random",
        "emotion_analyzer",
        "json"
      ],
      "core\\application\\services\\ai\\__init__.py": [
        "personality_engine",
        "conversation_manager",
        "response_generator",
        "models",
        "emotion_analyzer",
        "educational_content",
        "ai_service"
      ],
      "core\\application\\services\\audio\\synthesis_service.py": [
        "asyncio",
        "soundfile",
        "numpy",
        "io",
        "dataclasses",
        "logging",
        "pydub",
        "enum",
        "typing",
        "pydub.effects",
        "elevenlabs",
        "azure.cognitiveservices.speech",
        "domain.value_objects",
        "openai",
        "time"
      ],
      "core\\application\\services\\audio\\transcription_service.py": [
        "asyncio",
        "soundfile",
        "numpy",
        "domain.value_objects",
        "dataclasses",
        "logging",
        "torchaudio",
        "pathlib",
        "io",
        "typing",
        "whisper",
        "librosa",
        "openai",
        "time",
        "torch"
      ],
      "core\\application\\services\\audio\\voice_service.py": [
        "asyncio",
        "time",
        "datetime",
        "numpy",
        "logging",
        "synthesis_service",
        "typing",
        "domain.entities.child",
        "application.services.ai_service",
        "domain.value_objects",
        "dataclasses",
        "transcription_service"
      ],
      "core\\application\\services\\audio\\__init__.py": [
        "voice_service",
        "synthesis_service",
        "transcription_service"
      ],
      "core\\application\\services\\streaming\\audio_streamer.py": [
        "websocket_manager",
        "asyncio",
        "base64",
        "datetime",
        "numpy",
        "dataclasses",
        "logging",
        "collections",
        "typing",
        "fastapi",
        "time"
      ],
      "core\\application\\services\\streaming\\fastapi_integration.py": [
        "websocket_manager",
        "asyncio",
        "datetime",
        "uuid",
        "logging",
        "uvicorn",
        "audio_streamer",
        "typing",
        "fastapi.responses",
        "fastapi",
        "pydantic"
      ],
      "core\\application\\services\\streaming\\websocket_manager.py": [
        "asyncio",
        "datetime",
        "dataclasses",
        "logging",
        "typing",
        "fastapi",
        "json",
        "time"
      ],
      "core\\application\\services\\streaming\\__init__.py": [
        "websocket_manager",
        "audio_streamer"
      ],
      "core\\api\\docs\\api_documentation.py": [
        "fastapi.openapi.utils",
        "fastapi"
      ],
      "core\\api\\docs\\examples.py": [],
      "core\\api\\endpoints\\advanced.py": [
        "flask",
        "base64",
        "middleware.auth"
      ],
      "core\\api\\endpoints\\audio.py": [
        "flask",
        "datetime",
        "middleware.auth"
      ],
      "core\\api\\endpoints\\children.py": [
        "flask",
        "datetime",
        "middleware.auth"
      ],
      "core\\api\\endpoints\\conversations.py": [
        "flask",
        "datetime",
        "middleware.auth",
        "services.orchestrator"
      ],
      "core\\api\\endpoints\\parent_reports.py": [
        "asyncio",
        "datetime",
        "logging",
        "src.application.services.parent_report_service",
        "typing",
        "fastapi.responses",
        "fastapi",
        "pydantic",
        "json"
      ],
      "core\\api\\endpoints\\system.py": [
        "flask",
        "functools",
        "asyncio",
        "datetime"
      ],
      "core\\api\\endpoints\\teddy_hardware.py": [
        "httpx",
        "base64",
        "asyncio",
        "datetime",
        "uuid",
        "pathlib",
        "typing",
        "random",
        "src.application.services.ai.modern_ai_service",
        "fastapi",
        "pydantic",
        "json",
        "src.infrastructure.modern_container",
        "openai"
      ],
      "core\\api\\endpoints\\voice.py": [
        "tempfile",
        "base64",
        "asyncio",
        "datetime",
        "logging",
        "src.domain.services.advanced_emotion_analyzer",
        "typing",
        "os",
        "src.application.services.voice_service",
        "src.application.services.ai.modern_ai_service",
        "fastapi",
        "pydantic",
        "json",
        "src.infrastructure.modern_container"
      ],
      "core\\api\\endpoints\\__init__.py": [],
      "core\\api\\graphql\\app.py": [
        "fastapi.middleware.cors",
        "strawberry.fastapi",
        "fastapi",
        "schema"
      ],
      "core\\api\\graphql\\resolvers.py": [
        "typing",
        "datetime",
        "uuid"
      ],
      "core\\api\\graphql\\schema.py": [
        "typing",
        "datetime",
        "strawberry",
        "uuid"
      ],
      "core\\api\\middleware\\auth.py": [
        "functools",
        "jwt",
        "flask"
      ],
      "core\\api\\middleware\\__init__.py": [],
      "core\\api\\utils\\__init__.py": [],
      "core\\api\\websocket\\handlers.py": [
        "base64",
        "datetime",
        "logging",
        "flask_socketio",
        "jwt",
        "flask"
      ],
      "core\\api\\websocket\\__init__.py": [],
      "config\\config\\secure_config.py": [
        "secrets",
        "logging",
        "pathlib",
        "os",
        "typing",
        "cryptography.fernet",
        "dataclasses"
      ],
      "config\\config\\settings.py": [
        "os",
        "dotenv"
      ],
      "config\\config\\__init__.py": [],
      "api\\endpoints\\audio.py": [
        "asyncio",
        "io",
        "infrastructure.dependencies",
        "typing",
        "fastapi.responses",
        "fastapi",
        "services.voice_service",
        "services.ai_service"
      ],
      "api\\endpoints\\children.py": [
        "datetime",
        "infrastructure.dependencies",
        "typing",
        "fastapi",
        "pydantic"
      ],
      "api\\endpoints\\dashboard.py": [
        "datetime",
        "infrastructure.dependencies",
        "typing",
        "random",
        "fastapi"
      ],
      "api\\endpoints\\device.py": [
        "infrastructure.dependencies",
        "typing",
        "fastapi.responses",
        "fastapi",
        "pydantic",
        "services.voice_service",
        "services.ai_service"
      ],
      "api\\endpoints\\__init__.py": [
        "audio",
        "children",
        "dashboard",
        "device"
      ],
      "api\\websocket\\__init__.py": [
        "manager",
        "handlers"
      ]
    },
    "high_coupling": [
      {
        "file": "core\\application\\services\\voice_interaction_service.py",
        "import_count": 37
      },
      {
        "file": "core\\ui\\modern_ui.py",
        "import_count": 34
      },
      {
        "file": "core\\application\\services\\parent_dashboard_service.py",
        "import_count": 31
      },
      {
        "file": "core\\infrastructure\\container.py",
        "import_count": 29
      },
      {
        "file": "core\\infrastructure\\security\\enhanced_security.py",
        "import_count": 26
      },
      {
        "file": "core\\application\\services\\moderation_service.py",
        "import_count": 25
      },
      {
        "file": "core\\application\\services\\streaming_service.py",
        "import_count": 24
      },
      {
        "file": "core\\audio\\audio_manager.py",
        "import_count": 23
      },
      {
        "file": "core\\application\\services\\memory_service.py",
        "import_count": 20
      },
      {
        "file": "core\\api\\production_api.py",
        "import_count": 18
      }
    ],
    "dependency_metrics": {}
  },
  "security": {
    "bandit_summary": {
      "total_issues": 301,
      "severity_breakdown": {
        "LOW": 206,
        "MEDIUM": 87,
        "HIGH": 8
      },
      "top_issues": [
        {
          "code": "25             \"period\": period,\n26             \"total_interactions\": random.randint(10, 100),\n27             \"learning_time_minutes\": random.randint(60, 300),\n",
          "col_offset": 34,
          "end_col_offset": 57,
          "filename": ".\\api\\endpoints\\dashboard.py",
          "issue_confidence": "HIGH",
          "issue_cwe": {
            "id": 330,
            "link": "https://cwe.mitre.org/data/definitions/330.html"
          },
          "issue_severity": "LOW",
          "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
          "line_number": 26,
          "line_range": [
            26
          ],
          "more_info": "https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random",
          "test_id": "B311",
          "test_name": "blacklist"
        },
        {
          "code": "26             \"total_interactions\": random.randint(10, 100),\n27             \"learning_time_minutes\": random.randint(60, 300),\n28             \"favorite_topics\": [\n",
          "col_offset": 37,
          "end_col_offset": 60,
          "filename": ".\\api\\endpoints\\dashboard.py",
          "issue_confidence": "HIGH",
          "issue_cwe": {
            "id": 330,
            "link": "https://cwe.mitre.org/data/definitions/330.html"
          },
          "issue_severity": "LOW",
          "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
          "line_number": 27,
          "line_range": [
            27
          ],
          "more_info": "https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random",
          "test_id": "B311",
          "test_name": "blacklist"
        },
        {
          "code": "28             \"favorite_topics\": [\n29                 {\"topic\": \"\u0642\u0635\u0635\", \"count\": random.randint(5, 20)},\n30                 {\"topic\": \"\u0631\u064a\u0627\u0636\u064a\u0627\u062a\", \"count\": random.randint(3, 15)},\n",
          "col_offset": 45,
          "end_col_offset": 66,
          "filename": ".\\api\\endpoints\\dashboard.py",
          "issue_confidence": "HIGH",
          "issue_cwe": {
            "id": 330,
            "link": "https://cwe.mitre.org/data/definitions/330.html"
          },
          "issue_severity": "LOW",
          "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
          "line_number": 29,
          "line_range": [
            29
          ],
          "more_info": "https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random",
          "test_id": "B311",
          "test_name": "blacklist"
        },
        {
          "code": "29                 {\"topic\": \"\u0642\u0635\u0635\", \"count\": random.randint(5, 20)},\n30                 {\"topic\": \"\u0631\u064a\u0627\u0636\u064a\u0627\u062a\", \"count\": random.randint(3, 15)},\n31                 {\"topic\": \"\u0639\u0644\u0648\u0645\", \"count\": random.randint(2, 10)}\n",
          "col_offset": 53,
          "end_col_offset": 74,
          "filename": ".\\api\\endpoints\\dashboard.py",
          "issue_confidence": "HIGH",
          "issue_cwe": {
            "id": 330,
            "link": "https://cwe.mitre.org/data/definitions/330.html"
          },
          "issue_severity": "LOW",
          "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
          "line_number": 30,
          "line_range": [
            30
          ],
          "more_info": "https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random",
          "test_id": "B311",
          "test_name": "blacklist"
        },
        {
          "code": "30                 {\"topic\": \"\u0631\u064a\u0627\u0636\u064a\u0627\u062a\", \"count\": random.randint(3, 15)},\n31                 {\"topic\": \"\u0639\u0644\u0648\u0645\", \"count\": random.randint(2, 10)}\n32             ],\n",
          "col_offset": 47,
          "end_col_offset": 68,
          "filename": ".\\api\\endpoints\\dashboard.py",
          "issue_confidence": "HIGH",
          "issue_cwe": {
            "id": 330,
            "link": "https://cwe.mitre.org/data/definitions/330.html"
          },
          "issue_severity": "LOW",
          "issue_text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
          "line_number": 31,
          "line_range": [
            31
          ],
          "more_info": "https://bandit.readthedocs.io/en/1.8.5/blacklists/blacklist_calls.html#b311-random",
          "test_id": "B311",
          "test_name": "blacklist"
        }
      ]
    }
  },
  "ai_effectiveness": {
    "ai_services_used": {
      "openai": [
        "advanced_analysis_script.py",
        "analysis_script.py",
        "config\\secure_config.py",
        "config\\settings.py",
        "core\\setup.py",
        "infrastructure\\config.py",
        "scripts\\generate_env.py",
        "scripts\\migrate_config.py",
        "scripts\\model_benchmark.py",
        "scripts\\system_diagnostics.py",
        "services\\ai_service.py",
        "simulator\\complete_system_launcher.py",
        "tests\\integration\\test_ai_service_integration.py",
        "tests\\unit\\test_clean_container.py",
        "tests\\unit\\test_conversation_repository.py",
        "tests\\tests\\integration\\test_ai_service_integration.py",
        "tests\\tests\\unit\\test_conversation_repository.py",
        "core\\api\\game_endpoints.py",
        "core\\application\\story_service.py",
        "core\\domain\\story_generator.py",
        "core\\infrastructure\\config.py",
        "core\\infrastructure\\container.py",
        "core\\simulators\\complete_system_launcher.py",
        "core\\infrastructure\\persistence\\models.py",
        "core\\infrastructure\\processing\\async_processor.py",
        "core\\domain\\games\\voice_games_engine.py",
        "core\\domain\\stories\\ai_story_generator.py",
        "core\\application\\services\\advanced_progress_analyzer.py",
        "core\\application\\services\\ai_service.py",
        "core\\application\\services\\cloud_transcription_service.py",
        "core\\application\\services\\enhanced_parent_report_service.py",
        "core\\application\\services\\llm_service.py",
        "core\\application\\services\\llm_service_factory.py",
        "core\\application\\services\\memory_service.py",
        "core\\application\\services\\moderation_integration_example.py",
        "core\\application\\services\\moderation_service.py",
        "core\\application\\services\\moderation_service_modern.py",
        "core\\application\\services\\parent_report_service.py",
        "core\\application\\services\\progress_analyzer.py",
        "core\\application\\services\\streaming_service.py",
        "core\\application\\services\\voice_interaction_service.py",
        "core\\application\\services\\ai\\modern_ai_service.py",
        "core\\application\\services\\audio\\synthesis_service.py",
        "core\\application\\services\\audio\\transcription_service.py",
        "core\\application\\services\\audio\\voice_service.py",
        "core\\api\\endpoints\\teddy_hardware.py",
        "config\\config\\secure_config.py",
        "config\\config\\settings.py"
      ],
      "hume": [
        "advanced_analysis_script.py",
        "analysis_script.py",
        "config\\settings.py",
        "core\\database.py",
        "core\\enhanced_hume_2025.py",
        "core\\enhanced_hume_integration_2025.py",
        "core\\hume_fixed.py",
        "core\\hume_integration.py",
        "core\\setup.py",
        "domain\\models.py",
        "infrastructure\\config.py",
        "services\\ai_service.py",
        "tests\\test_basic_functionality.py",
        "tests\\test_integration.py",
        "tests\\tests\\test_basic_functionality.py",
        "tests\\tests\\test_integration.py",
        "tests\\unit\\test_conversation_repository.py",
        "tests\\unit\\test_emotion_analyzer.py",
        "tests\\tests\\unit\\test_conversation_repository.py",
        "tests\\tests\\unit\\test_emotion_analyzer.py",
        "core\\api\\__init__.py",
        "core\\application\\health_monitoring.py",
        "core\\application\\main_service.py",
        "core\\audio\\hume_emotion_analyzer.py",
        "core\\audio\\modern_audio_manager.py",
        "core\\audio\\__init__.py",
        "core\\domain\\behavioral_analyzer.py",
        "core\\domain\\emotion_analyzer.py",
        "core\\infrastructure\\config.py",
        "core\\ui\\modern_ui.py",
        "core\\infrastructure\\persistence\\conversation_sqlite_repository.py",
        "core\\infrastructure\\persistence\\models.py",
        "core\\infrastructure\\processing\\async_processor.py",
        "core\\domain\\entities\\conversation.py",
        "core\\domain\\repositories\\conversation_repository.py",
        "core\\domain\\services\\advanced_emotion_analyzer.py",
        "core\\application\\services\\advanced_progress_analyzer.py",
        "core\\application\\services\\ai_service.py",
        "core\\application\\services\\emotion_service.py",
        "core\\application\\services\\enhanced_hume_integration.py",
        "core\\application\\services\\enhanced_parent_report_service.py",
        "core\\application\\services\\parent_report_service.py",
        "core\\application\\services\\progress_analyzer.py",
        "core\\application\\services\\voice_interaction_service.py",
        "core\\application\\services\\ai\\ai_service.py",
        "core\\application\\services\\ai\\emotion_analyzer.py",
        "core\\application\\services\\ai\\models.py",
        "core\\application\\services\\ai\\response_generator.py",
        "core\\application\\services\\ai\\__init__.py",
        "core\\api\\endpoints\\advanced.py",
        "core\\api\\endpoints\\voice.py",
        "config\\config\\settings.py",
        "api\\endpoints\\dashboard.py"
      ],
      "elevenlabs": [
        "advanced_analysis_script.py",
        "analysis_script.py",
        "config\\secure_config.py",
        "config\\settings.py",
        "core\\setup.py",
        "infrastructure\\config.py",
        "scripts\\generate_env.py",
        "scripts\\system_diagnostics.py",
        "services\\voice_service.py",
        "simulator\\esp32_production_simulator.py",
        "simulator\\esp32_teddy_simulator.py",
        "core\\application\\main_service.py",
        "core\\application\\story_service.py",
        "core\\audio\\audio_manager.py",
        "core\\audio\\modern_audio_manager.py",
        "core\\audio\\multi_voice_tts.py",
        "core\\audio\\__init__.py",
        "core\\infrastructure\\config.py",
        "core\\simulators\\esp32_production_simulator.py",
        "core\\simulators\\esp32_teddy_simulator.py",
        "core\\domain\\entities\\audio_stream.py",
        "core\\audio\\cli\\tts.py",
        "core\\audio\\cli\\__init__.py",
        "core\\application\\services\\streaming_service.py",
        "core\\application\\services\\voice_interaction_service.py",
        "core\\application\\services\\voice_service.py",
        "core\\application\\services\\audio\\synthesis_service.py",
        "core\\application\\services\\audio\\voice_service.py",
        "core\\api\\endpoints\\teddy_hardware.py",
        "core\\api\\endpoints\\voice.py",
        "config\\config\\secure_config.py",
        "config\\config\\settings.py",
        "api\\endpoints\\audio.py"
      ]
    },
    "performance_kpis": {
      "estimated_response_time_ms": 2500,
      "concurrent_requests_capacity": 50,
      "ai_accuracy_target": 85
    }
  }
}