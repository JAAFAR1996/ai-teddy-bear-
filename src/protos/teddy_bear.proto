syntax = "proto3";

package teddybear;

service AudioService {
    rpc ProcessAudio(AudioRequest) returns (AudioResponse);
    rpc StreamAudio(stream AudioChunk) returns (stream AudioChunk);
}

service AIService {
    rpc GenerateResponse(GenerateRequest) returns (GenerateResponse);
    rpc StreamResponse(GenerateRequest) returns (stream TextChunk);
}

message AudioRequest {
    bytes audio_data = 1;
    string format = 2;
    int32 sample_rate = 3;
    string child_id = 4;
}

message AudioResponse {
    bytes processed_audio = 1;
    string transcription = 2;
    repeated string detected_emotions = 3;
    float confidence = 4;
}

message AudioChunk {
    bytes data = 1;
    int32 sequence = 2;
    bool is_final = 3;
}

message GenerateRequest {
    string message = 1;
    string child_id = 2;
    map<string, string> context = 3;
    string response_type = 4;
}

message GenerateResponse {
    string response_text = 1;
    string emotion = 2;
    float confidence = 3;
    repeated string suggestions = 4;
}

message TextChunk {
    string text = 1;
    bool is_final = 2;
}