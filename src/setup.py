# [AI-Generated by Amazon Q]: تم إضافة هذا الكود تلقائياً وفق دليل المشروع.
#!/usr/bin/env python3
"""
سكريبت إعداد وتشغيل مشروع AI Teddy Bear
"""
import structlog
logger = structlog.get_logger(__name__)


import os
import sys
import subprocess
from pathlib import Path

def create_directories():
    """إنشاء المجلدات المطلوبة"""
    directories = [
        "data",
        "uploads/audio",
        "uploads/temp", 
        "outputs/stories",
        "outputs/responses",
        "outputs/processed",
        "static/css",
        "static/js",
        "static/images",
        "logs"
    ]
    
    for directory in directories:
        Path(directory).mkdir(parents=True, exist_ok=True)
        print(f"✓ تم إنشاء مجلد: {directory}")

def install_requirements():
    """تثبيت المتطلبات"""
    print("📦 تثبيت المتطلبات...")
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])
        print("✓ تم تثبيت جميع المتطلبات بنجاح")
    except Exception as e:
    logger.error(f"Error: {e}")"❌ فشل في تثبيت المتطلبات")
        return False
    return True

def create_env_file():
    """إنشاء ملف البيئة"""
    env_content = """# [AI-Generated by Amazon Q]: ملف متغيرات البيئة

# مفاتيح API (يجب تعبئتها)
OPENAI_API_KEY=your_openai_key_here
HUME_API_KEY=your_hume_key_here
ELEVENLABS_API_KEY=your_elevenlabs_key_here
DEEPGRAM_API_KEY=your_deepgram_key_here

# قاعدة البيانات
DATABASE_URL=sqlite:///data/teddy_bear.db

# إعدادات البريد الإلكتروني
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
EMAIL_USERNAME=your_email@gmail.com
EMAIL_PASSWORD=your_app_password

# إعدادات الأمان
MAX_FILE_SIZE=10485760
RATE_LIMIT_PER_MINUTE=60

# إعدادات التطبيق
DEBUG=False
HOST=0.0.0.0
PORT=8000
"""
    
    if not Path(".env").exists():
        with open(".env", "w", encoding="utf-8") as f:
            f.write(env_content)
        print("✓ تم إنشاء ملف .env")
        print("⚠️  يرجى تعبئة مفاتيح API في ملف .env")
    else:
        print("✓ ملف .env موجود بالفعل")

def initialize_database():
    """تهيئة قاعدة البيانات"""
    print("🗄️  تهيئة قاعدة البيانات...")
    try:
        from src.data.database import Database
        db = Database()
        print("✓ تم تهيئة قاعدة البيانات بنجاح")
    except Exception as e:
    logger.error(f"Error: {e}")f"❌ فشل في تهيئة قاعدة البيانات: {e}")

def run_tests():
    """تشغيل الاختبارات"""
    print("🧪 تشغيل الاختبارات...")
    try:
        subprocess.check_call([sys.executable, "-m", "pytest", "tests/", "-v"])
        print("✓ جميع الاختبارات نجحت")
    except Exception as e:
    logger.error(f"Error: {e}")"⚠️  بعض الاختبارات فشلت")
    except Exception as e:
    logger.error(f"Error: {e}")"ℹ️  لا توجد اختبارات للتشغيل")

def main():
    """الدالة الرئيسية للإعداد"""
    print("🚀 بدء إعداد مشروع AI Teddy Bear")
    print("=" * 50)
    
    # إنشاء المجلدات
    create_directories()
    
    # تثبيت المتطلبات
    if not install_requirements():
        return
    
    # إنشاء ملف البيئة
    create_env_file()
    
    # تهيئة قاعدة البيانات
    initialize_database()
    
    # تشغيل الاختبارات
    run_tests()
    
    print("\n" + "=" * 50)
    print("✅ تم إعداد المشروع بنجاح!")
    print("\n📋 خطوات التشغيل:")
    print("1. تعبئة مفاتيح API في ملف .env")
    print("2. تشغيل الأمر: python main.py")
    print("3. فتح المتصفح على: http://localhost:8000")
    print("\n🔧 للمساعدة:")
    print("- لوحة الأهل: http://localhost:8000")
    print("- API التفاعل: http://localhost:8000/interact")
    print("- WebSocket: ws://localhost:8000/ws/{child_id}")

if __name__ == "__main__":
    main()