"""
Enterprise_Dashboard Facade - Backward Compatibility
واجهة للحفاظ على التوافق مع النسخة السابقة

This file maintains backward compatibility while the actual implementation
has been split into smaller, more manageable components.

Generated by God Class Splitter
"""

# Import all components
from .enterprise_componentsdashboard import *

# Legacy class facade


class EmotionAnalyticsEngineCoreFacade:
    """Legacy facade for EmotionAnalyticsEngineCore"""

    def __init__(self):
        self.emotionanalyticsenginecore = EmotionAnalyticsEngineCore()

    def __getattr__(self, name):
        return getattr(self.emotionanalyticsenginecore, name)


# Alias for backward compatibility
EmotionAnalyticsEngineCore = EmotionAnalyticsEngineCoreFacade


class EmotionAnalyticsEngineUtilityFacade:
    """Legacy facade for EmotionAnalyticsEngineUtility"""

    def __init__(self):
        self.emotionanalyticsengineutility = EmotionAnalyticsEngineUtility()

    def __getattr__(self, name):
        return getattr(self.emotionanalyticsengineutility, name)


# Alias for backward compatibility
EmotionAnalyticsEngineUtility = EmotionAnalyticsEngineUtilityFacade


class SmartAlertSystemCoreFacade:
    """Legacy facade for SmartAlertSystemCore"""

    def __init__(self):
        self.smartalertsystemcore = SmartAlertSystemCore()

    def __getattr__(self, name):
        return getattr(self.smartalertsystemcore, name)


# Alias for backward compatibility
SmartAlertSystemCore = SmartAlertSystemCoreFacade


class SmartAlertSystemProcessingFacade:
    """Legacy facade for SmartAlertSystemProcessing"""

    def __init__(self):
        self.smartalertsystemprocessing = SmartAlertSystemProcessing()

    def __getattr__(self, name):
        return getattr(self.smartalertsystemprocessing, name)


# Alias for backward compatibility
SmartAlertSystemProcessing = SmartAlertSystemProcessingFacade


class SmartAlertSystemNotificationFacade:
    """Legacy facade for SmartAlertSystemNotification"""

    def __init__(self):
        self.smartalertsystemnotification = SmartAlertSystemNotification()

    def __getattr__(self, name):
        return getattr(self.smartalertsystemnotification, name)


# Alias for backward compatibility
SmartAlertSystemNotification = SmartAlertSystemNotificationFacade


class SmartAlertSystemUtilityFacade:
    """Legacy facade for SmartAlertSystemUtility"""

    def __init__(self):
        self.smartalertsystemutility = SmartAlertSystemUtility()

    def __getattr__(self, name):
        return getattr(self.smartalertsystemutility, name)


# Alias for backward compatibility
SmartAlertSystemUtility = SmartAlertSystemUtilityFacade


class EnterpriseDashboardWidgetCoreFacade:
    """Legacy facade for EnterpriseDashboardWidgetCore"""

    def __init__(self):
        self.enterprisedashboardwidgetcore = EnterpriseDashboardWidgetCore()

    def __getattr__(self, name):
        return getattr(self.enterprisedashboardwidgetcore, name)


# Alias for backward compatibility
EnterpriseDashboardWidgetCore = EnterpriseDashboardWidgetCoreFacade


class EnterpriseDashboardWidgetProcessingFacade:
    """Legacy facade for EnterpriseDashboardWidgetProcessing"""

    def __init__(self):
        self.enterprisedashboardwidgetprocessing = EnterpriseDashboardWidgetProcessing()

    def __getattr__(self, name):
        return getattr(self.enterprisedashboardwidgetprocessing, name)


# Alias for backward compatibility
EnterpriseDashboardWidgetProcessing = EnterpriseDashboardWidgetProcessingFacade


class EnterpriseDashboardWidgetNotificationFacade:
    """Legacy facade for EnterpriseDashboardWidgetNotification"""

    def __init__(self):
        self.enterprisedashboardwidgetnotification = (
            EnterpriseDashboardWidgetNotification()
        )

    def __getattr__(self, name):
        return getattr(self.enterprisedashboardwidgetnotification, name)


# Alias for backward compatibility
EnterpriseDashboardWidgetNotification = EnterpriseDashboardWidgetNotificationFacade


class EnterpriseDashboardWidgetUtilityFacade:
    """Legacy facade for EnterpriseDashboardWidgetUtility"""

    def __init__(self):
        self.enterprisedashboardwidgetutility = EnterpriseDashboardWidgetUtility()

    def __getattr__(self, name):
        return getattr(self.enterprisedashboardwidgetutility, name)


# Alias for backward compatibility
EnterpriseDashboardWidgetUtility = EnterpriseDashboardWidgetUtilityFacade
