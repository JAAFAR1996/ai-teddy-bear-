from typing import Any

"""
Utility Functions - Extracted from large service
دوال مساعدة منفصلة من خدمة كبيرة

Generated by God Class Splitter
"""


def create_age_appropriate_rule() -> Any:
    """Return a rule callable that verifies content suitability for the child's age.

    The returned function signature is ``(message:str, child_age:int) -> bool`` and
    should return *True* when the *message* is **acceptable** for the given age.

    NOTE: This is a lightweight implementation meant to replace the placeholder so
    that higher-level services stop raising *NotImplementedError*. It can easily be
    swapped لاحقًا بواجهة AI أكثر تعقيدًا.
    """

    forbidden_under_13 = {"violence", "blood", "kill", "sex"}

    def _rule(message: str, child_age: int) -> bool:  # noqa: D401
        # Simple keyword-based check – will evolve later.
        content = message.lower()
        if child_age < 13 and any(bad_word in content for bad_word in forbidden_under_13):
            return False
        return True

    return _rule


def create_topic_filter_rule() -> Any:
    """Return a rule callable that filters messages containing banned topics.

    The returned function signature is ``(message:str) -> bool`` and returns
    *True* when the message is **allowed**.
    """

    banned_topics = {"politics", "religion"}

    def _rule(message: str) -> bool:  # noqa: D401
        content = message.lower()
        return not any(topic in content for topic in banned_topics)

    return _rule
